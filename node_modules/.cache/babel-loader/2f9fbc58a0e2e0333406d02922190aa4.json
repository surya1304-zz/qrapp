{"ast":null,"code":"import _classCallCheck from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/plantstats/plantstats.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './plantstats.css';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport { Redirect, withRouter } from \"react-router\";\n\nvar PlantStats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlantStats, _Component);\n\n  function PlantStats(props) {\n    var _this;\n\n    _classCallCheck(this, PlantStats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlantStats).call(this, props));\n    _this.pr = {\n      cycle: \"<div><span>Current Cycle - </span><strong>\".concat(_this.props.number, \"</strong></div>\"),\n      select: \"\",\n      startDate: \"<div><span>StartDate - </span><strong>\" + _this.props.startDate + \"</strong></div>\",\n      endDate: \"<div><span>ExpectedEndDate - </span><strong>\" + _this.props.endDate + \"</strong></div>\"\n    };\n    _this.state = {\n      number: 14,\n      current: 0,\n      startDate: '16/10/2019',\n      endDate: '1/11/2019',\n      redirect: false,\n      plant: _this.props.plants.split('&')[0].toLowerCase()\n    };\n    _this.onCycleFixed = _this.onCycleFixed.bind(_assertThisInitialized(_this));\n    _this.setStateSynchronous = _this.setStateSynchronous.bind(_assertThisInitialized(_this));\n    _this.handler3 = _this.handler3.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PlantStats, [{\n    key: \"setStateSynchronous\",\n    value: function setStateSynchronous(stateUpdate) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.setState(stateUpdate, function () {\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (!this.props.signedIn) {\n        this.setState({\n          redirect: true\n        });\n      }\n\n      if (this.props.role === 'admin') {\n        fetch(\"http://localhost:3000/check-cycle\", {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            plant: this.state.plant\n          })\n        }).then(function (resp) {\n          return resp.json();\n        }).then(function (hell) {\n          console.log(hell);\n\n          if (hell['body'] === 1) {\n            var p = prompt('The Cycle has been completed,shall you want the cycle to start from today. Enter Y to start');\n\n            if (p === 'Y') {\n              var a = prompt('The Cycle will be completed within:(no of days)');\n              fetch(\"http://localhost:3000/create-cycle\", {\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  plant: _this3.state.plant,\n                  startToday: hell['body'],\n                  estimatedDuration: a\n                })\n              }).then(function (data) {\n                return alert('Success');\n              });\n            }\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n\n      fetch('http://localhost:3000/get-cycle-data', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var startDate = data.startDate,\n            endDate = data.endDate,\n            currentCycle = data.currentCycle;\n\n        _this3.setState({\n          startDate: startDate,\n          endDate: endDate,\n          number: currentCycle\n        });\n      });\n    }\n  }, {\n    key: \"handler3\",\n    value: function handler3() {\n      var body = document.getElementById('hello1');\n      body.classList.toggle('fill');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var items = [];\n\n      for (var i = 1; i < this.state.number; i++) {\n        items.push(React.createElement(\"option\", {\n          value: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, i));\n      }\n\n      items.push(React.createElement(\"option\", {\n        value: this.state.number,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.number));\n\n      if (this.state.redirect) {\n        alert(\"SignIn to Access the Info\");\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(FinalNav, {\n        fname: this.props.fname,\n        role: this.props.role,\n        plants: this.props.plants,\n        pr: this.pr,\n        handler: this.props.handler,\n        number: this.state.number,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        plantstats: true,\n        handle: this.handler3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"hello1\",\n        className: \"fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Select cycle\")), React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"cycleNumber\",\n        onChange: this.onCycleFixed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \" \", items)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"The Graph comes here\"), React.createElement(\"canvas\", {\n        id: \"myGraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"onCycleFixed\",\n    value: function onCycleFixed(e) {\n      var _this4 = this;\n\n      e.preventDefault();\n      this.setStateSynchronous({\n        current: Number(e.target.value)\n      }).then(function (bro) {\n        var date = new Date();\n        var date1 = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n        console.log(date1);\n        fetch('http://localhost:3000/getplantonparticulardate', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            plant: _this4.state.plant,\n            startDate: _this4.state.startDate,\n            presentDate: date1,\n            cycle: _this4.state.current\n          })\n        });\n      });\n    }\n  }]);\n\n  return PlantStats;\n}(Component);\n\nexport default withRouter(PlantStats);","map":{"version":3,"sources":["/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/plantstats/plantstats.js"],"names":["React","Component","$","Popper","FinalNav","Redirect","withRouter","PlantStats","props","pr","cycle","number","select","startDate","endDate","state","current","redirect","plant","plants","split","toLowerCase","onCycleFixed","bind","setStateSynchronous","handler3","stateUpdate","Promise","resolve","setState","signedIn","role","fetch","method","headers","body","JSON","stringify","then","resp","json","hell","console","log","p","prompt","a","startToday","estimatedDuration","data","alert","catch","err","res","currentCycle","document","getElementById","classList","toggle","items","i","push","fname","handler","e","preventDefault","Number","target","value","bro","date","Date","date1","getFullYear","getMonth","slice","getDate","presentDate"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './plantstats.css'\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport {Redirect, withRouter} from \"react-router\";\n\nclass PlantStats extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            number: 14,\n            current: 0,\n            startDate: '16/10/2019',\n            endDate: '1/11/2019',\n            redirect : false,\n            plant : this.props.plants.split('&')[0].toLowerCase(),\n        };\n        this.onCycleFixed = this.onCycleFixed.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.handler3 = this.handler3.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle : `<div><span>Current Cycle - </span><strong>${this.props.number}</strong></div>`,\n        select : ``,\n        startDate : \"<div><span>StartDate - </span><strong>\"+this.props.startDate+\"</strong></div>\",\n        endDate : \"<div><span>ExpectedEndDate - </span><strong>\"+this.props.endDate+\"</strong></div>\",\n    };\n\n    componentDidMount() {\n        if (!this.props.signedIn) {\n            this.setState({\n                redirect: true,\n            });\n        }\n        if(this.props.role === 'admin')\n        {\n            fetch(\"http://localhost:3000/check-cycle\",{\n                method : 'post',\n                headers : {\n                    'Content-Type' : 'application/json',\n                },\n                body : JSON.stringify({\n                    plant : this.state.plant,\n                })\n            })\n                .then(resp=> resp.json())\n                .then( hell =>\n                {\n                    console.log(hell);\n                    if(hell['body'] === 1){\n                        const p = prompt('The Cycle has been completed,shall you want the cycle to start from today. Enter Y to start');\n                        if(p === 'Y')\n                        {\n                            const a = prompt('The Cycle will be completed within:(no of days)');\n                            fetch(\"http://localhost:3000/create-cycle\",\n                                {\n                                    method : 'post',\n                                    headers : {\n                                        'Content-Type' : 'application/json',\n                                    },\n                                    body : JSON.stringify({\n                                        plant : this.state.plant,\n                                        startToday : hell['body'],\n                                        estimatedDuration : a,\n                                    })\n                                }\n                            ).then(data => alert('Success'))\n                        }\n                    }\n                })\n                .catch(err=>console.log(err));\n        }\n        fetch('http://localhost:3000/get-cycle-data',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n            })\n        })\n            .then(res=>res.json())\n            .then(data=>{\n                let { startDate,endDate,currentCycle } = data;\n                this.setState({\n                    startDate: startDate,\n                    endDate: endDate,\n                    number: currentCycle,\n                });\n            });\n    }\n\n    handler3(){\n        let body = document.getElementById('hello1');\n        body.classList.toggle('fill');\n    }\n\n    render() {\n        let items = [];\n        for (let i=1;i<this.state.number;i++) {\n            items.push(<option value={i}>{i}</option>);\n        }\n        items.push(<option value={this.state.number} selected>{this.state.number}</option>);\n        if(this.state.redirect){\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n\n        return(\n            <div>\n                <FinalNav fname={this.props.fname}\n                          role={this.props.role}\n                          plants={this.props.plants}\n                          pr={this.pr}\n                          handler = {this.props.handler}\n                          number={this.state.number}\n                          startDate={this.state.startDate}\n                          endDate={this.state.endDate}\n                          plantstats={true}\n                          handle={this.handler3}\n                />\n                <div id=\"hello1\" className='fill'>\n                    <div><span><strong>Select cycle</strong></span><select className=\"form-control\" name='cycleNumber' onChange={this.onCycleFixed}> {items}</select></div><br/>\n                    <p>The Graph comes here</p>\n                    <canvas id=\"myGraph\">\n                    </canvas>\n                </div>\n            </div>\n        );\n    }\n\n    onCycleFixed(e) {\n        e.preventDefault();\n        this.setStateSynchronous(({current: Number(e.target.value)})).then( bro => {\n                const date = new Date();\n                let date1 = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n                console.log(date1);\n                fetch('http://localhost:3000/getplantonparticulardate',{\n                    method : 'post',\n                    headers : {\n                        'Content-Type' : 'application/json',\n                    },\n                    body : JSON.stringify({\n                        plant : this.state.plant,\n                        startDate : this.state.startDate,\n                        presentDate : date1,\n                        cycle : this.state.current,\n                    })\n                })\n        }\n        )\n    }\n}\n\nexport default withRouter(PlantStats);\n\n\n"]},"metadata":{},"sourceType":"module"}