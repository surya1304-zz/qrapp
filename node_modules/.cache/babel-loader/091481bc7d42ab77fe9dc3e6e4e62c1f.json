{"ast":null,"code":"import _classCallCheck from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/QR/QRCodeBlock.js\";\nimport React from 'react';\nimport './QR.css';\nimport * as jsPDF from 'jspdf';\nimport FinalNav from \"../Navigation/FinalNav\";\nimport { Redirect } from \"react-router\";\n\nvar QRious = require('qrious');\n\nvar styles = {\n  root: {\n    fontFamily: 'sans-serif'\n  },\n  h1: {\n    textAlign: 'center'\n  },\n  qrcode1: {\n    textAlign: 'center'\n  }\n};\n\nvar QRCodeBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(QRCodeBlock, _React$Component);\n\n  function QRCodeBlock(props) {\n    var _this;\n\n    _classCallCheck(this, QRCodeBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QRCodeBlock).call(this, props));\n    _this.pdf = new jsPDF();\n    _this.pr = {\n      cycle: \"\",\n      select: \"\",\n      startDate: \"\",\n      endDate: \"\"\n    };\n    _this.state = {\n      zone: 0,\n      block: '',\n      inverter: 0.0,\n      SMB: '',\n      redirect: false,\n      row: 10,\n      plant: sessionStorage.getItem('plants').split('&')[0].toLowerCase()\n    };\n    _this.onEmailChange = _this.onEmailChange.bind(_assertThisInitialized(_this));\n    _this.onBlockChange = _this.onBlockChange.bind(_assertThisInitialized(_this));\n    _this.onInverterChange = _this.onInverterChange.bind(_assertThisInitialized(_this));\n    _this.onSMBChange = _this.onSMBChange.bind(_assertThisInitialized(_this));\n    _this.onButtonClicked = _this.onButtonClicked.bind(_assertThisInitialized(_this));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_this));\n    _this.func = _this.func.bind(_assertThisInitialized(_this));\n    _this.setStateSynchronous = _this.setStateSynchronous.bind(_assertThisInitialized(_this));\n    _this.setPlant = _this.setPlant.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(QRCodeBlock, [{\n    key: \"setStateSynchronous\",\n    value: function setStateSynchronous(stateUpdate) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.setState(stateUpdate, function () {\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!sessionStorage.getItem('token')) {\n        this.setState({\n          redirect: true\n        });\n      }\n    }\n  }, {\n    key: \"handler3\",\n    value: function handler3() {\n      if (document.getElementById('bel').style.display !== 'none') {\n        var _body = document.getElementById('bel');\n\n        _body.classList.toggle('fill');\n      }\n\n      var body = document.getElementById('jel');\n      body.classList.toggle('fill');\n    }\n  }, {\n    key: \"setPlant\",\n    value: function setPlant(plant) {\n      this.setState({\n        plant: plant\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirect) {\n        alert(\"SignIn to Access the Info\");\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(FinalNav, {\n        fname: sessionStorage.getItem('fname'),\n        role: sessionStorage.getItem('role'),\n        plants: sessionStorage.getItem('plants'),\n        pr: this.pr,\n        handler: this.props.handler,\n        plantstats: false,\n        handle: this.handler3,\n        setplant: this.setPlant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"bel\",\n        className: \"fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"hello\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"exampleInputEmail1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Zone Number\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"zone\",\n        className: \"form-control\",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"Enter Zone Number\",\n        onChange: this.onEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"exampleInputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Block Number\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"block\",\n        className: \"form-control\",\n        id: \"exampleInputPassword1\",\n        placeholder: \"Enter Block Number\",\n        onChange: this.onBlockChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"exampleInputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Inverter ID\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"inverter\",\n        className: \"form-control\",\n        id: \"exampleInputPassword1\",\n        placeholder: \"Enter Inverter ID\",\n        onChange: this.onInverterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"exampleInputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"SMB ID\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"SMB\",\n        className: \"form-control\",\n        id: \"exampleInputPassword1\",\n        placeholder: \"Enter SMB ID\",\n        onChange: this.onSMBChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onButtonClicked,\n        className: \"btn btn-success button\",\n        id: \"rowstats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Get the list of QR codes\")))), React.createElement(\"div\", {\n        id: \"jel\",\n        className: \"fill\",\n        style: styles.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"hellll\",\n        style: styles.qrcode1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"but\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"download\",\n        download: \"hello.png\",\n        className: \"btn btn-success\",\n        onClick: this.func,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Download as PDF\"), React.createElement(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: this.onButtonClicked1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Get QR for Another Block\"))));\n    }\n  }, {\n    key: \"onButtonClicked\",\n    value: function onButtonClicked(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      fetch('http://localhost:3000/getnumrows', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant,\n          block: this.state.block,\n          smb: this.state.SMB,\n          zone: this.state.zone,\n          inverter: this.state.inverter\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (res) {\n        _this3.setStateSynchronous({\n          row: res.rows\n        }).then(function (the) {\n          for (var i = 0; i < _this3.state.row; i++) {\n            var canvas = document.querySelector('canvas'); // eslint-disable-next-line no-unused-vars\n\n            var qr = new QRious({\n              background: 'white',\n              backgroundAlpha: 0.94,\n              foreground: 'black',\n              foregroundAlpha: 1,\n              level: 'H',\n              padding: 25,\n              size: 300,\n              value: JSON.stringify({\n                zone: _this3.state.zone,\n                row_num: i + 1,\n                blockname: _this3.state.block,\n                inverter: _this3.state.inverter,\n                smb: _this3.state.SMB\n              }),\n              element: canvas\n            });\n            var name = \"Zone: \".concat(_this3.state.zone.toString(), \" Row:\").concat((i + 1).toString(), \" Blockname: \").concat(_this3.state.block, \" Inverter: \").concat(_this3.state.inverter.toString(), \" SMB: \").concat(_this3.state.SMB);\n            console.log(name);\n            var canv = document.getElementById('hellll');\n            var imgData = canv.toDataURL(\"image/jpeg\", 1.0);\n\n            _this3.pdf.addImage(imgData, 'JPEG', 65, 2 * (i % 2) * 50 + 40);\n\n            _this3.pdf.text(name, 35, 2 * (i % 2) * 50 + 130);\n\n            if (i % 2 === 1) _this3.pdf.addPage();\n          }\n\n          if (!_this3.validate()) {\n            document.getElementById('bel').style.display = 'none';\n            document.getElementById('jel').style.display = 'grid';\n          } else {\n            alert('All the fields are required.');\n          }\n        }).catch(function (err) {\n          return alert(\"Something went wrong\");\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      return this.state.zone === 0 && this.state.block === '' && this.state.inverter === 0.0 && this.state.SMB === '';\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(event) {\n      this.setState({\n        zone: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onBlockChange\",\n    value: function onBlockChange(event) {\n      this.setState({\n        block: event.target.value.toString()\n      });\n    }\n  }, {\n    key: \"onInverterChange\",\n    value: function onInverterChange(event) {\n      this.setState({\n        inverter: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onSMBChange\",\n    value: function onSMBChange(event) {\n      this.setState({\n        SMB: event.target.value.toString()\n      });\n    }\n  }, {\n    key: \"func\",\n    value: function func() {\n      var name = \"Zone: \".concat(this.state.zone.toString(), \" Blockname: \").concat(this.state.block, \" Inverter: \").concat(this.state.inverter.toString(), \" SMB: \").concat(this.state.SMB);\n      this.pdf.save(name + \".pdf\");\n    }\n  }, {\n    key: \"onButtonClicked1\",\n    value: function onButtonClicked1(e) {\n      e.preventDefault();\n      document.getElementById('bel').style.display = 'grid';\n      document.getElementById('jel').style.display = 'none';\n    }\n  }]);\n\n  return QRCodeBlock;\n}(React.Component);\n\nexport { QRCodeBlock as default };","map":{"version":3,"sources":["/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/QR/QRCodeBlock.js"],"names":["React","jsPDF","FinalNav","Redirect","QRious","require","styles","root","fontFamily","h1","textAlign","qrcode1","QRCodeBlock","props","pdf","pr","cycle","select","startDate","endDate","state","zone","block","inverter","SMB","redirect","row","plant","sessionStorage","getItem","split","toLowerCase","onEmailChange","bind","onBlockChange","onInverterChange","onSMBChange","onButtonClicked","validate","func","setStateSynchronous","setPlant","stateUpdate","Promise","resolve","setState","document","getElementById","style","display","body","classList","toggle","alert","handler","handler3","onButtonClicked1","e","preventDefault","fetch","method","headers","JSON","stringify","smb","then","resp","json","res","rows","the","i","canvas","querySelector","qr","background","backgroundAlpha","foreground","foregroundAlpha","level","padding","size","value","row_num","blockname","element","name","toString","console","log","canv","imgData","toDataURL","addImage","text","addPage","catch","err","event","Number","target","save","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './QR.css';\nimport * as jsPDF from 'jspdf';\nimport FinalNav from \"../Navigation/FinalNav\";\nimport {Redirect} from \"react-router\";\nconst QRious = require('qrious');\n\nconst styles = {\n    root: {\n        fontFamily: 'sans-serif',\n    },\n    h1: {\n        textAlign: 'center',\n    },\n    qrcode1: {\n        textAlign: 'center',\n    },\n};\n\nexport default class QRCodeBlock extends React.Component {\n\n    pdf = new jsPDF();\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                zone: 0,\n                block: '',\n                inverter: 0.0,\n                SMB: '',\n                redirect :false,\n                row : 10,\n                plant : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n            };\n\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onBlockChange = this.onBlockChange.bind(this);\n        this.onInverterChange = this.onInverterChange.bind(this);\n        this.onSMBChange = this.onSMBChange.bind(this);\n        this.onButtonClicked = this.onButtonClicked.bind(this);\n        this.validate = this.validate.bind(this);\n        this.func = this.func.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.setPlant = this.setPlant.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle : ``,\n        select : ``,\n        startDate : \"\",\n        endDate : \"\",\n    };\n\n    componentDidMount() {\n        if (!sessionStorage.getItem('token')) {\n            this.setState({\n                redirect: true,\n            });\n        }\n    }\n\n    handler3(){\n        if(document.getElementById('bel').style.display !== 'none'){\n            let body = document.getElementById('bel');\n            body.classList.toggle('fill');\n        }\n        let body = document.getElementById('jel');\n        body.classList.toggle('fill');\n    }\n\n    setPlant(plant){\n        this.setState({\n            plant : plant,\n        });\n    }\n\n    render() {\n\n        if(this.state.redirect){\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n\n        return (\n            <div>\n                <FinalNav fname={sessionStorage.getItem('fname')}\n                          role={sessionStorage.getItem('role')}\n                          plants={sessionStorage.getItem('plants')}\n                          pr={this.pr}\n                          handler = {this.props.handler}\n                          plantstats={false}\n                          handle={this.handler3}\n                          setplant={this.setPlant}\n                />\n                <div id='bel' className='fill'>\n                    <form className='hello'>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\">Zone Number</label> <br/>\n                            <input type=\"number\"\n                                   name=\"zone\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputEmail1\"\n                                   aria-describedby=\"emailHelp\"\n                                   placeholder=\"Enter Zone Number\"\n                                   onChange={this.onEmailChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">Block Number</label><br/>\n                            <input type=\"text\"\n                                   name=\"block\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter Block Number\"\n                                   onChange={this.onBlockChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">Inverter ID</label><br/>\n                            <input type=\"number\"\n                                   name=\"inverter\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter Inverter ID\"\n                                   onChange={this.onInverterChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">SMB ID</label><br/>\n                            <input type=\"text\"\n                                   name=\"SMB\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter SMB ID\"\n                                   onChange={this.onSMBChange}\n                            />\n                            <br/>\n                            <button onClick={this.onButtonClicked} className=\"btn btn-success button\" id=\"rowstats\">\n                                Get the list of QR codes\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                <div id='jel' className='fill' style={styles.root}>\n                    <canvas id='hellll' style={styles.qrcode1}/>\n                    <div id='but'>\n                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                        <a id='download' download='hello.png' className='btn btn-success' onClick={this.func}>Download as PDF</a>\n                        <button className='btn btn-dark' onClick={this.onButtonClicked1}>Get QR for Another Block</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    onButtonClicked(e) {\n        e.preventDefault();\n        fetch('http://localhost:3000/getnumrows',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json'\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n                block : this.state.block,\n                smb : this.state.SMB,\n                zone : this.state.zone,\n                inverter : this.state.inverter,\n            })\n        }).then(resp=>resp.json())\n            .then(res => {\n                this.setStateSynchronous({\n                    row : res.rows,\n                })\n                    .then(the => {\n                        for(let i=0;i<this.state.row;i++)\n                        {\n                            let canvas = document.querySelector('canvas');\n                            // eslint-disable-next-line no-unused-vars\n                            let qr = new QRious({\n                                background: 'white',\n                                backgroundAlpha: 0.94,\n                                foreground: 'black',\n                                foregroundAlpha: 1,\n                                level: 'H',\n                                padding: 25,\n                                size: 300,\n                                value: JSON.stringify({\n                                    zone : this.state.zone,\n                                    row_num : i+1,\n                                    blockname : this.state.block,\n                                    inverter : this.state.inverter,\n                                    smb : this.state.SMB,\n                                }),\n                                element: canvas,\n                            });\n                            let name = `Zone: ${this.state.zone.toString()} Row:${(i+1).toString()} Blockname: ${this.state.block} Inverter: ${this.state.inverter.toString()} SMB: ${this.state.SMB}`;\n                            console.log(name);\n                            const canv = document.getElementById('hellll');\n                            const imgData = canv.toDataURL(\"image/jpeg\", 1.0);\n                            this.pdf.addImage(imgData, 'JPEG', 65, (2*(i%2)*50+40));\n                            this.pdf.text(name, 35, (2*(i%2)*50+130));\n                            if(i%2===1)\n                                this.pdf.addPage();\n                        }\n                        if (!this.validate()) {\n                            document.getElementById('bel').style.display = 'none';\n                            document.getElementById('jel').style.display = 'grid';\n                        } else {\n                            alert('All the fields are required.');\n                        }\n                    }).catch(err => alert(\"Something went wrong\"));\n            });\n\n    }\n\n    validate() {\n        return this.state.zone === 0 && this.state.block === '' && this.state.inverter === 0.0 && this.state.SMB === '';\n    }\n\n    onEmailChange(event) {\n        this.setState(\n            {zone: Number(event.target.value)},\n        );\n    }\n\n    onBlockChange(event) {\n        this.setState(\n            {block: event.target.value.toString()},\n        );\n    }\n\n    onInverterChange(event) {\n        this.setState(\n            {inverter: Number(event.target.value)},\n        );\n    }\n\n    onSMBChange(event) {\n        this.setState(\n            {SMB: event.target.value.toString()},\n        );\n    }\n\n    func(){\n        let name = `Zone: ${this.state.zone.toString()} Blockname: ${this.state.block} Inverter: ${this.state.inverter.toString()} SMB: ${this.state.SMB}`;\n        this.pdf.save(name+\".pdf\");\n    }\n\n    onButtonClicked1(e)\n    {\n        e.preventDefault();\n        document.getElementById('bel').style.display = 'grid';\n        document.getElementById('jel').style.display = 'none';\n    }\n\n}"]},"metadata":{},"sourceType":"module"}