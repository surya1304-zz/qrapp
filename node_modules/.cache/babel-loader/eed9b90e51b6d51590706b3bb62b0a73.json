{"ast":null,"code":"import _classCallCheck from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/zonestats/zonestats.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'tachyons';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport Table from './Table';\nimport { Redirect, withRouter } from \"react-router\";\nimport Material_Card from '../../Card/Material_Card';\nimport './plantstats.css';\nimport ZoneDetails from '../../Card/ZoneDetailCard';\n\nvar ZoneStats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ZoneStats, _Component);\n\n  function ZoneStats(props) {\n    var _this;\n\n    _classCallCheck(this, ZoneStats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ZoneStats).call(this, props));\n    _this.pr = {\n      cycle: \"\",\n      select: \"\",\n      startDate: \"\"\n    };\n    _this.state = {\n      zone: [],\n      cycle: 0,\n      current: 1,\n      row: 0,\n      totalrows: [],\n      redirect: false,\n      plant: _this.props.plants.split('&')[0].toLowerCase(),\n      accap: [],\n      dccap: [],\n      totalzones: 0,\n      startDate: '',\n      details: []\n    };\n    _this.onNumberFixed = _this.onNumberFixed.bind(_assertThisInitialized(_this));\n    _this.onCycleFixed = _this.onCycleFixed.bind(_assertThisInitialized(_this));\n    _this.onRowFixed = _this.onRowFixed.bind(_assertThisInitialized(_this));\n    _this.handler2 = _this.handler2.bind(_assertThisInitialized(_this));\n    _this.setPlant = _this.setPlant.bind(_assertThisInitialized(_this));\n    _this.onCardClicked = _this.onCardClicked.bind(_assertThisInitialized(_this));\n    _this.setStateSynchronous = _this.setStateSynchronous.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ZoneStats, [{\n    key: \"setStateSynchronous\",\n    value: function setStateSynchronous(stateUpdate) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.setState(stateUpdate, function () {\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (!this.props.signedIn) {\n        this.setState({\n          redirect: true\n        });\n      }\n\n      fetch(\"http://localhost:3000/get-cycle-data\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this3.setState({\n          startDate: result.startDate,\n          cycle: result.currentCycle\n        });\n      });\n      console.log('Im Here');\n      fetch('http://localhost:3000/zonedata', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (hello) {\n        var zones = [];\n        var dccaps = [];\n        var acacps = [];\n        var tots = [];\n        hello.map(function (zo, i) {\n          zones.push(zo['zone']);\n          acacps.push(zo['accapacity']);\n          dccaps.push(zo['dccapacity']);\n          tots.push(zo['totalrows']);\n        });\n\n        _this3.setState({\n          zone: zones,\n          accap: acacps,\n          dccap: dccaps,\n          totalrows: tots,\n          totalzones: hello.length\n        });\n      });\n    }\n  }, {\n    key: \"handler2\",\n    value: function handler2(number) {\n      this.setState({\n        number: number\n      });\n    }\n  }, {\n    key: \"setPlant\",\n    value: function setPlant(plant) {\n      this.setState({\n        plant: plant\n      });\n    }\n  }, {\n    key: \"handler3\",\n    value: function handler3() {\n      var body = document.getElementById('least');\n      body.classList.toggle('fill');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirect) {\n        alert(\"SignIn to Access the Info\");\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        });\n      }\n\n      var items1 = [];\n\n      for (var i = 1; i <= this.state.totalrows; i++) {\n        items1.push(React.createElement(\"option\", {\n          key: i,\n          value: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, i));\n      }\n\n      var items2 = [];\n\n      for (var j = this.state.current; j <= this.state.totalrows; j++) {\n        items2.push(React.createElement(\"option\", {\n          key: j,\n          value: j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, j));\n      }\n\n      var today = new Date();\n      var date = ('0' + today.getDate()).slice(-2) + '/' + ('0' + (today.getMonth() + 1)).slice(-2) + '/' + today.getFullYear();\n      var cards = [];\n\n      for (var _i = 0; _i < this.state.totalzones; _i++) {\n        var random = Math.floor(Math.random() * 100);\n        cards.push(React.createElement(Material_Card, {\n          zone: this.state.zone[_i],\n          rows: this.state.totalrows[_i],\n          today: date,\n          accap: this.state.accap[_i],\n          dccap: this.state.dccap[_i],\n          progress: random,\n          onCardClicked: this.onCardClicked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(FinalNav, {\n        fname: this.props.fname,\n        role: this.props.role,\n        plants: this.props.plants,\n        pr: this.pr,\n        handler1: this.handler2,\n        number: this.state.zone,\n        plantstats: false,\n        handle: this.handler3,\n        setplant: this.setPlant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"least\",\n        className: \"fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, cards), React.createElement(\"div\", {\n        id: \"keast\",\n        className: \"fill hell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.state.details));\n    }\n  }, {\n    key: \"onNumberFixed\",\n    value: function onNumberFixed(event) {\n      this.setState({\n        zone: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onCycleFixed\",\n    value: function onCycleFixed(event) {\n      this.setState({\n        current: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onRowFixed\",\n    value: function onRowFixed(event) {\n      this.setState({\n        row: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onCardClicked\",\n    value: function onCardClicked(_int) {\n      var _this4 = this;\n\n      var date = new Date(this.state.startDate);\n      var contractYear = date.getFullYear();\n      var blocks = [];\n      var totalrows = [];\n      var totalmod = [];\n      var inverters = [];\n      var smb = [];\n      var fmod = [];\n      var tmod = [];\n      var wp = [];\n      fetch('http://localhost:3000/blockdata', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant,\n          contractyear: contractYear,\n          cycle: this.state.cycle,\n          zone: _int\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (hell) {\n        hell.map(function (hel, i) {\n          blocks.push(hel[\"blockname\"]);\n          totalrows.push(hel[\"totalrows\"]);\n          totalmod.push(hel[\"totalmodules\"]);\n          inverters.push(hel[\"inverter\"]);\n          smb.push(hel[\"smb\"]);\n          fmod.push(hel[\"_40mrows\"]);\n          tmod.push(hel[\"_20mrows\"]);\n          wp.push(hel[\"wp\"]);\n        });\n        var deta = [];\n\n        for (var i = 0; i < blocks.length; i++) {\n          deta.push(React.createElement(ZoneDetails, {\n            block: blocks[i],\n            totalrows: totalrows[i],\n            totalmod: totalmod[i],\n            inv: inverters[i],\n            smb: smb[i],\n            fmod: fmod[i],\n            tmod: tmod[i],\n            wp: wp[i],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229\n            },\n            __self: this\n          }));\n        }\n\n        _this4.setStateSynchronous({\n          details: deta\n        }).then(function (deter) {\n          document.getElementById('least').classList.toggle('hell');\n          document.getElementById('keast').classList.toggle('hell');\n        });\n      });\n    }\n  }]);\n\n  return ZoneStats;\n}(Component);\n\nexport default withRouter(ZoneStats);","map":{"version":3,"sources":["/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/zonestats/zonestats.js"],"names":["React","Component","FinalNav","Table","Redirect","withRouter","Material_Card","ZoneDetails","ZoneStats","props","pr","cycle","select","startDate","state","zone","current","row","totalrows","redirect","plant","plants","split","toLowerCase","accap","dccap","totalzones","details","onNumberFixed","bind","onCycleFixed","onRowFixed","handler2","setPlant","onCardClicked","setStateSynchronous","stateUpdate","Promise","resolve","setState","signedIn","fetch","method","headers","body","JSON","stringify","then","res","json","result","currentCycle","console","log","resp","hello","zones","dccaps","acacps","tots","map","zo","i","push","length","number","document","getElementById","classList","toggle","alert","items1","items2","j","today","Date","date","getDate","slice","getMonth","getFullYear","cards","random","Math","floor","fname","role","handler3","event","Number","target","value","int","contractYear","blocks","totalmod","inverters","smb","fmod","tmod","wp","contractyear","hell","hel","deta","deter"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'tachyons';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport Table from './Table';\nimport {Redirect, withRouter} from \"react-router\";\nimport Material_Card from '../../Card/Material_Card';\nimport './plantstats.css';\nimport ZoneDetails from '../../Card/ZoneDetailCard';\n\nclass ZoneStats extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            zone : [],\n            cycle : 0,\n            current: 1,\n            row : 0,\n            totalrows : [],\n            redirect : false,\n            plant : this.props.plants.split('&')[0].toLowerCase(),\n            accap : [],\n            dccap : [],\n            totalzones : 0,\n            startDate : '',\n            details : [],\n        };\n\n        this.onNumberFixed = this.onNumberFixed.bind(this);\n        this.onCycleFixed = this.onCycleFixed.bind(this);\n        this.onRowFixed = this.onRowFixed.bind(this);\n        this.handler2 = this.handler2.bind(this);\n        this.setPlant = this.setPlant.bind(this);\n        this.onCardClicked = this.onCardClicked.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle : \"\",\n        select : \"\",\n        startDate : \"\",\n    };\n\n    componentDidMount() {\n        if(!this.props.signedIn){\n            this.setState({\n                redirect : true,\n            });\n        }\n\n        fetch(\"http://localhost:3000/get-cycle-data\",{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n            }),\n        })\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    startDate : result.startDate,\n                    cycle : result.currentCycle\n                });\n            });\n        console.log('Im Here');\n        fetch('http://localhost:3000/zonedata',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body: JSON.stringify({\n                plant : this.state.plant,\n            })\n        }).then(resp => resp.json())\n            .then(hello => {\n                let zones = [];\n                let dccaps = [];\n                let acacps = [];\n                let tots = [];\n                hello.map((zo, i) => {\n                    zones.push(zo['zone']);\n                    acacps.push(zo['accapacity']);\n                    dccaps.push(zo['dccapacity']);\n                    tots.push(zo['totalrows']);\n                });\n                        this.setState({\n                            zone : zones,\n                            accap : acacps,\n                            dccap : dccaps,\n                            totalrows : tots,\n                            totalzones : hello.length,\n                        });\n                    }\n            );\n    }\n\n    handler2(number){\n        this.setState({\n            number: number,\n        });\n    }\n\n    setPlant(plant){\n        this.setState({\n            plant : plant,\n        });\n    }\n\n    handler3(){\n        let body = document.getElementById('least');\n        body.classList.toggle('fill');\n    }\n\n    render() {\n        if(this.state.redirect){\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n        let items1 = [];\n        for (let i=1;i<=this.state.totalrows;i++) {\n            items1.push(<option key={i} value={i}>{i}</option>);\n        }\n        let items2 = [];\n        for (let j=this.state.current;j<=this.state.totalrows;j++) {\n            items2.push(<option key={j} value={j}>{j}</option>);\n        }\n\n        let today = new Date();\n        let date = ('0' + today.getDate()).slice(-2) + '/' + ('0' + (today.getMonth()+1)).slice(-2) + '/' + today.getFullYear();\n        let cards = [];\n        for(let i=0;i<this.state.totalzones;i++){\n            let random = Math.floor(Math.random() * (100));\n            cards.push(<Material_Card zone={this.state.zone[i]}\n                                      rows={this.state.totalrows[i]}\n                                      today={date}\n                                      accap={this.state.accap[i]}\n                                      dccap={this.state.dccap[i]}\n                                      progress={random}\n                                      onCardClicked={this.onCardClicked}\n            />);\n        }\n\n        return(\n            <div>\n                <FinalNav fname={this.props.fname}\n                          role={this.props.role}\n                          plants={this.props.plants}\n                          pr={this.pr}\n                          handler1={this.handler2}\n                          number={this.state.zone}\n                          plantstats={false}\n                          handle={this.handler3}\n                          setplant={this.setPlant}\n                />\n                <div id='least' className='fill'>\n                    {cards}\n                </div>\n                <div id='keast' className='fill hell'>\n                    {this.state.details}\n                </div>\n            </div>\n        );\n    }\n\n    onNumberFixed(event) {\n        this.setState({\n            zone : Number(event.target.value),\n        });\n    }\n\n    onCycleFixed(event) {\n        this.setState({\n            current : Number(event.target.value),\n        });\n    }\n\n    onRowFixed(event) {\n        this.setState({\n            row : Number(event.target.value),\n        });\n    }\n\n    onCardClicked(int) {\n        let date = new Date(this.state.startDate);\n        let contractYear = date.getFullYear();\n        let blocks = [];\n        let totalrows = [];\n        let totalmod = [];\n        let inverters = [];\n        let smb = [];\n        let fmod = [];\n        let tmod = [];\n        let wp = [];\n        fetch('http://localhost:3000/blockdata',{\n            method : 'post',\n            headers :{\n                'Content-Type' : 'application/json',\n            },\n            body :JSON.stringify({\n                plant : this.state.plant,\n                contractyear : contractYear,\n                cycle : this.state.cycle,\n                zone : int,\n            })\n        }).then(res => res.json())\n            .then(hell => {\n                hell.map((hel ,i)=> {\n                    blocks.push(hel[\"blockname\"]);\n                    totalrows.push(hel[\"totalrows\"]);\n                    totalmod.push(hel[\"totalmodules\"]);\n                    inverters.push(hel[\"inverter\"]);\n                    smb.push(hel[\"smb\"]);\n                    fmod.push(hel[\"_40mrows\"]);\n                    tmod.push(hel[\"_20mrows\"]);\n                    wp.push(hel[\"wp\"]);\n                });\n                let deta = [];\n                for(let i = 0;i < blocks.length;i++){\n                    deta.push(<ZoneDetails\n                        block={blocks[i]}\n                        totalrows={totalrows[i]}\n                        totalmod={totalmod[i]}\n                        inv={inverters[i]}\n                        smb={smb[i]}\n                        fmod={fmod[i]}\n                        tmod={tmod[i]}\n                        wp={wp[i]}\n                    />)\n                }\n                this.setStateSynchronous({\n                    details: deta,\n                }).then(deter => {\n                    document.getElementById('least').classList.toggle('hell');\n                    document.getElementById('keast').classList.toggle('hell');\n                })\n            });\n    }\n\n}\n\nexport default withRouter(ZoneStats);"]},"metadata":{},"sourceType":"module"}