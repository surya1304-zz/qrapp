{"ast":null,"code":"import _classCallCheck from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/plantstats/plantstats.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './plantstats.css';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport { Redirect, withRouter } from \"react-router\";\nimport { LineChart, Line, Label, Legend, AreaChart, Area, Brush, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nvar PlantStats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlantStats, _Component);\n\n  function PlantStats(props) {\n    var _this;\n\n    _classCallCheck(this, PlantStats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlantStats).call(this, props));\n    _this.pr = {\n      cycle: \"<div><span>Current Cycle - </span><strong>\".concat(_this.props.number, \"</strong></div>\"),\n      select: \"\",\n      startDate: \"<div><span>StartDate - </span><strong>\" + _this.props.startDate + \"</strong></div>\",\n      endDate: \"<div><span>ExpectedEndDate - </span><strong>\" + _this.props.endDate + \"</strong></div>\"\n    };\n    _this.state = {\n      number: 14,\n      duration: 0,\n      current: 0,\n      startDate: '16/10/2019',\n      endDate: '1/11/2019',\n      redirect: false,\n      plant: _this.props.plants.split('&')[0].toLowerCase(),\n      totalmodules: 0,\n      data: [{\n        \"name\": \"Page A\",\n        \"uv\": 4000,\n        \"pv\": 2400,\n        \"amt\": 2400\n      }, {\n        \"name\": \"Page B\",\n        \"uv\": 3000,\n        \"pv\": 1398,\n        \"amt\": 2210\n      }, {\n        \"name\": \"Page C\",\n        \"uv\": 2000,\n        \"pv\": 9800,\n        \"amt\": 2290\n      }, {\n        \"name\": \"Page D\",\n        \"uv\": 2780,\n        \"pv\": 3908,\n        \"amt\": 2000\n      }, {\n        \"name\": \"Page E\",\n        \"uv\": 1890,\n        \"pv\": 4800,\n        \"amt\": 2181\n      }, {\n        \"name\": \"Page F\",\n        \"uv\": 2390,\n        \"pv\": 3800,\n        \"amt\": 2500\n      }, {\n        \"name\": \"Page G\",\n        \"uv\": 3490,\n        \"pv\": 4300,\n        \"amt\": 2100\n      }],\n      data1: []\n    };\n    _this.onCycleFixed = _this.onCycleFixed.bind(_assertThisInitialized(_this));\n    _this.setStateSynchronous = _this.setStateSynchronous.bind(_assertThisInitialized(_this));\n    _this.handler3 = _this.handler3.bind(_assertThisInitialized(_this));\n    _this.setPlant = _this.setPlant.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PlantStats, [{\n    key: \"setStateSynchronous\",\n    value: function setStateSynchronous(stateUpdate) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.setState(stateUpdate, function () {\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (!this.props.signedIn) {\n        this.setState({\n          redirect: true\n        });\n      }\n\n      if (this.props.role === 'admin') {\n        fetch(\"http://localhost:3000/check-cycle\", {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            plant: this.state.plant\n          })\n        }).then(function (resp) {\n          return resp.json();\n        }).then(function (hell) {\n          if (hell['body'] === 1) {\n            var p = prompt('The Cycle has been completed,shall you want the cycle to start from today. Enter Y to start');\n\n            if (p === 'Y') {\n              var a = prompt('The Cycle will be completed within:(no of days)');\n              fetch(\"http://localhost:3000/create-cycle\", {\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  plant: _this3.state.plant,\n                  startToday: hell['body'],\n                  estimatedDuration: a\n                })\n              }).then(function (data) {\n                return alert('Success');\n              });\n            }\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n\n      fetch('http://localhost:3000/get-cycle-data', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var startDate = data.startDate,\n            endDate = data.endDate,\n            currentCycle = data.currentCycle,\n            duration = data.duration;\n\n        _this3.setState({\n          startDate: startDate,\n          endDate: endDate,\n          number: currentCycle,\n          duration: duration\n        });\n      });\n    }\n  }, {\n    key: \"handler3\",\n    value: function handler3() {\n      var body = document.getElementById('hello1');\n      body.classList.toggle('fill');\n    }\n  }, {\n    key: \"setPlant\",\n    value: function setPlant(plant) {\n      this.setState({\n        plant: plant\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var items = [];\n\n      for (var i = 1; i < this.state.number; i++) {\n        items.push(React.createElement(\"option\", {\n          value: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, i));\n      }\n\n      items.push(React.createElement(\"option\", {\n        value: this.state.number,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.state.number));\n\n      if (this.state.redirect) {\n        alert(\"SignIn to Access the Info\");\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(FinalNav, {\n        fname: this.props.fname,\n        role: this.props.role,\n        plants: this.props.plants,\n        pr: this.pr,\n        handler: this.props.handler,\n        number: this.state.number,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        plantstats: true,\n        handle: this.handler3,\n        setplant: this.setPlant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"hello1\",\n        className: \"fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Select cycle\")), React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"cycleNumber\",\n        onChange: this.onCycleFixed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \" \", items)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(LineChart, {\n        width: 730,\n        height: 250,\n        data: this.state.data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 30\n        },\n        syncId: \"hell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Label, {\n        value: \"Date\",\n        offset: -3,\n        position: \"insideBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), React.createElement(YAxis, {\n        label: {\n          value: 'Total Modules Cleaned',\n          angle: -90,\n          position: 'insideLeft'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"today_cleaned\",\n        stroke: \"#003157\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(Brush, {\n        y: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(LineChart, {\n        width: 730,\n        height: 250,\n        data: this.state.data1,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        syncId: \"hell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"linear\",\n        dataKey: \"today_cleaned\",\n        stroke: \"#000000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"onCycleFixed\",\n    value: function onCycleFixed(e) {\n      var _this4 = this;\n\n      e.preventDefault();\n      this.setStateSynchronous({\n        current: Number(e.target.value)\n      }).then(function (bro) {\n        var date = new Date();\n        var date1 = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n        fetch('http://localhost:3000/getplant', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            plant: _this4.state.plant,\n            startDate: _this4.state.startDate,\n            presentDate: date1,\n            cycle: _this4.state.current\n          })\n        }).then(function (hel) {\n          return hel.json();\n        }).then(function (lol) {\n          _this4.setStateSynchronous({\n            data: lol['data'],\n            totalmodules: lol['totalmodules']\n          }).then(function (jelly) {\n            var beo = [];\n\n            _this4.state.data.map(function (hello, i) {\n              beo.push({\n                'date': hello['date'],\n                'today_cleaned': Math.floor(_this4.state.totalmodules / _this4.state.duration)\n              });\n            });\n\n            _this4.setStateSynchronous({\n              data1: beo\n            }).then(function (jai) {\n              return console.log(_this4.state);\n            });\n          });\n        });\n      });\n    }\n  }]);\n\n  return PlantStats;\n}(Component);\n\nexport default withRouter(PlantStats);","map":{"version":3,"sources":["/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/plantstats/plantstats.js"],"names":["React","Component","$","Popper","FinalNav","Redirect","withRouter","LineChart","Line","Label","Legend","AreaChart","Area","Brush","XAxis","YAxis","CartesianGrid","Tooltip","PlantStats","props","pr","cycle","number","select","startDate","endDate","state","duration","current","redirect","plant","plants","split","toLowerCase","totalmodules","data","data1","onCycleFixed","bind","setStateSynchronous","handler3","setPlant","stateUpdate","Promise","resolve","setState","signedIn","role","fetch","method","headers","body","JSON","stringify","then","resp","json","hell","p","prompt","a","startToday","estimatedDuration","alert","catch","err","console","log","res","currentCycle","document","getElementById","classList","toggle","items","i","push","fname","handler","top","right","left","bottom","value","angle","position","e","preventDefault","Number","target","bro","date","Date","date1","getFullYear","getMonth","slice","getDate","presentDate","hel","lol","jelly","beo","map","hello","Math","floor","jai"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './plantstats.css'\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport {Redirect, withRouter} from \"react-router\";\nimport {LineChart, Line, Label , Legend, AreaChart, Area, Brush, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\n\nclass PlantStats extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            number: 14,\n            duration : 0,\n            current: 0,\n            startDate: '16/10/2019',\n            endDate: '1/11/2019',\n            redirect : false,\n            plant : this.props.plants.split('&')[0].toLowerCase(),\n            totalmodules : 0,\n            data : [\n                {\n                    \"name\": \"Page A\",\n                    \"uv\": 4000,\n                    \"pv\": 2400,\n                    \"amt\": 2400\n                },\n                {\n                    \"name\": \"Page B\",\n                    \"uv\": 3000,\n                    \"pv\": 1398,\n                    \"amt\": 2210\n                },\n                {\n                    \"name\": \"Page C\",\n                    \"uv\": 2000,\n                    \"pv\": 9800,\n                    \"amt\": 2290\n                },\n                {\n                    \"name\": \"Page D\",\n                    \"uv\": 2780,\n                    \"pv\": 3908,\n                    \"amt\": 2000\n                },\n                {\n                    \"name\": \"Page E\",\n                    \"uv\": 1890,\n                    \"pv\": 4800,\n                    \"amt\": 2181\n                },\n                {\n                    \"name\": \"Page F\",\n                    \"uv\": 2390,\n                    \"pv\": 3800,\n                    \"amt\": 2500\n                },\n                {\n                    \"name\": \"Page G\",\n                    \"uv\": 3490,\n                    \"pv\": 4300,\n                    \"amt\": 2100\n                }\n            ],\n            data1 : [],\n        };\n        this.onCycleFixed = this.onCycleFixed.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.handler3 = this.handler3.bind(this);\n        this.setPlant = this.setPlant.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle : `<div><span>Current Cycle - </span><strong>${this.props.number}</strong></div>`,\n        select : ``,\n        startDate : \"<div><span>StartDate - </span><strong>\"+this.props.startDate+\"</strong></div>\",\n        endDate : \"<div><span>ExpectedEndDate - </span><strong>\"+this.props.endDate+\"</strong></div>\",\n    };\n\n    componentDidMount() {\n        if (!this.props.signedIn) {\n            this.setState({\n                redirect: true,\n            });\n        }\n        if(this.props.role === 'admin')\n        {\n            fetch(\"http://localhost:3000/check-cycle\",{\n                method : 'post',\n                headers : {\n                    'Content-Type' : 'application/json',\n                },\n                body : JSON.stringify({\n                    plant : this.state.plant,\n                })\n            })\n                .then(resp=> resp.json())\n                .then( hell =>\n                {\n                    if(hell['body'] === 1){\n                        const p = prompt('The Cycle has been completed,shall you want the cycle to start from today. Enter Y to start');\n                        if(p === 'Y')\n                        {\n                            const a = prompt('The Cycle will be completed within:(no of days)');\n                            fetch(\"http://localhost:3000/create-cycle\",\n                                {\n                                    method : 'post',\n                                    headers : {\n                                        'Content-Type' : 'application/json',\n                                    },\n                                    body : JSON.stringify({\n                                        plant : this.state.plant,\n                                        startToday : hell['body'],\n                                        estimatedDuration : a,\n                                    })\n                                }\n                            ).then(data => alert('Success'))\n                        }\n                    }\n                })\n                .catch(err=>console.log(err));\n        }\n        fetch('http://localhost:3000/get-cycle-data',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n            })\n        })\n            .then(res=>res.json())\n            .then(data=>{\n                let { startDate,endDate,currentCycle,duration } = data;\n                this.setState({\n                    startDate: startDate,\n                    endDate: endDate,\n                    number: currentCycle,\n                    duration : duration,\n                });\n            });\n    }\n\n    handler3(){\n        let body = document.getElementById('hello1');\n        body.classList.toggle('fill');\n    }\n\n    setPlant(plant){\n        this.setState({\n            plant : plant,\n        });\n    }\n\n    render() {\n        let items = [];\n        for (let i=1;i<this.state.number;i++) {\n            items.push(<option value={i}>{i}</option>);\n        }\n        items.push(<option value={this.state.number} selected>{this.state.number}</option>);\n        if(this.state.redirect){\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n\n        return(\n            <div>\n                <FinalNav fname={this.props.fname}\n                          role={this.props.role}\n                          plants={this.props.plants}\n                          pr={this.pr}\n                          handler = {this.props.handler}\n                          number={this.state.number}\n                          startDate={this.state.startDate}\n                          endDate={this.state.endDate}\n                          plantstats={true}\n                          handle={this.handler3}\n                          setplant={this.setPlant}\n                />\n                <div id=\"hello1\" className='fill'>\n                    <div><span><strong>Select cycle</strong></span><select className=\"form-control\" name='cycleNumber' onChange={this.onCycleFixed}> {items}</select></div><br/>\n                    <LineChart width={730} height={250} data={this.state.data}\n                               margin={{ top: 5, right: 30, left: 20, bottom: 30 }} syncId='hell'>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"date\">\n                            <Label value=\"Date\" offset={-3} position=\"insideBottom\" />\n                        </XAxis>\n                        <YAxis  label={{ value: 'Total Modules Cleaned', angle: -90, position: 'insideLeft' }}/>\n                        <Tooltip />\n                        <Line type=\"monotone\" dataKey=\"today_cleaned\" stroke=\"#003157\" />\n                        <Brush y={300}/>\n                    </LineChart>\n                    <br/>\n                    <LineChart width={730} height={250} data={this.state.data1}\n                               margin={{ top: 5, right: 30, left: 20, bottom: 5 }} syncId='hell'>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"date\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Line type=\"linear\" dataKey=\"today_cleaned\" stroke=\"#000000\"/>\n                    </LineChart>\n                </div>\n            </div>\n        );\n    }\n\n    onCycleFixed(e) {\n        e.preventDefault();\n        this.setStateSynchronous(({current: Number(e.target.value)})).then( bro => {\n                const date = new Date();\n                let date1 = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n                fetch('http://localhost:3000/getplant',{\n                    method : 'post',\n                    headers : {\n                        'Content-Type' : 'application/json',\n                    },\n                    body : JSON.stringify({\n                        plant : this.state.plant,\n                        startDate : this.state.startDate,\n                        presentDate : date1,\n                        cycle : this.state.current,\n                    })\n                })\n                    .then(hel => hel.json())\n                    .then(lol=>{\n                        this.setStateSynchronous({\n                            data : lol['data'],\n                            totalmodules : lol['totalmodules'],\n                        }).then(jelly =>{\n                            let beo = []\n                            this.state.data.map((hello, i)=>{\n                                beo.push({\n                                    'date' : hello['date'],\n                                    'today_cleaned' : Math.floor(this.state.totalmodules/this.state.duration),\n                                });\n                            });\n                            this.setStateSynchronous({\n                                data1 : beo,\n                            }).then(jai => console.log(this.state));\n                        });\n                    });\n        }\n        )\n    }\n}\n\nexport default withRouter(PlantStats);\n\n\n"]},"metadata":{},"sourceType":"module"}