{"ast":null,"code":"import _classCallCheck from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/QR/QRCodeBlock.js\";\nimport React from 'react';\nimport { QRCode } from 'react-qr-svg';\nimport './QR.css';\nimport $ from 'jquery';\nimport 'qrcode/bin/qrcode';\nimport { saveAs } from 'file-saver/dist/FileSaver';\nimport * as jsPDF from 'jspdf';\n\nvar QRious = require('qrious');\n\nvar styles = {\n  root: {\n    fontFamily: 'sans-serif'\n  },\n  h1: {\n    textAlign: 'center'\n  },\n  qrcode1: {\n    textAlign: 'center'\n  }\n};\n\nvar QRCodeBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(QRCodeBlock, _React$Component);\n\n  function QRCodeBlock(props) {\n    var _this;\n\n    _classCallCheck(this, QRCodeBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QRCodeBlock).call(this, props));\n    _this.state = {\n      zone: 0,\n      block: '',\n      inverter: 0.0,\n      SMB: ''\n    };\n    _this.onEmailChange = _this.onEmailChange.bind(_assertThisInitialized(_this));\n    _this.onBlockChange = _this.onBlockChange.bind(_assertThisInitialized(_this));\n    _this.onInverterChange = _this.onInverterChange.bind(_assertThisInitialized(_this));\n    _this.onSMBChange = _this.onSMBChange.bind(_assertThisInitialized(_this));\n    _this.onButtonClicked = _this.onButtonClicked.bind(_assertThisInitialized(_this));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_this));\n    _this.func = _this.func.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(QRCodeBlock, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"bel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"hello\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"exampleInputEmail1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Zone Number\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"zone\",\n        className: \"form-control\",\n        id: \"exampleInputEmail1\",\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"Enter Zone Number\",\n        onChange: this.onEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"exampleInputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Block Number\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"block\",\n        className: \"form-control\",\n        id: \"exampleInputPassword1\",\n        placeholder: \"Enter Block Number\",\n        onChange: this.onBlockChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"exampleInputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Inverter ID\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"inverter\",\n        className: \"form-control\",\n        id: \"exampleInputPassword1\",\n        placeholder: \"Enter Inverter ID\",\n        onChange: this.onInverterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"exampleInputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"SMB ID\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"SMB\",\n        className: \"form-control\",\n        id: \"exampleInputPassword1\",\n        placeholder: \"Enter SMB ID\",\n        onChange: this.onSMBChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onButtonClicked,\n        className: \"btn btn-success button\",\n        id: \"rowstats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Get the status\")))), React.createElement(\"div\", {\n        id: \"jel\",\n        className: \"hell\",\n        style: styles.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"hellll\",\n        style: styles.qrcode1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"but\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"download\",\n        download: \"hello.png\",\n        className: \"btn btn-success\",\n        onClick: this.func,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Download as PDF\"), React.createElement(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: this.onButtonClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Get QR for Another Block\"))));\n    }\n  }, {\n    key: \"onButtonClicked\",\n    value: function onButtonClicked(e) {\n      e.preventDefault();\n      console.log(this.state);\n\n      for (var i = 0; i < 13; i++) {\n        var canvas = document.querySelector('canvas');\n        var qr = new QRious({\n          background: 'white',\n          backgroundAlpha: 1,\n          foreground: 'black',\n          foregroundAlpha: 1,\n          level: 'H',\n          padding: 25,\n          size: 300,\n          value: JSON.stringify({\n            zone: this.state.zone,\n            row: i + 1,\n            blockname: this.state.block,\n            inverter: this.state.inverter,\n            smb: this.state.SMB\n          }),\n          element: canvas\n        });\n        var name = \"Zone: \".concat(this.state.zone.toString(), \" Row:\").concat((i + 1).toString(), \" Blockname: \").concat(this.state.block, \" Inverter: \").concat(this.state.inverter.toString(), \" SMB: \").concat(this.state.SMB);\n        console.log(name);\n        var canv = document.getElementById('hellll');\n        var imgData = canv.toDataURL(\"image/jpeg\", 1.0);\n        var pdf = new jsPDF();\n        pdf.addImage(imgData, 'JPEG', 50, 2 * (i % 2) * 50 + 50);\n        pdf.text(name, 30, 2 * (i % 2) * 50 + 140);\n        if (i % 2 === 1) pdf.addPage();\n      }\n\n      if (!this.validate()) {\n        document.getElementById('bel').classList.toggle('hell');\n        document.getElementById('jel').classList.toggle('hell');\n      } else {\n        alert('All the fields are required.');\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      return this.state.zone === 0 && this.state.block === '' && this.state.inverter === 0.0 && this.state.SMB === '';\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(event) {\n      this.setState({\n        zone: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onBlockChange\",\n    value: function onBlockChange(event) {\n      this.setState({\n        block: event.target.value.toString()\n      });\n    }\n  }, {\n    key: \"onInverterChange\",\n    value: function onInverterChange(event) {\n      this.setState({\n        inverter: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onSMBChange\",\n    value: function onSMBChange(event) {\n      this.setState({\n        SMB: event.target.value.toString()\n      });\n    }\n  }, {\n    key: \"func\",\n    value: function func() {\n      var name = \"Zone: \".concat(this.state.zone.toString(), \" Blockname: \").concat(this.state.block, \" Inverter: \").concat(this.state.inverter.toString(), \" SMB: \").concat(this.state.SMB);\n      var pdf = new jsPDF();\n      pdf.save(name + \".pdf\");\n    }\n  }]);\n\n  return QRCodeBlock;\n}(React.Component);\n\nexport { QRCodeBlock as default };","map":{"version":3,"sources":["/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/QR/QRCodeBlock.js"],"names":["React","QRCode","$","saveAs","jsPDF","QRious","require","styles","root","fontFamily","h1","textAlign","qrcode1","QRCodeBlock","props","state","zone","block","inverter","SMB","onEmailChange","bind","onBlockChange","onInverterChange","onSMBChange","onButtonClicked","validate","func","e","preventDefault","console","log","i","canvas","document","querySelector","qr","background","backgroundAlpha","foreground","foregroundAlpha","level","padding","size","value","JSON","stringify","row","blockname","smb","element","name","toString","canv","getElementById","imgData","toDataURL","pdf","addImage","text","addPage","classList","toggle","alert","event","setState","Number","target","save","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { QRCode } from 'react-qr-svg';\nimport './QR.css';\nimport $ from 'jquery';\nimport 'qrcode/bin/qrcode';\nimport  {saveAs} from 'file-saver/dist/FileSaver';\nimport * as jsPDF from 'jspdf';\n\nconst QRious = require('qrious');\n\nconst styles = {\n    root: {\n        fontFamily: 'sans-serif',\n    },\n    h1: {\n        textAlign: 'center',\n    },\n    qrcode1: {\n        textAlign: 'center',\n    },\n};\n\nexport default class QRCodeBlock extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                zone: 0,\n                block: '',\n                inverter: 0.0,\n                SMB: '',\n            };\n\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onBlockChange = this.onBlockChange.bind(this);\n        this.onInverterChange = this.onInverterChange.bind(this);\n        this.onSMBChange = this.onSMBChange.bind(this);\n        this.onButtonClicked = this.onButtonClicked.bind(this);\n        this.validate = this.validate.bind(this);\n        this.func = this.func.bind(this);\n    }\n\n    render() {\n        return (\n            <div>\n                <div id='bel'>\n                    <form className='hello'>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\">Zone Number</label> <br/>\n                            <input type=\"number\"\n                                   name=\"zone\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputEmail1\"\n                                   aria-describedby=\"emailHelp\"\n                                   placeholder=\"Enter Zone Number\"\n                                   onChange={this.onEmailChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">Block Number</label><br/>\n                            <input type=\"text\"\n                                   name=\"block\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter Block Number\"\n                                   onChange={this.onBlockChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">Inverter ID</label><br/>\n                            <input type=\"number\"\n                                   name=\"inverter\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter Inverter ID\"\n                                   onChange={this.onInverterChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">SMB ID</label><br/>\n                            <input type=\"text\"\n                                   name=\"SMB\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter SMB ID\"\n                                   onChange={this.onSMBChange}\n                            />\n                            <br/>\n                            <button onClick={this.onButtonClicked} className=\"btn btn-success button\" id=\"rowstats\">Get\n                                the status\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                <div id='jel' className='hell' style={styles.root}>\n                    <canvas id='hellll' style={styles.qrcode1}></canvas>\n                    <div id='but'>\n                        <a id='download' download='hello.png' className='btn btn-success' onClick={this.func}>Download as PDF</a>\n                        <button className='btn btn-dark' onClick={this.onButtonClicked}>Get QR for Another Block</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    onButtonClicked(e) {\n        e.preventDefault();\n        console.log(this.state);\n        for(let i=0;i<13;i++)\n        {\n            let canvas = document.querySelector('canvas');\n            let qr = new QRious({\n                background: 'white',\n                backgroundAlpha: 1,\n                foreground: 'black',\n                foregroundAlpha: 1,\n                level: 'H',\n                padding: 25,\n                size: 300,\n                value: JSON.stringify({\n                    zone : this.state.zone,\n                    row : i+1,\n                    blockname : this.state.block,\n                    inverter : this.state.inverter,\n                    smb : this.state.SMB,\n                }),\n                element: canvas,\n            });\n            let name = `Zone: ${this.state.zone.toString()} Row:${(i+1).toString()} Blockname: ${this.state.block} Inverter: ${this.state.inverter.toString()} SMB: ${this.state.SMB}`;\n            console.log(name);\n            const canv = document.getElementById('hellll');\n            const imgData = canv.toDataURL(\"image/jpeg\", 1.0);\n            const pdf = new jsPDF();\n            pdf.addImage(imgData, 'JPEG', 50, (2*(i%2)*50+50));\n            pdf.text(name, 30, (2*(i%2)*50+140));\n            if(i%2===1)\n                pdf.addPage();\n        }\n        if (!this.validate()) {\n            document.getElementById('bel').classList.toggle('hell');\n            document.getElementById('jel').classList.toggle('hell');\n        } else {\n            alert('All the fields are required.');\n        }\n    }\n\n    validate() {\n        return this.state.zone === 0 && this.state.block === '' && this.state.inverter === 0.0 && this.state.SMB === '';\n    }\n\n    onEmailChange(event) {\n        this.setState(\n            {zone: Number(event.target.value)},\n        );\n    }\n\n    onBlockChange(event) {\n        this.setState(\n            {block: event.target.value.toString()},\n        );\n    }\n\n    onInverterChange(event) {\n        this.setState(\n            {inverter: Number(event.target.value)},\n        );\n    }\n\n    onSMBChange(event) {\n        this.setState(\n            {SMB: event.target.value.toString()},\n        );\n    }\n\n    func(){\n        let name = `Zone: ${this.state.zone.toString()} Blockname: ${this.state.block} Inverter: ${this.state.inverter.toString()} SMB: ${this.state.SMB}`;\n        const pdf = new jsPDF();\n        pdf.save(name+\".pdf\");\n    }\n\n}"]},"metadata":{},"sourceType":"module"}