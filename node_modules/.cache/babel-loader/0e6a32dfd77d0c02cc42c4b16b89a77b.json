{"ast":null,"code":"import _classCallCheck from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/zonestats/zonestats.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'tachyons';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport { Redirect, withRouter } from \"react-router\";\nimport MaterialCard from '../../Card/Material_Card';\nimport './plantstats.css';\nimport ZoneDetails from '../../Card/ZoneDetailCard';\nimport { Button } from \"@material-ui/core\";\nimport BlockStats from \"../../Card/Row_details\";\n\nvar ZoneStats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ZoneStats, _Component);\n\n  function ZoneStats(props) {\n    var _this;\n\n    _classCallCheck(this, ZoneStats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ZoneStats).call(this, props));\n    _this.pr = {\n      cycle: \"\",\n      select: \"\",\n      startDate: \"\"\n    };\n    _this.state = {\n      zone: [],\n      zoneIndividual: 0,\n      cycle: 0,\n      current: 1,\n      row: 0,\n      year: 0,\n      inverter: '',\n      totalrows: [],\n      redirect: false,\n      plant: sessionStorage.getItem('plant') !== null ? sessionStorage.getItem('plant') : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n      accap: [],\n      dccap: [],\n      totalzones: 0,\n      startDate: '',\n      details: [],\n      data: [],\n      progress: []\n    };\n    _this.onNumberFixed = _this.onNumberFixed.bind(_assertThisInitialized(_this));\n    _this.onCycleFixed = _this.onCycleFixed.bind(_assertThisInitialized(_this));\n    _this.onRowFixed = _this.onRowFixed.bind(_assertThisInitialized(_this));\n    _this.handler2 = _this.handler2.bind(_assertThisInitialized(_this));\n    _this.setPlant = _this.setPlant.bind(_assertThisInitialized(_this));\n    _this.onCardClicked = _this.onCardClicked.bind(_assertThisInitialized(_this));\n    _this.setStateSynchronous = _this.setStateSynchronous.bind(_assertThisInitialized(_this));\n    _this.onButtonClicked = _this.onButtonClicked.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ZoneStats, [{\n    key: \"setStateSynchronous\",\n    value: function setStateSynchronous(stateUpdate) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.setState(stateUpdate, function () {\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (!sessionStorage.getItem('token')) {\n        this.setState({\n          redirect: true\n        });\n      }\n\n      fetch(\"http://localhost:3000/get-cycle-data\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this3.setStateSynchronous({\n          startDate: result.startDate,\n          cycle: result.currentCycle,\n          year: result.contractyear\n        });\n      });\n      fetch('http://localhost:3000/zonedata', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (hello) {\n        if (hello['status'] !== 'Success') {\n          alert(hello['status']);\n        } else {\n          var p = hello['body'];\n          console.log(p);\n          var zones = [];\n          var dccaps = [];\n          var acacps = [];\n          var tots = []; // eslint-disable-next-line array-callback-return\n\n          p.map(function (zo, i) {\n            zones.push(zo['zone']);\n            acacps.push(zo['accapacity']);\n            dccaps.push(zo['dccapacity']);\n            tots.push(zo['totalrows']);\n          });\n          console.log(zones);\n          console.log(acacps);\n          console.log(dccaps);\n          console.log(tots);\n\n          _this3.setStateSynchronous({\n            zone: zones,\n            accap: acacps,\n            dccap: dccaps,\n            totalrows: tots,\n            totalzones: hello.length\n          }).then(function (hela) {\n            return fetch('http://localhost:3000/zoneprogress', {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                plant: _this3.state.plant,\n                year: _this3.state.year,\n                cycle: _this3.state.cycle,\n                zonenum: zones.length\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (thor) {\n              var g = []; // eslint-disable-next-line array-callback-return\n\n              thor.map(function (loki, i) {\n                g.push(loki.progress);\n              });\n\n              _this3.setStateSynchronous({\n                progress: g\n              });\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this4 = this;\n\n      if (prevState.plant !== this.state.plant) {\n        fetch(\"http://localhost:3000/get-cycle-data\", {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            plant: this.state.plant\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (result) {\n          _this4.setStateSynchronous({\n            startDate: result.startDate,\n            cycle: result.currentCycle,\n            year: result.contractyear\n          });\n        });\n        fetch('http://localhost:3000/zonedata', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            plant: this.state.plant\n          })\n        }).then(function (resp) {\n          return resp.json();\n        }).then(function (hello) {\n          var zones = [];\n          var dccaps = [];\n          var acacps = [];\n          var tots = []; // eslint-disable-next-line array-callback-return\n\n          hello.map(function (zo, i) {\n            zones.push(zo['zone']);\n            acacps.push(zo['accapacity']);\n            dccaps.push(zo['dccapacity']);\n            tots.push(zo['totalrows']);\n          });\n\n          _this4.setStateSynchronous({\n            zone: zones,\n            accap: acacps,\n            dccap: dccaps,\n            totalrows: tots,\n            totalzones: hello.length\n          }).then(function (hela) {\n            return fetch('http://localhost:3000/zoneprogress', {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                plant: _this4.state.plant,\n                year: _this4.state.year,\n                cycle: _this4.state.cycle,\n                zonenum: zones.length\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (thor) {\n              console.log(thor);\n              var g = []; // eslint-disable-next-line array-callback-return\n\n              thor.map(function (loki, i) {\n                g.push(loki.progress);\n              });\n\n              _this4.setStateSynchronous({\n                progress: g\n              });\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handler2\",\n    value: function handler2(number) {\n      this.setState({\n        number: number\n      });\n    }\n  }, {\n    key: \"setPlant\",\n    value: function setPlant(plant) {\n      var _this5 = this;\n\n      this.setStateSynchronous({\n        plant: plant\n      }).then(function (res) {\n        sessionStorage.setItem('plant', _this5.state.plant);\n      });\n    }\n  }, {\n    key: \"handler3\",\n    value: function handler3() {\n      var body = document.getElementById('least');\n      body.classList.toggle('fill');\n      var body1 = document.getElementById('keast');\n      body1.classList.toggle('fill');\n      var body2 = document.getElementById('beast');\n      body2.classList.toggle('fill');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirect) {\n        alert(\"SignIn to Access the Info\");\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        });\n      }\n\n      var today = new Date();\n      var date = ('0' + today.getDate()).slice(-2) + '/' + ('0' + (today.getMonth() + 1)).slice(-2) + '/' + today.getFullYear();\n      var cards = [];\n\n      for (var i = 0; i < this.state.totalzones; i++) {\n        cards.push(React.createElement(MaterialCard, {\n          key: i,\n          zone: this.state.zone[i],\n          rows: this.state.totalrows[i],\n          today: date,\n          accap: this.state.accap[i],\n          dccap: this.state.dccap[i],\n          progress: this.state.progress[i],\n          onCardClicked: this.onCardClicked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(FinalNav, {\n        fname: sessionStorage.getItem('fname'),\n        role: sessionStorage.getItem('role'),\n        plants: sessionStorage.getItem('plants'),\n        pr: this.pr,\n        handler1: this.handler2,\n        number: this.state.zone,\n        plantstats: false,\n        handle: this.handler3,\n        setplant: this.setPlant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"least\",\n        className: \"fill least\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, cards), React.createElement(\"div\", {\n        id: \"keast\",\n        className: \"fill surya least\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, this.state.details, React.createElement(Button, {\n        onClick: this.onButtonClicked1,\n        variant: \"contained\",\n        className: \"outlined-button\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Get Data For another Zone\")), React.createElement(\"div\", {\n        id: \"beast\",\n        className: \"fill surya least\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, this.state.data, React.createElement(Button, {\n        onClick: this.onButtonClicked2,\n        variant: \"contained\",\n        className: \"outlined-button\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Get Data For another Block\")));\n    }\n  }, {\n    key: \"onNumberFixed\",\n    value: function onNumberFixed(event) {\n      this.setState({\n        zone: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onCycleFixed\",\n    value: function onCycleFixed(event) {\n      this.setState({\n        current: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onRowFixed\",\n    value: function onRowFixed(event) {\n      this.setState({\n        row: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onButtonClicked1\",\n    value: function onButtonClicked1(e) {\n      e.preventDefault();\n      document.getElementById('least').style.display = 'grid';\n      document.getElementById('keast').style.display = 'none';\n      document.getElementById('beast').style.display = 'none';\n    }\n  }, {\n    key: \"onButtonClicked2\",\n    value: function onButtonClicked2(e) {\n      e.preventDefault();\n      document.getElementById('least').style.display = 'none';\n      document.getElementById('keast').style.display = 'grid';\n      document.getElementById('beast').style.display = 'none';\n    }\n  }, {\n    key: \"onButtonClicked\",\n    value: function onButtonClicked(e, block, inverter, smb) {\n      var _this6 = this;\n\n      e.preventDefault();\n      fetch(\"http://localhost:3000/getblockdata\", {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant,\n          zone: this.state.zoneIndividual,\n          block: block,\n          cycle: this.state.cycle,\n          year: this.state.year,\n          inverter: inverter,\n          smb: smb\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (delta) {\n        var del = []; // eslint-disable-next-line array-callback-return\n\n        delta.map(function (delt, i) {\n          var b = React.createElement(BlockStats, {\n            key: i,\n            row: i + 1,\n            fmod: delt[\"fmod\"],\n            cleanStatus: delt[\"cleanstatus\"],\n            updateDate: delt[\"updateDate\"],\n            updateTime: delt[\"updateTime\"],\n            comments: delt[\"comments\"],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352\n            },\n            __self: this\n          });\n          del.push(b);\n        });\n\n        _this6.setStateSynchronous({\n          data: del\n        });\n      });\n      document.getElementById('least').style.display = 'none';\n      document.getElementById('keast').style.display = 'none';\n      document.getElementById('beast').style.display = 'grid';\n    }\n  }, {\n    key: \"onCardClicked\",\n    value: function onCardClicked(_int) {\n      var _this7 = this;\n\n      var blocks = [];\n      var totalrows = [];\n      var totalmod = [];\n      var inverters = [];\n      var smb = [];\n      var fmod = [];\n      var tmod = [];\n      var wp = [];\n      this.setState({\n        zoneIndividual: _int\n      });\n      fetch('http://localhost:3000/blockdata', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"plant\": this.state.plant,\n          \"zone\": _int\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (hell) {\n        // eslint-disable-next-line array-callback-return\n        hell.map(function (hel, i) {\n          blocks.push(hel[\"blockname\"]);\n          totalrows.push(hel[\"totalrows\"]);\n          totalmod.push(hel[\"totalmodules\"]);\n          inverters.push(hel[\"inverter\"]);\n          smb.push(hel[\"smb\"]);\n          fmod.push(hel[\"_40mrows\"]);\n          tmod.push(hel[\"_20mrows\"]);\n          wp.push(hel[\"wp\"]);\n        });\n        var deta = [];\n\n        for (var i = 0; i < blocks.length; i++) {\n          deta.push(React.createElement(ZoneDetails, {\n            key: i,\n            block: blocks[i],\n            totalrows: totalrows[i],\n            totalmod: totalmod[i],\n            inv: inverters[i],\n            smb: smb[i],\n            fmod: fmod[i],\n            tmod: tmod[i],\n            wp: wp[i],\n            zone: _int,\n            onButton: _this7.onButtonClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 409\n            },\n            __self: this\n          }));\n        }\n\n        _this7.setStateSynchronous({\n          details: deta\n        }).then(function (deter) {\n          document.getElementById('least').style.display = 'none';\n          document.getElementById('beast').style.display = 'none';\n          document.getElementById('keast').style.display = 'grid';\n        });\n      });\n    }\n  }]);\n\n  return ZoneStats;\n}(Component);\n\nexport default withRouter(ZoneStats);","map":{"version":3,"sources":["/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/zonestats/zonestats.js"],"names":["React","Component","FinalNav","Redirect","withRouter","MaterialCard","ZoneDetails","Button","BlockStats","ZoneStats","props","pr","cycle","select","startDate","state","zone","zoneIndividual","current","row","year","inverter","totalrows","redirect","plant","sessionStorage","getItem","split","toLowerCase","accap","dccap","totalzones","details","data","progress","onNumberFixed","bind","onCycleFixed","onRowFixed","handler2","setPlant","onCardClicked","setStateSynchronous","onButtonClicked","stateUpdate","Promise","resolve","setState","fetch","method","headers","body","JSON","stringify","then","res","json","result","currentCycle","contractyear","resp","hello","alert","p","console","log","zones","dccaps","acacps","tots","map","zo","i","push","length","hela","zonenum","thor","g","loki","prevProps","prevState","snapshot","number","setItem","document","getElementById","classList","toggle","body1","body2","today","Date","date","getDate","slice","getMonth","getFullYear","cards","handler3","onButtonClicked1","onButtonClicked2","event","Number","target","value","e","preventDefault","style","display","block","smb","delta","del","delt","b","int","blocks","totalmod","inverters","fmod","tmod","wp","hell","hel","deta","deter"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'tachyons';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport {Redirect, withRouter} from \"react-router\";\nimport MaterialCard from '../../Card/Material_Card';\nimport './plantstats.css';\nimport ZoneDetails from '../../Card/ZoneDetailCard';\nimport {Button} from \"@material-ui/core\";\nimport BlockStats from \"../../Card/Row_details\";\n\nclass ZoneStats extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            zone: [],\n            zoneIndividual : 0,\n            cycle: 0,\n            current: 1,\n            row: 0,\n            year : 0,\n            inverter : '',\n            totalrows: [],\n            redirect: false,\n            plant : sessionStorage.getItem('plant') !== null ? sessionStorage.getItem('plant') : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n            accap: [],\n            dccap: [],\n            totalzones: 0,\n            startDate: '',\n            details: [],\n            data : [],\n            progress : [],\n        };\n\n        this.onNumberFixed = this.onNumberFixed.bind(this);\n        this.onCycleFixed = this.onCycleFixed.bind(this);\n        this.onRowFixed = this.onRowFixed.bind(this);\n        this.handler2 = this.handler2.bind(this);\n        this.setPlant = this.setPlant.bind(this);\n        this.onCardClicked = this.onCardClicked.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.onButtonClicked = this.onButtonClicked.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle: \"\",\n        select: \"\",\n        startDate: \"\",\n    };\n\n    componentDidMount() {\n        if (!sessionStorage.getItem('token')) {\n            this.setState({\n                redirect: true,\n            });\n        }\n\n        fetch(\"http://localhost:3000/get-cycle-data\", {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n            }),\n        })\n            .then(res => res.json())\n            .then(result => {\n                this.setStateSynchronous({\n                    startDate: result.startDate,\n                    cycle: result.currentCycle,\n                    year : result.contractyear,\n                });\n            });\n        fetch('http://localhost:3000/zonedata', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n            })\n        }).then(resp => resp.json())\n            .then(hello => {\n                if(hello['status'] !== 'Success')\n                {\n                    alert(hello['status']);\n                }\n                else {\n                    const p = hello['body'];\n                    console.log(p);\n                    let zones = [];\n                    let dccaps = [];\n                    let acacps = [];\n                    let tots = [];\n                    // eslint-disable-next-line array-callback-return\n                    p.map((zo, i) => {\n                        zones.push(zo['zone']);\n                        acacps.push(zo['accapacity']);\n                        dccaps.push(zo['dccapacity']);\n                        tots.push(zo['totalrows'])\n                    });\n                    console.log(zones);\n                    console.log(acacps);\n                    console.log(dccaps);\n                    console.log(tots);\n                    this.setStateSynchronous({\n                        zone: zones,\n                        accap: acacps,\n                        dccap: dccaps,\n                        totalrows: tots,\n                        totalzones: hello.length,\n                    }).then(hela => fetch('http://localhost:3000/zoneprogress',{\n                        method : 'post',\n                        headers : {\n                            'Content-Type' : 'application/json',\n                        },\n                        body : JSON.stringify({\n                            plant : this.state.plant,\n                            year : this.state.year,\n                            cycle : this.state.cycle,\n                            zonenum : zones.length\n                        })\n                    }).then(res => res.json())\n                        .then(thor => {\n\n                            let g = [];\n                            // eslint-disable-next-line array-callback-return\n                            thor.map((loki, i) => {\n                                g.push(loki.progress);\n                            });\n                            this.setStateSynchronous({\n                                progress : g,\n                            });\n                        }))\n                }\n                });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevState.plant !== this.state.plant)\n        {\n            fetch(\"http://localhost:3000/get-cycle-data\", {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    plant: this.state.plant,\n                }),\n            })\n                .then(res => res.json())\n                .then(result => {\n                    this.setStateSynchronous({\n                        startDate: result.startDate,\n                        cycle: result.currentCycle,\n                        year : result.contractyear\n                    });\n                });\n            fetch('http://localhost:3000/zonedata', {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    plant: this.state.plant,\n                })\n            }).then(resp => resp.json())\n                .then(hello => {\n                        let zones = [];\n                        let dccaps = [];\n                        let acacps = [];\n                        let tots = [];\n                    // eslint-disable-next-line array-callback-return\n                        hello.map((zo, i) => {\n                            zones.push(zo['zone']);\n                            acacps.push(zo['accapacity']);\n                            dccaps.push(zo['dccapacity']);\n                            tots.push(zo['totalrows']);\n                        });\n                        this.setStateSynchronous({\n                            zone: zones,\n                            accap: acacps,\n                            dccap: dccaps,\n                            totalrows: tots,\n                            totalzones: hello.length,\n                        }).then(hela => fetch('http://localhost:3000/zoneprogress',{\n                            method : 'post',\n                            headers : {\n                                'Content-Type' : 'application/json',\n                            },\n                            body : JSON.stringify({\n                                plant : this.state.plant,\n                                year : this.state.year,\n                                cycle : this.state.cycle,\n                                zonenum : zones.length\n                            })\n                        }).then(res => res.json())\n                            .then(thor => {\n                                console.log(thor);\n                                let g = [];\n                                // eslint-disable-next-line array-callback-return\n                                thor.map((loki, i) => {\n                                    g.push(loki.progress);\n                                });\n                                this.setStateSynchronous({\n                                    progress : g,\n                                });\n                            }))\n                    }\n                );\n        }\n    }\n\n    handler2(number) {\n        this.setState({\n            number: number,\n        });\n    }\n\n    setPlant(plant){\n        this.setStateSynchronous({\n            plant : plant,\n        })\n            .then(res => {\n                sessionStorage.setItem('plant',this.state.plant);\n            });\n    }\n\n    handler3() {\n        let body = document.getElementById('least');\n        body.classList.toggle('fill');\n        let body1 = document.getElementById('keast');\n        body1.classList.toggle('fill');\n        let body2 = document.getElementById('beast');\n        body2.classList.toggle('fill');\n    }\n\n    render() {\n        if (this.state.redirect) {\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n\n        let today = new Date();\n        let date = ('0' + today.getDate()).slice(-2) + '/' + ('0' + (today.getMonth() + 1)).slice(-2) + '/' + today.getFullYear();\n        let cards = [];\n        for (let i = 0; i < this.state.totalzones; i++) {\n            cards.push(<MaterialCard key={i}\n                                     zone={this.state.zone[i]}\n                                      rows={this.state.totalrows[i]}\n                                      today={date}\n                                      accap={this.state.accap[i]}\n                                      dccap={this.state.dccap[i]}\n                                      progress={this.state.progress[i]}\n                                      onCardClicked={this.onCardClicked}\n            />);\n        }\n\n        return (\n            <div>\n                <FinalNav fname={sessionStorage.getItem('fname')}\n                          role={sessionStorage.getItem('role')}\n                          plants={sessionStorage.getItem('plants')}\n                          pr={this.pr}\n                          handler1={this.handler2}\n                          number={this.state.zone}\n                          plantstats={false}\n                          handle={this.handler3}\n                          setplant={this.setPlant}\n                />\n                <div id='least' className='fill least'>\n                    {cards}\n                </div>\n                <div id='keast' className='fill surya least'>\n                    {this.state.details}\n                    <Button onClick={this.onButtonClicked1} variant=\"contained\" className=\"outlined-button\" color=\"primary\">\n                        Get Data For another Zone\n                    </Button>\n                </div>\n                <div id='beast' className='fill surya least'>\n                    {this.state.data}\n                    <Button onClick={this.onButtonClicked2} variant=\"contained\" className=\"outlined-button\" color=\"primary\">\n                        Get Data For another Block\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    onNumberFixed(event) {\n        this.setState({\n            zone: Number(event.target.value),\n        });\n    }\n\n    onCycleFixed(event) {\n        this.setState({\n            current: Number(event.target.value),\n        });\n    }\n\n    onRowFixed(event) {\n        this.setState({\n            row: Number(event.target.value),\n        });\n    }\n\n    onButtonClicked1(e){\n        e.preventDefault();\n        document.getElementById('least').style.display = 'grid';\n        document.getElementById('keast').style.display = 'none';\n        document.getElementById('beast').style.display = 'none';\n    }\n\n    onButtonClicked2(e){\n        e.preventDefault();\n        document.getElementById('least').style.display = 'none';\n        document.getElementById('keast').style.display = 'grid';\n        document.getElementById('beast').style.display = 'none';\n    }\n\n    onButtonClicked(e, block, inverter, smb){\n        e.preventDefault();\n        fetch(\"http://localhost:3000/getblockdata\",{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n                zone : this.state.zoneIndividual,\n                block : block,\n                cycle : this.state.cycle,\n                year : this.state.year,\n                inverter : inverter,\n                smb : smb,\n            })\n        }).then(res=>res.json())\n            .then(delta => {\n                let del = [];\n                // eslint-disable-next-line array-callback-return\n                delta.map((delt, i) => {\n                    let b = <BlockStats\n                                key={i}\n                                row={i+1}\n                                fmod={delt[\"fmod\"]}\n                                cleanStatus={delt[\"cleanstatus\"]}\n                                updateDate={delt[\"updateDate\"]}\n                                updateTime={delt[\"updateTime\"]}\n                                comments={delt[\"comments\"]}\n                            />;\n                    del.push(b);\n                });\n                this.setStateSynchronous({\n                    data: del,\n                });\n            });\n        document.getElementById('least').style.display = 'none';\n        document.getElementById('keast').style.display = 'none';\n        document.getElementById('beast').style.display = 'grid';\n    }\n\n    onCardClicked(int) {\n        let blocks = [];\n        let totalrows = [];\n        let totalmod = [];\n        let inverters = [];\n        let smb = [];\n        let fmod = [];\n        let tmod = [];\n        let wp = [];\n        this.setState({\n            zoneIndividual : int,\n        });\n        fetch('http://localhost:3000/blockdata',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                \"plant\" : this.state.plant,\n                \"zone\" : int\n            })\n        })\n        .then(res => res.json())\n            .then(hell => {\n                // eslint-disable-next-line array-callback-return\n                hell.map((hel, i) => {\n                    blocks.push(hel[\"blockname\"]);\n                    totalrows.push(hel[\"totalrows\"]);\n                    totalmod.push(hel[\"totalmodules\"]);\n                    inverters.push(hel[\"inverter\"]);\n                    smb.push(hel[\"smb\"]);\n                    fmod.push(hel[\"_40mrows\"]);\n                    tmod.push(hel[\"_20mrows\"]);\n                    wp.push(hel[\"wp\"]);\n                });\n                let deta = [];\n                for (let i = 0; i < blocks.length; i++) {\n                    deta.push(<ZoneDetails\n                        key={i}\n                        block={blocks[i]}\n                        totalrows={totalrows[i]}\n                        totalmod={totalmod[i]}\n                        inv={inverters[i]}\n                        smb={smb[i]}\n                        fmod={fmod[i]}\n                        tmod={tmod[i]}\n                        wp={wp[i]}\n                        zone={int}\n                        onButton={this.onButtonClicked}\n                    />)\n                }\n                this.setStateSynchronous({\n                    details: deta,\n                }).then(deter => {\n                    document.getElementById('least').style.display = 'none';\n                    document.getElementById('beast').style.display = 'none';\n                    document.getElementById('keast').style.display = 'grid';\n                });\n            })\n\n    }\n}\n\nexport default withRouter(ZoneStats);"]},"metadata":{},"sourceType":"module"}