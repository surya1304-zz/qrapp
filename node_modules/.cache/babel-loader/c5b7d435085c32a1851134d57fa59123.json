{"ast":null,"code":"import _defineProperty from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Creating/PlantForm.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button } from '@material-ui/core';\nimport { PlaylistAdd, PlaylistAddCheck } from \"@material-ui/icons\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      margin: 4,\n      width: 180\n    },\n    div: {\n      margin: 10\n    }\n  };\n});\nexport default function PlantForm(_ref) {\n  var AddHandler = _ref.AddHandler,\n      done = _ref.done;\n  var classes = useStyles();\n\n  var _useState = useState({\n    blockname: '',\n    totalrows: 0,\n    zone: 0,\n    inverter: '',\n    smb: '',\n    _40mrows: 0,\n    _20mrows: 0,\n    wp: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      console.log(name);\n      if (name === '_20mrows') setValues(_objectSpread({}, values, {\n        'totalrows': document.getElementById('totalrows').value\n      }));\n      setValues(_objectSpread({}, values, _defineProperty({}, name, event.target.value)));\n      console.log(values);\n    };\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.div,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.container,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"Block Name\",\n    className: classes.textField,\n    margin: \"normal\",\n    onChange: handleChange('blockname'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"totalrows\",\n    label: \"Total Rows\",\n    value: Number(values._40mrows) + Number(values._20mrows),\n    className: classes.textField,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"Zone\",\n    className: classes.textField,\n    margin: \"normal\",\n    onChange: handleChange('zone'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"Inverter\",\n    className: classes.textField,\n    margin: \"normal\",\n    onChange: handleChange('inverter'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"SMB\",\n    className: classes.textField,\n    margin: \"normal\",\n    onChange: handleChange('smb'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"FortyRows\",\n    className: classes.textField,\n    margin: \"normal\",\n    onChange: handleChange('_40mrows'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"TwentyRows\",\n    className: classes.textField,\n    margin: \"normal\",\n    onChange: handleChange('_20mrows'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"Watt Power\",\n    className: classes.textField,\n    margin: \"normal\",\n    onChange: handleChange('wp'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: function onClick(e) {\n      return AddHandler(values, e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(PlaylistAdd, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: function onClick(e) {\n      return done(values, e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(PlaylistAddCheck, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Creating/PlantForm.js"],"names":["React","useState","makeStyles","TextField","Button","PlaylistAdd","PlaylistAddCheck","useStyles","theme","container","display","flexWrap","textField","margin","width","div","PlantForm","AddHandler","done","classes","blockname","totalrows","zone","inverter","smb","_40mrows","_20mrows","wp","values","setValues","handleChange","name","event","console","log","document","getElementById","value","target","Number","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {TextField, Button} from '@material-ui/core';\nimport {PlaylistAdd, PlaylistAddCheck} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap : 'wrap',\n    },\n    textField: {\n        margin : 4,\n        width : 180,\n    },\n    div : {\n        margin : 10,\n    }\n}));\n\nexport default function PlantForm({ AddHandler,done }) {\n    const classes = useStyles();\n    const [values, setValues] = useState({\n        blockname : '',\n        totalrows : 0,\n        zone : 0,\n        inverter : '',\n        smb : '',\n        _40mrows : 0,\n        _20mrows : 0,\n        wp : 0,\n    });\n\n    const handleChange = name => event => {\n        console.log(name);\n        if(name === '_20mrows')\n            setValues({ ...values, 'totalrows' : document.getElementById('totalrows').value });\n        setValues({...values, [name]: event.target.value});\n        console.log(values);\n    };\n\n    return (\n        <div className={classes.div}>\n            <form className={classes.container} autoComplete=\"off\">\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Block Name\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('blockname')}\n                />\n                <TextField\n                    required\n                    id=\"totalrows\"\n                    label=\"Total Rows\"\n                    value={Number(values._40mrows) + Number(values._20mrows)}\n                    className={classes.textField}\n                    margin=\"normal\"\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Zone\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('zone')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Inverter\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('inverter')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"SMB\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('smb')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"FortyRows\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('_40mrows')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"TwentyRows\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('_20mrows')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Watt Power\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('wp')}\n                />\n                <Button onClick={(e) => AddHandler(values, e)}>\n                    <PlaylistAdd/>\n                </Button>\n                <Button onClick={(e) => done(values, e)}>\n                    <PlaylistAddCheck/>\n                </Button>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}