{"ast":null,"code":"import _classCallCheck from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/rowstats/rowenquiry.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './textfields.css';\nimport './plantstats.css';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport { Redirect, withRouter } from \"react-router\";\nimport { TextField, Button, Divider } from '@material-ui/core';\nimport { CloudDownload } from '@material-ui/icons';\nimport RowStats from './rowstats';\nimport ImageGrid from \"../../Card/CleanImages\";\n\nvar RowEnquiry =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RowEnquiry, _Component);\n\n  function RowEnquiry(props) {\n    var _this;\n\n    _classCallCheck(this, RowEnquiry);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RowEnquiry).call(this, props));\n    _this.pr = {\n      cycle: \"\",\n      select: \"\",\n      startdate: \"\"\n    };\n    _this.state = {\n      number: 1,\n      zone: 1,\n      row: 1,\n      block: 'A1',\n      inverter: '1.1',\n      SMB: \"1.1.3\",\n      redirect: false,\n      plant: sessionStorage.getItem('plant') !== null ? sessionStorage.getItem('plant') : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n      startdate: '',\n      endDate: '',\n      year: 0,\n      cleanedStatus: [],\n      forty: [],\n      updateDate: [],\n      updateTime: [],\n      cycls: [],\n      cardData: [],\n      cycle: 1\n    };\n    _this.onEmailChange = _this.onEmailChange.bind(_assertThisInitialized(_this));\n    _this.onPasswordChange = _this.onPasswordChange.bind(_assertThisInitialized(_this));\n    _this.onBlockChange = _this.onBlockChange.bind(_assertThisInitialized(_this));\n    _this.onInverterChange = _this.onInverterChange.bind(_assertThisInitialized(_this));\n    _this.onSMBChange = _this.onSMBChange.bind(_assertThisInitialized(_this));\n    _this.onButtonClicked = _this.onButtonClicked.bind(_assertThisInitialized(_this));\n    _this.handler2 = _this.handler2.bind(_assertThisInitialized(_this));\n    _this.handler3 = _this.handler3.bind(_assertThisInitialized(_this));\n    _this.setPlant = _this.setPlant.bind(_assertThisInitialized(_this));\n    _this.setStateSynchronous = _this.setStateSynchronous.bind(_assertThisInitialized(_this));\n    _this.getInfo = _this.getInfo.bind(_assertThisInitialized(_this));\n    _this.onButtonClicked1 = _this.onButtonClicked1.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RowEnquiry, [{\n    key: \"setStateSynchronous\",\n    value: function setStateSynchronous(stateUpdate) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        _this2.setState(stateUpdate, function () {\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (!sessionStorage.getItem('token')) {\n        this.setState({\n          redirect: true\n        });\n      }\n\n      fetch('http://localhost:3000/get-cycle-data', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        var startdate = data.startdate,\n            endDate = data.endDate,\n            currentCycle = data.currentCycle,\n            contractyear = data.contractyear;\n\n        _this3.setState({\n          startdate: startdate,\n          endDate: endDate,\n          number: currentCycle,\n          year: contractyear\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this4 = this;\n\n      if (prevState.plant !== this.state.plant) {\n        fetch('http://localhost:3000/get-cycle-data', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            plant: this.state.plant\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var startdate = data.startdate,\n              endDate = data.endDate,\n              currentCycle = data.currentCycle,\n              contractyear = data.contractyear;\n\n          _this4.setState({\n            startdate: startdate,\n            endDate: endDate,\n            number: currentCycle,\n            year: contractyear\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handler3\",\n    value: function handler3() {\n      if (document.getElementById('hello').style.display !== 'none') {\n        var _body = document.getElementById('hello');\n\n        _body.classList.toggle('fill');\n      } else if (document.getElementById('jel').style.display !== 'none') {\n        var _body2 = document.getElementById('jel');\n\n        _body2.classList.toggle('fill');\n      }\n\n      var body = document.getElementById('images');\n      body.classList.toggle('fill');\n    }\n  }, {\n    key: \"setPlant\",\n    value: function setPlant(plant) {\n      var _this5 = this;\n\n      this.setStateSynchronous({\n        plant: plant\n      }).then(function (res) {\n        sessionStorage.setItem('plant', _this5.state.plant);\n      });\n    }\n  }, {\n    key: \"handler2\",\n    value: function handler2(number) {\n      this.setState({\n        number: number\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirect) {\n        alert(\"SignIn to Access the Info\");\n        return React.createElement(Redirect, {\n          to: \"/signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(FinalNav, {\n        fname: sessionStorage.getItem('fname'),\n        role: sessionStorage.getItem('role'),\n        plants: sessionStorage.getItem('plants'),\n        number: this.state.number,\n        pr: this.pr,\n        handler1: this.handler2,\n        plantstats: false,\n        handle: this.handler3,\n        setplant: this.setPlant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        id: \"hello\",\n        className: \"hello fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bellll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"outlined-zone\",\n        label: \"Zone\",\n        defaultValue: \"1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.onEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        id: \"outlined-row\",\n        label: \"Row\",\n        defaultValue: \"1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.onPasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        id: \"outlined-block\",\n        label: \"Block Name\",\n        defaultValue: \"A1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.onBlockChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        id: \"outlined-inverter\",\n        label: \"Inverter ID\",\n        defaultValue: \"1.1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.onInverterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        className: \"outlined-smb\",\n        label: \"SMB ID\",\n        defaultValue: \"1.1.3\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.onSMBChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.onButtonClicked,\n        variant: \"contained\",\n        className: \"outlined-button\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Get Data\", React.createElement(CloudDownload, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        id: \"jel\",\n        className: \"fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"zone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Zone : \", this.state.zone), React.createElement(\"div\", {\n        className: \"block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Block Name : \", this.state.block), React.createElement(\"div\", {\n        className: \"inverter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Inverter : \", this.state.inverter), React.createElement(\"div\", {\n        className: \"smb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"SMB : \", this.state.SMB), React.createElement(\"div\", {\n        className: \"rowtype\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, // eslint-disable-next-line eqeqeq\n      this.state.forty == 1 ? React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Row Type : 40 Module Row\") : React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Row Type : 20 Module Row\"))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"grid11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, this.state.cards), React.createElement(Button, {\n        onClick: this.CSV.bind(this),\n        variant: \"outlined\",\n        className: \"outlined-button\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Download Data as CSV\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: RowEnquiry.onButtonClicked2,\n        variant: \"contained\",\n        className: \"outlined-button\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Get Data For another Row\")), React.createElement(\"div\", {\n        id: \"images\",\n        className: \"fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(ImageGrid, {\n        tileData: this.state.cardData,\n        cyc: this.state.cycle,\n        oncl: this.onButtonClicked1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(event) {\n      this.setState({\n        zone: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(event) {\n      this.setState({\n        row: Number(event.target.value)\n      });\n    }\n  }, {\n    key: \"onBlockChange\",\n    value: function onBlockChange(event) {\n      this.setState({\n        block: event.target.value.toString()\n      });\n    }\n  }, {\n    key: \"onInverterChange\",\n    value: function onInverterChange(event) {\n      this.setState({\n        inverter: event.target.value.toString()\n      });\n    }\n  }, {\n    key: \"onSMBChange\",\n    value: function onSMBChange(event) {\n      this.setState({\n        SMB: event.target.value.toString()\n      });\n    }\n  }, {\n    key: \"CSV\",\n    value: function CSV() {\n      var _this6 = this;\n\n      fetch('http://localhost:3000/rowstatsdetailed', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant,\n          year: this.state.year,\n          zone: this.state.zone,\n          row: this.state.row,\n          block: this.state.block,\n          inverter: this.state.inverter,\n          SMB: this.state.SMB,\n          cycle: this.state.number\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (hello) {\n        if (hello.Status === 'Success') RowEnquiry.JSONToCSVConvertor(hello['body'], \"cycleDataforRow\".concat(_this6.state.row.toString()), true);else alert(hello['Status']);\n      });\n    }\n  }, {\n    key: \"onButtonClicked\",\n    value: function onButtonClicked(e) {\n      var _this7 = this;\n\n      e.preventDefault();\n      fetch('http://localhost:3000/rowstats', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant,\n          year: this.state.year,\n          zone: this.state.zone,\n          row: this.state.row,\n          block: this.state.block,\n          inverter: this.state.inverter,\n          SMB: this.state.SMB,\n          cycle: this.state.number\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (kill) {\n        if (kill.status === 'Error') alert(kill.body);else {\n          var q = [];\n          var w = [];\n          var _e = [];\n          var r = [];\n          var cycs = []; // eslint-disable-next-line array-callback-return\n\n          kill.body.map(function (killa, i) {\n            cycs.push(killa['cycle']);\n            q.push(killa['_cleanstatus']);\n            w.push(killa['_40mod']);\n\n            _e.push(killa['updateDate']);\n\n            r.push(killa['updateTime']);\n          });\n\n          _this7.setStateSynchronous({\n            cycls: cycs,\n            cleanedStatus: q,\n            forty: w[0],\n            updateDate: _e,\n            updateTime: r\n          }).then(function (letr) {\n            var dark = [];\n\n            for (var i = 0; i < _this7.state.cleanedStatus.length; i++) {\n              dark.push(React.createElement(RowStats, {\n                cycle: _this7.state.cycls[i],\n                plant: _this7.state.plant,\n                date: _this7.state.startdate,\n                zone: _this7.state.zone,\n                row: _this7.state.row,\n                block: _this7.state.block,\n                inverter: _this7.state.inverter,\n                smb: _this7.state.SMB,\n                cleanStatus: _this7.state.cleanedStatus[i],\n                updateDate: _this7.state.updateDate[i],\n                updateTime: _this7.state.updateTime[i],\n                getinfo: _this7.getInfo,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 396\n                },\n                __self: this\n              }));\n            }\n\n            _this7.setStateSynchronous({\n              cards: dark\n            });\n          }).then(function (happy) {\n            document.getElementById('hello').style.display = 'none';\n            document.getElementById('jel').style.display = 'grid';\n            document.getElementById('images').style.display = 'none';\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onButtonClicked1\",\n    value: function onButtonClicked1() {\n      this.setStateSynchronous({\n        cardData: []\n      });\n      document.getElementById('hello').style.display = 'none';\n      document.getElementById('jel').style.display = 'grid';\n      document.getElementById('images').style.display = 'none';\n    }\n  }, {\n    key: \"getInfo\",\n    value: function getInfo(cyc) {\n      var _this8 = this;\n\n      var dat = [];\n      fetch('http://localhost:3000/getimages', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          plant: this.state.plant,\n          cycle: cyc,\n          zone: this.state.zone,\n          row: this.state.row,\n          block: this.state.block,\n          inverter: this.state.inverter,\n          smb: this.state.SMB,\n          year: this.state.year\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (hello) {\n        dat.push({\n          img: hello.precleaned,\n          title: 'Pre Cleaned Image'\n        });\n        dat.push({\n          img: hello.postcleaned,\n          title: 'Post Cleaned Image'\n        });\n\n        _this8.setStateSynchronous({\n          cardData: dat,\n          cycle: cyc\n        }).then(function (naan) {\n          document.getElementById('hello').style.display = 'none';\n          document.getElementById('jel').style.display = 'none';\n          document.getElementById('images').style.display = 'flex';\n        });\n      });\n    }\n  }], [{\n    key: \"JSONToCSVConvertor\",\n    value: function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {\n      var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;\n      var CSV = '';\n      CSV += ReportTitle + '\\r\\n\\n';\n\n      if (ShowLabel) {\n        var row = \"\";\n\n        for (var index in arrData[0]) {\n          row += index + ',';\n        }\n\n        row = row.slice(0, -1);\n        CSV += row + '\\r\\n';\n      }\n\n      for (var i = 0; i < arrData.length; i++) {\n        // eslint-disable-next-line no-redeclare\n        var row = \"\"; // eslint-disable-next-line no-redeclare\n\n        for (var index in arrData[i]) {\n          row += '\"' + arrData[i][index] + '\",';\n        }\n\n        row.slice(0, row.length - 1);\n        CSV += row + '\\r\\n';\n      } // eslint-disable-next-line eqeqeq\n\n\n      if (CSV == '') {\n        alert(\"Invalid data\");\n        return;\n      }\n\n      var fileName = \"MyReport_\";\n      fileName += ReportTitle.replace(/ /g, \"_\");\n      var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);\n      var link = document.createElement(\"a\");\n      link.href = uri;\n      link.style = \"visibility:hidden\";\n      link.download = fileName + \".csv\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }, {\n    key: \"onButtonClicked2\",\n    value: function onButtonClicked2() {\n      document.getElementById('hello').style.display = 'flex';\n      document.getElementById('jel').style.display = 'none';\n      document.getElementById('images').style.display = 'none';\n    }\n  }]);\n\n  return RowEnquiry;\n}(Component);\n\nexport default withRouter(RowEnquiry);","map":{"version":3,"sources":["/Users/indukurisuryasaiharischyandraprasad/WebstormProjects/hello1/src/Stats/rowstats/rowenquiry.js"],"names":["React","Component","FinalNav","Redirect","withRouter","TextField","Button","Divider","CloudDownload","RowStats","ImageGrid","RowEnquiry","props","pr","cycle","select","startdate","state","number","zone","row","block","inverter","SMB","redirect","plant","sessionStorage","getItem","split","toLowerCase","endDate","year","cleanedStatus","forty","updateDate","updateTime","cycls","cardData","onEmailChange","bind","onPasswordChange","onBlockChange","onInverterChange","onSMBChange","onButtonClicked","handler2","handler3","setPlant","setStateSynchronous","getInfo","onButtonClicked1","stateUpdate","Promise","resolve","setState","fetch","method","headers","body","JSON","stringify","then","res","json","data","currentCycle","contractyear","prevProps","prevState","snapshot","document","getElementById","style","display","classList","toggle","setItem","alert","cards","CSV","onButtonClicked2","event","Number","target","value","toString","hello","Status","JSONToCSVConvertor","e","preventDefault","kill","status","q","w","r","cycs","map","killa","i","push","letr","dark","length","happy","cyc","dat","smb","img","precleaned","title","postcleaned","naan","JSONData","ReportTitle","ShowLabel","arrData","parse","index","slice","fileName","replace","uri","escape","link","createElement","href","download","appendChild","click","removeChild"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './textfields.css';\nimport './plantstats.css';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport { Redirect, withRouter } from \"react-router\";\nimport { TextField, Button, Divider } from '@material-ui/core';\nimport {CloudDownload} from '@material-ui/icons';\nimport RowStats from './rowstats';\nimport ImageGrid from \"../../Card/CleanImages\";\n\nclass RowEnquiry extends Component{\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                number : 1,\n                zone : 1,\n                row : 1,\n                block : 'A1',\n                inverter : '1.1',\n                SMB: \"1.1.3\",\n                redirect : false,\n                plant : sessionStorage.getItem('plant') !== null ? sessionStorage.getItem('plant') : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n                startdate : '',\n                endDate: '',\n                year : 0,\n                cleanedStatus : [],\n                forty : [],\n                updateDate : [],\n                updateTime : [],\n                cycls : [],\n                cardData : [],\n                cycle : 1,\n            };\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onBlockChange = this.onBlockChange.bind(this);\n        this.onInverterChange = this.onInverterChange.bind(this);\n        this.onSMBChange = this.onSMBChange.bind(this);\n        this.onButtonClicked = this.onButtonClicked.bind(this);\n        this.handler2 = this.handler2.bind(this);\n        this.handler3 = this.handler3.bind(this);\n        this.setPlant = this.setPlant.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.getInfo = this.getInfo.bind(this);\n        this.onButtonClicked1 = this.onButtonClicked1.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle : \"\",\n        select : \"\",\n        startdate : \"\",\n    };\n\n    componentDidMount() {\n        if (!sessionStorage.getItem('token')) {\n            this.setState({\n                redirect: true,\n            });\n        }\n\n        fetch('http://localhost:3000/get-cycle-data',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n            })\n        })\n            .then(res=>res.json())\n            .then(data=>{\n                let { startdate,endDate,currentCycle,contractyear } = data;\n                this.setState({\n                    startdate: startdate,\n                    endDate: endDate,\n                    number: currentCycle,\n                    year : contractyear,\n                });\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevState.plant !== this.state.plant)\n        {\n            fetch('http://localhost:3000/get-cycle-data',{\n                method : 'post',\n                headers : {\n                    'Content-Type' : 'application/json',\n                },\n                body : JSON.stringify({\n                    plant : this.state.plant,\n                })\n            })\n                .then(res=>res.json())\n                .then(data=>{\n                    let { startdate,endDate,currentCycle,contractyear } = data;\n                    this.setState({\n                        startdate: startdate,\n                        endDate: endDate,\n                        number: currentCycle,\n                        year : contractyear,\n                    });\n                })\n        }\n    }\n\n    handler3(){\n        if(document.getElementById('hello').style.display !== 'none'){\n            let body = document.getElementById('hello');\n            body.classList.toggle('fill');\n        }\n        else if(document.getElementById('jel').style.display !== 'none'){\n            let body = document.getElementById('jel');\n            body.classList.toggle('fill');\n        }\n        let body = document.getElementById('images');\n        body.classList.toggle('fill');\n    }\n\n    setPlant(plant){\n        this.setStateSynchronous({\n            plant : plant,\n        })\n            .then(res => {\n                sessionStorage.setItem('plant',this.state.plant);\n            });\n    }\n\n    handler2(number){\n        this.setState({\n            number: number,\n        });\n    }\n\n    render() {\n        if(this.state.redirect){\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n\n        return (\n            <div>\n                <FinalNav fname={sessionStorage.getItem('fname')}\n                          role={sessionStorage.getItem('role')}\n                          plants={sessionStorage.getItem('plants')}\n                          number={this.state.number}\n                          pr={this.pr}\n                          handler1={this.handler2}\n                          plantstats={false}\n                          handle={this.handler3}\n                          setplant={this.setPlant}\n                />\n                    <form id='hello' className='hello fill'>\n                        <div className=\"bellll\">\n                            <TextField\n                                required\n                                id=\"outlined-zone\"\n                                label=\"Zone\"\n                                defaultValue=\"1\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.onEmailChange}\n                            />\n                            <TextField\n                                required\n                                id=\"outlined-row\"\n                                label=\"Row\"\n                                defaultValue=\"1\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.onPasswordChange}\n                            />\n                            <TextField\n                                required\n                                id=\"outlined-block\"\n                                label=\"Block Name\"\n                                defaultValue=\"A1\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.onBlockChange}\n                            />\n                            <TextField\n                                required\n                                id=\"outlined-inverter\"\n                                label=\"Inverter ID\"\n                                defaultValue=\"1.1\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.onInverterChange}\n                            />\n                            <TextField\n                                required\n                                className=\"outlined-smb\"\n                                label=\"SMB ID\"\n                                defaultValue=\"1.1.3\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.onSMBChange}\n                            />\n                                <Button onClick={this.onButtonClicked} variant=\"contained\" className=\"outlined-button\" color=\"primary\">\n                                    Get Data\n                                    <CloudDownload />\n                                </Button>\n                        </div>\n                    </form>\n                <div id='jel' className='fill'>\n                    <div className='key'>\n                        <div className='zone'>\n                            Zone : {this.state.zone}\n                        </div>\n                        <div className='block'>\n                            Block Name : {this.state.block}\n                        </div>\n                        <div className='inverter'>\n                            Inverter : {this.state.inverter}\n                        </div>\n                        <div className='smb'>\n                            SMB : {this.state.SMB}\n                        </div>\n                        <div className='rowtype'>\n                            {\n                                // eslint-disable-next-line eqeqeq\n                                (this.state.forty==1) ? <h6>Row Type : 40 Module Row</h6> : <h6>Row Type : 20 Module Row</h6>\n                            }\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className='grid11'>\n                        {this.state.cards}\n\n                    </div>\n                    <Button onClick={this.CSV.bind(this)} variant='outlined' className='outlined-button' color='secondary'>Download Data as CSV</Button><br/>\n                    <Button onClick={RowEnquiry.onButtonClicked2} variant=\"contained\" className=\"outlined-button\" color=\"primary\">\n                        Get Data For another Row\n                    </Button>\n                </div>\n                <div id='images' className='fill'>\n                    <ImageGrid\n                        tileData={this.state.cardData}\n                        cyc={this.state.cycle}\n                        oncl={this.onButtonClicked1}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    onEmailChange(event) {\n        this.setState(\n            {zone : Number(event.target.value)},\n        );\n    }\n\n    onPasswordChange(event) {\n        this.setState(\n            {row : Number(event.target.value)},\n        );\n    }\n\n    onBlockChange(event) {\n        this.setState(\n            {block : event.target.value.toString()},\n        );\n    }\n\n    onInverterChange(event) {\n        this.setState(\n            {inverter : event.target.value.toString()},\n        );\n    }\n\n    onSMBChange(event) {\n        this.setState(\n            {SMB : event.target.value.toString()},\n        );\n    }\n\n    CSV()\n    {\n        fetch('http://localhost:3000/rowstatsdetailed',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n                year : this.state.year,\n                zone : this.state.zone,\n                row : this.state.row,\n                block : this.state.block,\n                inverter : this.state.inverter,\n                SMB : this.state.SMB,\n                cycle : this.state.number\n            })\n        }).then(res => res.json())\n            .then(hello => {\n                if(hello.Status === 'Success')\n                    RowEnquiry.JSONToCSVConvertor(hello['body'], `cycleDataforRow${this.state.row.toString()}`, true);\n                else\n                    alert(hello['Status']);\n            })\n    }\n\n    static JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {\n        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;\n        var CSV = '';\n        CSV += ReportTitle + '\\r\\n\\n';\n        if (ShowLabel) {\n            var row = \"\";\n            for (var index in arrData[0]) {\n                row += index + ',';\n            }\n            row = row.slice(0, -1);\n            CSV += row + '\\r\\n';\n        }\n        for (var i = 0; i < arrData.length; i++) {\n            // eslint-disable-next-line no-redeclare\n            var row = \"\";\n            // eslint-disable-next-line no-redeclare\n            for (var index in arrData[i]) {\n                row += '\"' + arrData[i][index] + '\",';\n            }\n            row.slice(0, row.length - 1);\n            CSV += row + '\\r\\n';\n        }\n        // eslint-disable-next-line eqeqeq\n        if (CSV == '') {\n            alert(\"Invalid data\");\n            return;\n        }\n        var fileName = \"MyReport_\";\n        fileName += ReportTitle.replace(/ /g,\"_\");\n        var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);\n        var link = document.createElement(\"a\");\n        link.href = uri;\n        link.style = \"visibility:hidden\";\n        link.download = fileName + \".csv\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    onButtonClicked(e) {\n        e.preventDefault();\n        fetch('http://localhost:3000/rowstats', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n                year: this.state.year,\n                zone: this.state.zone,\n                row: this.state.row,\n                block: this.state.block,\n                inverter: this.state.inverter,\n                SMB: this.state.SMB,\n                cycle: this.state.number\n            })\n        }).then(res => res.json())\n            .then(kill => {\n                if (kill.status === 'Error')\n                    alert(kill.body);\n                else {\n                    let q = [];\n                    let w = [];\n                    let e = [];\n                    let r = [];\n                    let cycs = [];\n                    // eslint-disable-next-line array-callback-return\n                    kill.body.map((killa, i) => {\n                        cycs.push(killa['cycle'])\n                        q.push(killa['_cleanstatus']);\n                        w.push(killa['_40mod']);\n                        e.push(killa['updateDate']);\n                        r.push(killa['updateTime']);\n                    });\n                    this.setStateSynchronous({\n                        cycls: cycs,\n                        cleanedStatus: q,\n                        forty: w[0],\n                        updateDate: e,\n                        updateTime: r,\n                    }).then(letr => {\n                        let dark = [];\n                        for (let i = 0; i < this.state.cleanedStatus.length; i++) {\n                            dark.push(<RowStats\n                                cycle={this.state.cycls[i]}\n                                plant={this.state.plant}\n                                date={this.state.startdate}\n                                zone={this.state.zone}\n                                row={this.state.row}\n                                block={this.state.block}\n                                inverter={this.state.inverter}\n                                smb={this.state.SMB}\n                                cleanStatus={this.state.cleanedStatus[i]}\n                                updateDate={this.state.updateDate[i]}\n                                updateTime={this.state.updateTime[i]}\n                                getinfo={this.getInfo}\n                            />);\n                        }\n                        this.setStateSynchronous({\n                            cards: dark,\n                        });\n                    })\n                        .then(happy => {\n                            document.getElementById('hello').style.display = 'none';\n                            document.getElementById('jel').style.display = 'grid';\n                            document.getElementById('images').style.display = 'none';\n                        });\n                }\n            });\n    }\n\n    onButtonClicked1(){\n        this.setStateSynchronous({\n            cardData : [],\n        });\n        document.getElementById('hello').style.display = 'none';\n        document.getElementById('jel').style.display = 'grid';\n        document.getElementById('images').style.display = 'none';\n    }\n\n    static onButtonClicked2(){\n        document.getElementById('hello').style.display = 'flex';\n        document.getElementById('jel').style.display = 'none';\n        document.getElementById('images').style.display = 'none';\n    }\n\n    getInfo(cyc) {\n        let dat = [];\n        fetch('http://localhost:3000/getimages',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body: JSON.stringify({\n                plant : this.state.plant,\n                cycle : cyc,\n                zone : this.state.zone,\n                row : this.state.row,\n                block : this.state.block,\n                inverter : this.state.inverter,\n                smb : this.state.SMB,\n                year : this.state.year,\n            })\n        })\n            .then(res => res.json())\n            .then(hello => {\n                dat.push({\n                    img : hello.precleaned,\n                    title : 'Pre Cleaned Image',\n                });\n                dat.push({\n                    img : hello.postcleaned,\n                    title : 'Post Cleaned Image',\n                });\n                this.setStateSynchronous({\n                    cardData: dat,\n                    cycle : cyc\n                })\n                    .then(naan=>{\n                        document.getElementById('hello').style.display = 'none';\n                        document.getElementById('jel').style.display = 'none';\n                        document.getElementById('images').style.display = 'flex';\n                    });\n            });\n    }\n\n}\n\nexport default withRouter(RowEnquiry);"]},"metadata":{},"sourceType":"module"}