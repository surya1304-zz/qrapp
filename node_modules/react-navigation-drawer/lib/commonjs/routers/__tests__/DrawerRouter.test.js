var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _objectSpread2=_interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));var React=_interopRequireWildcard(require("react"));var _DrawerRouter=_interopRequireDefault(require("../DrawerRouter"));var _core=require("@react-navigation/core");var DrawerActions=_interopRequireWildcard(require("../../routers/DrawerActions"));var _jsxFileName="/Users/satya/Workspace/Callstack/react-navigation-drawer/src/routers/__tests__/DrawerRouter.test.tsx";var INIT_ACTION={type:_core.NavigationActions.INIT};it('handles basic drawer logic and fires close on switch',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:16}});};var ScreenB=function ScreenB(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:17}});};var router=(0,_DrawerRouter.default)({Foo:{screen:ScreenA},Bar:{screen:ScreenB}});var state=router.getStateForAction(INIT_ACTION);var expectedState={index:0,isTransitioning:false,routes:[{key:'Foo',routeName:'Foo',params:undefined},{key:'Bar',routeName:'Bar',params:undefined}],isDrawerOpen:false};expect(state).toEqual(expectedState);var state2=router.getStateForAction({type:_core.NavigationActions.NAVIGATE,routeName:'Bar'},state);var expectedState2={index:1,isTransitioning:false,routes:[{key:'Foo',routeName:'Foo',params:undefined},{key:'Bar',routeName:'Bar',params:undefined}],isDrawerOpen:false};expect(state2).toEqual(expectedState2);expect(router.getComponentForState(expectedState)).toEqual(ScreenA);expect(router.getComponentForState(expectedState2)).toEqual(ScreenB);});it('handles initial route navigation',function(){var FooScreen=function FooScreen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:52}});};var BarScreen=function BarScreen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:53}});};var router=(0,_DrawerRouter.default)({Foo:{screen:FooScreen},Bar:{screen:BarScreen}},{initialRouteName:'Bar'});var state=router.getStateForAction({type:_core.NavigationActions.NAVIGATE,routeName:'Foo'});expect(state).toEqual({index:0,isDrawerOpen:false,isTransitioning:false,routes:[{key:'Foo',params:undefined,routeName:'Foo'},{key:'Bar',params:undefined,routeName:'Bar'}]});});it('drawer opens, closes and toggles',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:89}});};var ScreenB=function ScreenB(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:90}});};var router=(0,_DrawerRouter.default)({Foo:{screen:ScreenA},Bar:{screen:ScreenB}});var state=router.getStateForAction(INIT_ACTION);expect(state.isDrawerOpen).toEqual(false);var state2=router.getStateForAction({type:DrawerActions.OPEN_DRAWER},state);expect(state2.isDrawerOpen).toEqual(true);var state3=router.getStateForAction({type:DrawerActions.CLOSE_DRAWER},state2);expect(state3.isDrawerOpen).toEqual(false);var state4=router.getStateForAction({type:DrawerActions.TOGGLE_DRAWER},state3);expect(state4.isDrawerOpen).toEqual(true);});it('drawer opens, closes with key targeted',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:122}});};var ScreenB=function ScreenB(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:123}});};var router=(0,_DrawerRouter.default)({Foo:{screen:ScreenA},Bar:{screen:ScreenB}});var state=router.getStateForAction(INIT_ACTION);var state2=router.getStateForAction({type:DrawerActions.OPEN_DRAWER,key:'wrong'},state);expect(state2.isDrawerOpen).toEqual(false);var state3=router.getStateForAction({type:DrawerActions.OPEN_DRAWER,key:state.key},state2);expect(state3.isDrawerOpen).toEqual(true);});it('nested routers bubble up blocked actions',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:145}});};ScreenA.router={getStateForAction:function getStateForAction(action,lastState){if(action.type==='CHILD_ACTION')return null;return lastState;}};var ScreenB=function ScreenB(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:152}});};var router=(0,_DrawerRouter.default)({Foo:{screen:ScreenA},Bar:{screen:ScreenB}});var state=router.getStateForAction(INIT_ACTION);var state2=router.getStateForAction({type:'CHILD_ACTION'},state);expect(state2).toEqual(null);});it('drawer does not fire close when child routers return new state',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:164}});};ScreenA.router={getStateForAction:function getStateForAction(action){var lastState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{changed:false};if(action.type==='CHILD_ACTION')return(0,_objectSpread2.default)({},lastState,{changed:true});return lastState;}};var router=(0,_DrawerRouter.default)({Foo:{screen:ScreenA}});var state=router.getStateForAction(INIT_ACTION);expect(state.isDrawerOpen).toEqual(false);var state2=router.getStateForAction({type:'CHILD_ACTION'},state);expect(state2.isDrawerOpen).toEqual(false);expect(state2.routes[0].changed).toEqual(true);});it('drawerRouter will close drawer on child navigaton, not on child param changes',function(){var FooView=function(_React$Component){(0,_inherits2.default)(FooView,_React$Component);function FooView(){(0,_classCallCheck2.default)(this,FooView);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(FooView).apply(this,arguments));}(0,_createClass2.default)(FooView,[{key:"render",value:function render(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:190}});}}]);return FooView;}(React.Component);var BarRouter=(0,_core.SwitchRouter)({Qux:FooView,Quo:FooView});var BarView=function(_React$Component2){(0,_inherits2.default)(BarView,_React$Component2);function BarView(){(0,_classCallCheck2.default)(this,BarView);return(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(BarView).apply(this,arguments));}(0,_createClass2.default)(BarView,[{key:"render",value:function render(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:200}});}}]);return BarView;}(React.Component);BarView.router=BarRouter;var router=(0,_DrawerRouter.default)({Bar:BarView,Foo:FooView});var emptyState=router.getStateForAction(_core.NavigationActions.init());var initState=router.getStateForAction(DrawerActions.openDrawer(),emptyState);expect(initState.isDrawerOpen).toBe(true);var state0=router.getStateForAction(_core.NavigationActions.navigate({routeName:'Quo'}),initState);expect(state0.isDrawerOpen).toBe(false);var initSwitchState=initState.routes[initState.index];var initQuxState=initSwitchState.routes[initSwitchState.index];var state1=router.getStateForAction(_core.NavigationActions.setParams({key:initQuxState.key,params:{foo:'bar'}}),initState);var state1switchState=state1.routes[state1.index];var state1quxState=state1switchState.routes[state1switchState.index];expect(state1.isDrawerOpen).toBe(true);expect(state1quxState.params.foo).toEqual('bar');});it('goBack closes drawer when inside of stack',function(){var ScreenA=function ScreenA(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:238}});};var DrawerScreen=function DrawerScreen(){return React.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:239}});};DrawerScreen.router=(0,_DrawerRouter.default)({Foo:{screen:ScreenA},Bar:{screen:ScreenA}});var router=(0,_core.StackRouter)({Baz:{screen:ScreenA},Drawer:{screen:DrawerScreen}});var state0=router.getStateForAction(INIT_ACTION);expect(state0.index).toEqual(0);var state1=router.getStateForAction(_core.NavigationActions.navigate({routeName:'Foo'}),state0);expect(state1.index).toEqual(1);var state2=router.getStateForAction(DrawerActions.openDrawer(),state1);var state3=router.getStateForAction({type:DrawerActions.DRAWER_OPENED},state2);expect(state3.index).toEqual(1);expect(state3.routes[1].isDrawerOpen).toEqual(true);var state4=router.getStateForAction(_core.NavigationActions.back(),state3);expect(state4.routes[1].isDrawerOpen).toEqual(false);});
//# sourceMappingURL=DrawerRouter.test.js.map