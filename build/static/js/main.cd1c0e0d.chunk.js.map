{"version":3,"sources":["TextFields/SigninPage/0.png","Navigation/FinalNav.js","Card/Progress/progress.js","Card/card.component.js","Stats/plantstats/plantstats.js","Card/Material_Card.js","Card/ZoneDetailCard.js","Card/Row_details.js","Stats/zonestats/zonestats.js","Card/Dialog.js","Stats/rowstats/rowstats.js","Card/CleanImages.js","Stats/rowstats/rowenquiry.js","Creating/register.js","TextFields/SigninPage/js/main.js","TextFields/SigninPage/New_Signin.js","QR/QRCode_Gen.js","QR/QRCodeBlock.js","Creating/PlantForm.js","Creating/CreatePlant.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FinalNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","plant","sessionStorage","getItem","split","toLowerCase","html1","html2","html3","current","startdate","endDate","year","OnPlantChange","bind","assertThisInitialized","SelectCycle","Selectstartdate","SelectEndDate","Hello","setStateSynchronous","stateUpdate","_this2","Promise","resolve","setState","document","getElementById","classList","toggle","handle","pr","cycle","replace","number","_this3","setInterval","plantstats","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","data","status","currentCycle","contractyear","alert","prevProps","prevState","snapshot","_this4","plant_array","plants","items5","i","length","push","react_default","a","createElement","key","value","selected","className","id","toUpperCase","htmlFor","onChange","react_router_dom","to","role","fname","type","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","dangerouslySetInnerHTML","__html","Button","href","size","color","variant","onLogoutClicked","event","_this5","target","letto","setplant","removeItem","Component","useStyles","makeStyles","theme","margin","spacing","BorderLinearProgress","withStyles","root","height","backgroundColor","lighten","borderRadius","bar","LinearProgress","LinearStatic","_ref","progress","classes","card","minWidth","bullet","display","transform","title","fontSize","pos","marginBottom","container","flexWrap","textField","marginLeft","marginRight","dense","marginTop","menu","width","expand","transition","transitions","create","duration","shortest","button","SimpleCard","cycle1","set","_React$useState","React","useState","_React$useState2","slicedToArray","expanded","setExpanded","_React$useState3","_React$useState4","setValue","_React$useState5","_React$useState6","setYear","_React$useState7","_React$useState8","setCycle","Card","CardContent","Typography","CardActions","style","Collapse","in","timeout","unmountOnExit","TextField","label","preventDefault","startToday","PlantStats","concat","select","redirect","ended","totalmodules","name","uv","pv","amt","data1","totalcleaned","onCycleFixed","handler3","setPlant","setEnded","resp","hell","console","log","Date","today","bek","date12","date","getFullYear","getMonth","slice","getDate","presentDate","hel","lol","sort","b","jelly","beo","map","hello","today_cleaned","Math","floor","help","cleaned_till_date","catch","err","lollo","setItem","_this6","gel","items","react_router","src_Navigation_FinalNav","handler","es6","top","right","left","bottom","syncId","strokeDasharray","dataKey","offset","position","angle","stroke","e","_this7","Number","bro","start","end","withRouter","maxWidth","maxHeight","cardButton","textAlign","media","paddingTop","expandOpen","avatar","flexGrow","MaterialCard","zone","rows","accap","dccap","onCardClicked","CardHeader","Avatar","subheader","ButtonBase","component","disableSpacing","Material_Card_BorderLinearProgress","createMuiTheme","typography","fontFamily","end1","border","borderColor","borderStyle","padding","ZoneDetails","block","totalrows","totalmod","inv","smb","fmod","tmod","wp","onButton","MuiThemeProvider","minHeight","orangeAvatar","BlockStats","row","cleanStatus","updateDate","updateTime","comments","ZoneStats","zoneIndividual","inverter","totalzones","details","onNumberFixed","onRowFixed","handler2","onButtonClicked","result","zones","dccaps","acacps","tots","zo","hela","zonenum","thor","g","loki","cards","Material_Card","handler1","onButtonClicked1","onButtonClicked2","delta","del","delt","int","blocks","inverters","deta","deter","formControl","group","textfield","paddingBottom","UpdateValues","updateIt","open","handleClose","updatedate","updatetime","updatestatus","updatecomments","values","setValues","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleChange","objectSpread","defineProperty","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","fullWidth","multiline","FormControl","RadioGroup","FormLabel","FormControlLabel","control","Radio","DialogActions","button1","RowStats","getinfo","_useState","_useState2","setOpen","SMB","newdate","newStatus","newTime","newComment","quill","justifyContent","palette","background","paper","gridList","ImageGrid","tileData","cyc","oncl","tiles","tile","GridListTile","img","src","alt","GridListTileBar","GridList","cellHeight","cols","RowEnquiry","cleanedStatus","forty","cycls","cardData","onEmailChange","onPasswordChange","onBlockChange","onInverterChange","onSMBChange","getInfo","required","defaultValue","CloudDownload","Divider","CSV","toString","Status","JSONToCSVConvertor","kill","q","w","r","cycs","killa","letr","dark","happy","_this8","dat","precleaned","postcleaned","naan","JSONData","ReportTitle","ShowLabel","arrData","parse","index","fileName","uri","escape","link","download","appendChild","click","removeChild","Register","onSubmitClicked","FullNameChange","RoleChange","email","EmailChange","uid","UserNameChange","PlantsChange","password","PasswordChange","onFullChange","onRoleChange","onUserNameChange","onPlantsChecked","onCancelClicked","h","plant_name","red","aria-describedby","placeholder","checkboxes","getElementsByName","val","checked","history","goBack","$","input","validate","attr","trim","match","showValidate","thisAlert","parent","addClass","on","check","each","focus","removeClass","hideValidate","jQuery","NewSignIn","username","UsernameChange","passwordChange","_data$body$","tilt_default","options","scale","data-tilt","require","data-validate","aria-hidden","QRious","styles","h1","qrcode1","QRCodeGen","startDate","func","canvas","querySelector","backgroundAlpha","foreground","foregroundAlpha","level","row_num","blockname","element","imgData","toDataURL","pdf","jsPDF","addImage","text","save","QRCodeBlock","the","addPage","div","PlantForm","AddHandler","done","_40mrows","_20mrows","autoComplete","PlaylistAdd","PlaylistAddCheck","CreatePlant","textfields","addAnotherRow","plantname","doneAdding","c","d","f","j","totalMods","lotte","stark","App","signedIn","exact","path","render","plantstats_plantstats","assign","zonestats","rowenquiry","New_Signin","QRCode_Gen_QRCodeGen","QRCodeBlock_QRCodeBlock","ResponsiveDialog","Boolean","window","location","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd1c0e0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.1f771646.png\";","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport {Link} from 'react-router-dom';\nimport './FinalNav.css';\nimport 'hamburgers/dist/hamburgers.css';\nimport 'hamburgers/index';\nimport 'font-awesome/css/font-awesome.css';\nimport {Button} from \"@material-ui/core\";\n\nclass FinalNav extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            plant: sessionStorage.getItem('plant') !== null ? sessionStorage.getItem('plant') : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n            html1: \"\",\n            html2: \"\",\n            html3: \"\",\n            current: 0,\n            startdate: '16/10/2019',\n            endDate: '1/11/2019',\n            year: 0,\n        };\n        this.OnPlantChange = this.OnPlantChange.bind(this);\n        this.SelectCycle = this.SelectCycle.bind(this);\n        this.Selectstartdate = this.Selectstartdate.bind(this);\n        this.SelectEndDate = this.SelectEndDate.bind(this);\n        this.Hello = this.Hello.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    Hello() {\n        document.getElementById('sidebar').classList.toggle('active');\n        this.props.handle();\n    }\n\n    SelectCycle() {\n        let html = this.props.pr.cycle;\n        let html1 = html.replace('undefined', this.props.number);\n        this.setState({\n            html1: html1,\n        });\n    }\n\n    Selectstartdate() {\n        let html = this.props.pr.startdate;\n        let html1 = html.replace('undefined', this.state.startdate);\n        this.setState({\n            html2: html1,\n        });\n    }\n\n    SelectEndDate() {\n        let html = this.props.pr.endDate;\n        let html1 = html.replace('undefined', this.state.endDate);\n        this.setState({\n            html3: html1,\n        });\n    }\n\n    componentDidMount() {\n        setInterval(this.SelectCycle, 500);\n        if (this.props.plantstats) {\n            setInterval(this.Selectstartdate, 500);\n            setInterval(this.SelectEndDate, 500);\n        }\n        fetch('http://localhost:3000/get-cycle-data', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                let {status,startdate, endDate, currentCycle, contractyear} = data;\n                if(status!=='Success')\n                {\n                    alert(status);\n                }\n                else{\n                    this.setState({\n                        startdate: startdate,\n                        endDate: endDate,\n                        current: currentCycle,\n                        year: contractyear,\n                    });\n                }\n            });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.plant !== this.state.plant) {\n\n            fetch('http://localhost:3000/get-cycle-data', {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    plant: this.state.plant,\n                })\n            })\n                .then(res => res.json())\n                .then(data => {\n                    let {startdate, endDate, currentCycle, contractyear} = data;\n                    this.setState({\n                        startdate: startdate,\n                        endDate: endDate,\n                        current: currentCycle,\n                        year: contractyear,\n                    });\n                });\n        }\n    }\n\n    render() {\n        let plant_array = this.props.plants.split('&');\n        let items5 = [];\n        for (let i = 0; i < plant_array.length - 1; i++) {\n            (plant_array[i] !== sessionStorage.getItem('plant')) ? items5.push(<option key={plant_array[i]}\n                                                                                          value={plant_array[i]}>{plant_array[i]}</option>) :\n            items5.push(<option key={plant_array[i]} selected value={plant_array[i]}>{plant_array[i]}</option>);\n        }\n        return (\n            <div className=\"wrapper\">\n                <nav id=\"sidebar\">\n                    <ul className=\"list-unstyled components\">\n                        <li className=\"nav-item active\">\n                            <strong className=\"nav-link\">Current Plant:<span\n                                className=\"sr-only\">(current)</span></strong>\n                        </li>\n                        <li id=\"bellow\" className=\"nav-item active\">\n                            <strong className=\"nav-link\">{this.state.plant.toUpperCase()}<span\n                                className=\"sr-only\">(current)</span></strong>\n                        </li>\n                        <li className=\"active\">\n                            <label id=\"bello\" htmlFor=\"sel1\">Select Plant:</label>\n                            <select onChange={this.OnPlantChange} className=\"form-control\" id=\"sel1\">\n                                {items5}\n                            </select>\n                        </li>\n                        <li>\n                            <Link to='/plantstats'>Plant Stats</Link>\n                        </li>\n                        <li>\n                            <Link to='/rowstats'>Row Stats</Link>\n                        </li>\n                        <li>\n                            <Link to='/zonestats'>Zone Stats</Link>\n                        </li>\n                        {\n                            this.props.role === 'admin' ? <li><Link to='/plant'>Create a Plant</Link></li> : ''\n                        }\n                        <li>\n                            <Link to='/qrcode'>Generate QR for Single Row</Link>\n                        </li>\n                        <li>\n                            <Link to='/qrcode_block'>Generate QR By Block</Link>\n                        </li>\n                    </ul>\n                    <ul className=\"list-unstyled LTS\" id='kelo'>\n                        <li>\n                            <i id='profile' className=\"fa fa-user fa-2x\"></i>\n                        </li>\n                        <li>\n                            <h5>{this.props.fname}</h5>\n                        </li>\n                        <li>\n                            <h5>{this.props.role}</h5>\n                        </li>\n                        <li>\n                            <h5 id='compa'>SSAEL</h5>\n                        </li>\n                    </ul>\n                </nav>\n                <nav id=\"hell\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div>\n                        <button className=\"btn btn-light\"\n                                type=\"button\"\n                                id=\"sidebarCollapse\"\n                                onClick={this.Hello}>\n                            <i className=\"fa fa-align-justify\"/>\n                        </button>\n                        <strong className='navbar-brand'>QR App</strong>\n                    </div>\n                    <button className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#navbarSupportedContent\"\n                            aria-controls=\"navbarSupportedContent\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\"\n                         id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item active\">\n                                <strong className=\"nav-link\"\n                                        dangerouslySetInnerHTML={{__html: this.state.html1}}>\n                                </strong>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <strong className=\"nav-link\"\n                                        dangerouslySetInnerHTML={{__html: this.state.html2}}>\n                                </strong>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <strong className=\"nav-link\"\n                                        dangerouslySetInnerHTML={{__html: this.state.html3}}>\n                                </strong>\n                            </li>\n                            <li>\n                                <Button href='/signin' size='small' color='secondary' variant='contained'\n                                        onClick={FinalNav.onLogoutClicked} id='button'>Logout</Button>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n\n    OnPlantChange(event) {\n        this.setStateSynchronous({\n            plant: event.target.value.toLowerCase(),\n        })\n            .then(letto => {\n                this.props.setplant(this.state.plant);\n            });\n\n    }\n\n    static onLogoutClicked() {\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('fname');\n        sessionStorage.removeItem('role');\n        sessionStorage.removeItem('plants');\n        sessionStorage.removeItem('plant');\n    }\n}\n\nexport default FinalNav;\n","import React from 'react';\nimport {lighten, makeStyles, withStyles} from '@material-ui/core/styles';\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles(theme => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst BorderLinearProgress = withStyles({\n    root: {\n        height: 10,\n        backgroundColor: lighten('#e01616', 0.7),\n        borderRadius: 20,\n    },\n    bar: {\n        borderRadius: 20,\n        backgroundColor: '#008c0c',\n    },\n})(LinearProgress);\n\nexport default function LinearStatic( { progress }) {\n    const classes = useStyles();\n    return (\n        <div>\n            <BorderLinearProgress\n                className={classes.margin}\n                variant=\"determinate\"\n                value={progress}\n            />\n        </div>\n    );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Collapse } from \"@material-ui/core\";\n\nimport './card.component.styles.css';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        minWidth: 275\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\"\n    },\n    title: {\n        fontSize: 14\n    },\n    pos: {\n        marginBottom: 12\n    },\n    container: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n    },\n    dense: {\n        marginTop: theme.spacing(2)\n    },\n    menu: {\n        width: 200\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest\n        })\n    },\n    button: {\n        margin: theme.spacing(1)\n    }\n}));\n\nexport default function SimpleCard( { cycle1,plant,set } ) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    const [value, setValue] = React.useState(\"0\");\n    const [year, setYear] = React.useState(\"0\");\n    const [cycle, setCycle] = React.useState(\"0\");\n\n    const onOKclicked = () => {\n        setExpanded(true);\n    };\n\n    const onCancelClicked = () => {\n        setExpanded(false);\n        document.getElementById('helloworld').style.display = 'none';\n    };\n\n    const handleChange = event => {\n        setValue(event.target.value);\n    };\n\n    const CreateCycle = (event) => {\n        event.preventDefault();\n        fetch(\"http://localhost:3000/create-cycle\",\n            {\n                method : 'post',\n                headers : {\n                    'Content-Type' : 'application/json',\n                },\n                body : JSON.stringify({\n                    plant : plant,\n                    startToday : true,\n                    duration : value,\n                    year : year,\n                    cycle : cycle,\n                })\n            }\n        ).then(data => alert('Success'));\n        set();\n    };\n\n    const handleChangeY = event => {\n        setYear(event.target.value);\n    };\n\n    const handleChangeC = event => {\n        setCycle(event.target.value);\n    };\n\n    return (\n        <Card id='helloworld' className={classes.card}>\n            <CardContent>\n                <Typography variant=\"h5\" color=\"textPrimary\">\n                    The Cycle {cycle1} has been completed. Do You want to Start it today!\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button className={classes.expand} onClick={onOKclicked} size=\"small\">\n                    Yes\n                </Button>\n                <Button\n                    className={classes.expand}\n                    onClick={onCancelClicked}\n                    size=\"small\"\n                >\n                    No\n                </Button>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textPrimary\">\n                        How Many Days It will Continue\n                    </Typography>\n                    <TextField\n                        id=\"standard-name\"\n                        label=\" duration\"\n                        className={classes.textField}\n                        value={value}\n                        onChange={handleChange}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"ContractYear\"\n                        className={classes.textField}\n                        value={year}\n                        onChange={handleChangeY}\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        id=\"standard-name\"\n                        label=\"Cycle\"\n                        className={classes.textField}\n                        value={cycle}\n                        onChange={handleChangeC}\n                        margin=\"normal\"\n                    />\n                </CardContent>\n                <CardActions>\n                    <Button className={classes.button} variant=\"contained\" onClick={CreateCycle}>\n                        Create Cycle\n                    </Button>\n                </CardActions>\n            </Collapse>\n        </Card>\n    );\n}\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './plantstats.css'\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport {Redirect, withRouter} from \"react-router\";\nimport {LineChart, Line, Label , Brush, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\nimport {Typography} from \"@material-ui/core\";\nimport LinearStatic from '../../Card/Progress/progress';\n\nimport SimpleCard from '../../Card/card.component';\n\n\nclass PlantStats extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            number : 14,\n            current: 0,\n            startdate: '16/10/2019',\n            endDate: '1/11/2019',\n            year : 0,\n            redirect : false,\n            ended : false,\n            plant : sessionStorage.getItem('plant') !== null ? sessionStorage.getItem('plant') : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n            totalmodules : 0,\n            data : [\n                {\n                    \"name\": \"Page A\",\n                    \"uv\": 4000,\n                    \"pv\": 2400,\n                    \"amt\": 2400\n                },\n                {\n                    \"name\": \"Page B\",\n                    \"uv\": 3000,\n                    \"pv\": 1398,\n                    \"amt\": 2210\n                },\n                {\n                    \"name\": \"Page C\",\n                    \"uv\": 2000,\n                    \"pv\": 9800,\n                    \"amt\": 2290\n                },\n                {\n                    \"name\": \"Page D\",\n                    \"uv\": 2780,\n                    \"pv\": 3908,\n                    \"amt\": 2000\n                },\n                {\n                    \"name\": \"Page E\",\n                    \"uv\": 1890,\n                    \"pv\": 4800,\n                    \"amt\": 2181\n                },\n                {\n                    \"name\": \"Page F\",\n                    \"uv\": 2390,\n                    \"pv\": 3800,\n                    \"amt\": 2500\n                },\n                {\n                    \"name\": \"Page G\",\n                    \"uv\": 3490,\n                    \"pv\": 4300,\n                    \"amt\": 2100\n                }\n            ],\n            data1 : [],\n            totalcleaned : 0,\n            duration : 15,\n        };\n        this.onCycleFixed = this.onCycleFixed.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.handler3 = this.handler3.bind(this);\n        this.setPlant = this.setPlant.bind(this);\n        this.setEnded = this.setEnded.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle : `<div><span>Current Cycle - </span><strong>${this.props.number}</strong></div>`,\n        select : ``,\n        startdate : \"<div><span>startdate - </span><strong>\"+this.props.startdate+\"</strong></div>\",\n        endDate : \"<div><span>ExpectedEndDate - </span><strong>\"+this.props.endDate+\"</strong></div>\",\n    };\n\n    componentDidMount() {\n        if (!sessionStorage.getItem('token')) {\n            this.setState({\n                redirect: true,\n            });\n        }\n\n        fetch(\"http://localhost:3000/check-cycle\",{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n            })\n        })\n            .then(resp=> resp.json())\n            .then( hell =>\n            {\n                let year = hell.contractyear;\n                console.log(year);\n                this.setStateSynchronous({\n                    year : year,\n                });\n            });\n        if(this.props.role === 'admin')\n        {\n            fetch(\"http://localhost:3000/check-cycle\",{\n                method : 'post',\n                headers : {\n                    'Content-Type' : 'application/json',\n                },\n                body : JSON.stringify({\n                    plant : this.state.plant,\n                })\n            })\n                .then(resp=> resp.json())\n                .then( hell =>\n                {\n                    let year = hell.contractyear;\n                    this.setStateSynchronous({\n                        year : year,\n                    });\n                    let endDate = new Date(hell.endDate);\n                    let today = new Date();\n                    if(hell['body'] === 1 || endDate <= today ){\n                        this.setStateSynchronous({\n                            ended : true,\n                        });\n                    }\n                });\n        }\n        fetch('http://localhost:3000/get-cycle-data',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n            })\n        })\n            .then(res=>res.json())\n            .then(data=>{\n                let { startdate,endDate,currentCycle,duration } = data;\n                this.setStateSynchronous({\n                    startdate: startdate,\n                    endDate: endDate,\n                    number: currentCycle,\n                    current : currentCycle,\n                    duration : duration,\n                }).then(bek =>{\n                    const date = new Date();\n                    let date12;\n                    let today = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n                    date12 = this.state.endDate > today ? today : this.state.endDate;\n                    fetch('http://localhost:3000/getplant',{\n                        method : 'post',\n                        headers : {\n                            'Content-Type' : 'application/json',\n                        },\n                        body : JSON.stringify({\n                            plant : this.state.plant,\n                            startdate : this.state.startdate,\n                            presentDate : date12,\n                            cycle : this.state.number,\n                            year : this.state.year,\n                        })\n                    })\n                        .then(hel => hel.json())\n                        .then(lol=>{\n                            function compare(a, b){\n                                if (a.date > b.date) return 1;\n                                if (b.date > a.date) return -1;\n                                return 0;\n                            }\n                            lol['data'].sort(compare);\n                            this.setStateSynchronous({\n                                data : lol['data'],\n                                totalmodules : lol['totalmodules'],\n                            }).then(jelly =>{\n                                let beo = [];\n                                this.state.data.map((hello, i) => {\n                                    return beo.push({\n                                        'date' : hello['date'],\n                                        'today_cleaned' : Math.floor(this.state.totalmodules/this.state.duration),\n                                    });\n                                });\n                                function compare(a, b){\n                                    if (a.date > b.date) return 1;\n                                    if (b.date > a.date) return -1;\n                                    return 0;\n                                }\n                                beo.sort(compare);\n                                this.setStateSynchronous({\n                                    data1 : beo,\n                                });\n                            });\n                        }).then(help =>{\n                        let cleaned_till_date = 0;\n                        for(let i=0;i<this.state.data.length;i++)\n                        {\n                            cleaned_till_date += this.state.data[i].today_cleaned;\n                        }\n                        this.setStateSynchronous({\n                            totalcleaned : cleaned_till_date,\n                        });\n                        });\n                });\n            });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevState.plant !== this.state.plant)\n        {\n            if(this.props.role === 'admin')\n            {\n                fetch(\"http://localhost:3000/check-cycle\",{\n                    method : 'post',\n                    headers : {\n                        'Content-Type' : 'application/json',\n                    },\n                    body : JSON.stringify({\n                        plant : this.state.plant,\n                    })\n                })\n                    .then(resp=> resp.json())\n                    .then( hell =>\n                    {\n                        let year = hell.contractyear;\n                        let endDate = new Date(hell.endDate);\n                        let today = new Date();\n                        if(hell['body'] === 1 || endDate <= today){\n                            this.setStateSynchronous({\n                                ended : true,\n                                year : year,\n                            });\n                        }\n                    })\n                    .catch(err=>console.log(err));\n            }\n            fetch('http://localhost:3000/get-cycle-data',{\n                method : 'post',\n                headers : {\n                    'Content-Type' : 'application/json',\n                },\n                body : JSON.stringify({\n                    plant : this.state.plant,\n                })\n            })\n                .then(res=>res.json())\n                .then(data=>{\n                    let { startdate,endDate,currentCycle,duration,contractyear } = data;\n                    this.setStateSynchronous({\n                        startdate: startdate,\n                        endDate: endDate,\n                        number: currentCycle,\n                        duration : duration,\n                        year: contractyear,\n                    })\n                        .then(bek =>{\n                        const date = new Date();\n                        let date12;\n                        let today = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n                        date12 = this.state.endDate > today ? today : this.state.endDate;\n                        fetch('http://localhost:3000/getplant',{\n                            method : 'post',\n                            headers : {\n                                'Content-Type' : 'application/json',\n                            },\n                            body : JSON.stringify({\n                                plant : this.state.plant,\n                                startdate : this.state.startdate,\n                                presentDate : date12,\n                                cycle : this.state.number,\n                            })\n                        })\n                            .then(hel => hel.json())\n                            .then(lol=>{\n                                function compare(a, b){\n                                    if (a.date > b.date) return 1;\n                                    if (b.date > a.date) return -1;\n                                    return 0;\n                                }\n                                lol['data'].sort(compare);\n                                this.setStateSynchronous({\n                                    data : lol['data'],\n                                    totalmodules : lol['totalmodules'],\n                                }).then(jelly =>{\n                                    let beo = [];\n                                    this.state.data.map((hello, i) => {\n                                        return beo.push({\n                                            'date' : hello['date'],\n                                            'today_cleaned' : Math.floor(this.state.totalmodules/this.state.duration),\n                                        });\n                                    });\n                                    function compare(a, b){\n                                        if (a.date > b.date) return 1;\n                                        if (b.date > a.date) return -1;\n                                        return 0;\n                                    }\n                                    beo.sort(compare);\n                                    this.setStateSynchronous({\n                                        data1 : beo,\n                                    });\n                                });\n                            }).then(help =>{\n                            let cleaned_till_date = 0;\n                            for(let i=0;i<this.state.data.length;i++)\n                            {\n                                cleaned_till_date += this.state.data[i].today_cleaned;\n                            }\n                            this.setStateSynchronous({\n                                totalcleaned : cleaned_till_date,\n                            }).then(lollo => console.log(this.state));\n                        });\n                    });\n                })\n                .catch(err => {\n                    console.log(err);\n                    alert(`Can't find the data for the plant ${this.state.plant}`);\n                });\n        }\n\n    }\n\n    handler3(){\n        let body = document.getElementById('hello1');\n        body.classList.toggle('fill');\n    }\n\n    setPlant(plant){\n        this.setStateSynchronous({\n            plant : plant,\n        })\n            .then(res => {\n                sessionStorage.setItem('plant',this.state.plant);\n            });\n    }\n\n    setEnded(){\n        this.setStateSynchronous({\n            ended : false,\n        }).then(gel => {\n            this.setState();\n        })\n    }\n\n    render() {\n        let items = [];\n        for (let i = 1; i < this.state.number; i++) {\n            items.push(<option key={i} value={i}>{i}</option>);\n        }\n        items.push(<option key={this.state.number} selected={true} value={this.state.number}>{this.state.number}</option>);\n        if (this.state.redirect) {\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>;\n        }\n\n        return (\n            <div>\n                <FinalNav fname={sessionStorage.getItem('fname')}\n                          role={sessionStorage.getItem('role')}\n                          plants={sessionStorage.getItem('plants')}\n                          pr={this.pr}\n                          handler={this.props.handler}\n                          number={this.state.number}\n                          startdate={this.state.startdate}\n                          endDate={this.state.endDate}\n                          plantstats={true}\n                          handle={this.handler3}\n                          setplant={this.setPlant}\n                />\n                <div id=\"hello1\" className='fill'>\n                    <div id='cycleCard'>\n                    {\n                        this.state.ended ? <SimpleCard cycle1={this.state.current} plant={this.state.plant} set={this.setEnded}/> : ''\n                    }\n                    </div>\n                    <div><span><strong>Select cycle</strong></span><select className=\"form-control\" name='cycleNumber'\n                                                                           onChange={this.onCycleFixed}> {items}</select>\n                    </div>\n                    <br/>\n                    <h5>Actual Cleaned vs Date</h5> <br/>\n                    <LineChart width={730} height={250} data={this.state.data}\n                               margin={{top: 5, right: 30, left: 20, bottom: 30}} syncId='hell'>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <XAxis dataKey=\"date\">\n                            <Label value=\"Date\" offset={-10} position=\"insideBottom\"/>\n                        </XAxis>\n                        <YAxis label={{\n                            value: 'Total Modules Cleaned',\n                            offset: 0,\n                            angle: -90,\n                            position: 'insideBottomLeft'\n                        }}/>\n                        <Tooltip/>\n                        <Line type=\"linear\" dataKey=\"today_cleaned\" stroke=\"#003157\"/>\n                    </LineChart>\n                    <br/>\n                    <h5>Expected Cleaned vs Date</h5> <br/>\n                    <LineChart width={730} height={250} data={this.state.data1}\n                               margin={{top: 5, right: 30, left: 20, bottom: 5}} syncId='hell'>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <XAxis dataKey=\"date\"/>\n                        <YAxis/>\n                        <Tooltip/>\n                        <Line type=\"linear\" dataKey=\"today_cleaned\" stroke=\"#000000\"/>\n                        <Brush height={20}/>\n                    </LineChart>\n                    <br/>\n                    <Typography variant='body2'>Total Modules Cleaned Till Date : {this.state.totalcleaned} Out\n                        of {this.state.totalmodules}</Typography>\n                    <LinearStatic\n                        progress={Math.floor((this.state.totalcleaned / this.state.totalmodules) * 100)}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    onCycleFixed(e) {\n        e.preventDefault();\n        this.setStateSynchronous(({current: Number(e.target.value)})).then( bro => {\n            let date = new Date();\n            let today = date.getFullYear() + '-' + ('0' + (date.getMonth()+1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);\n                    let start, end;\n                    fetch('http://localhost:3000/getdataofparticularcycle',{\n                        method : 'post',\n                        headers : {\n                            'Content-Type' : 'application/json',\n                        },\n                        body : JSON.stringify({\n                            plant : sessionStorage.getItem('plant'),\n                            cycle : this.state.current,\n                        })\n                    }).then(res=> res.json())\n                        .then(data => {\n                            let date12;\n                            start = data.startdate;\n                            end = data.endDate;\n                            date12 = end > today ? today : end;\n                            fetch('http://localhost:3000/getplant',{\n                                method : 'post',\n                                headers : {\n                                    'Content-Type' : 'application/json',\n                                },\n                                body : JSON.stringify({\n                                    plant : this.state.plant,\n                                    startdate : start,\n                                    presentDate : date12,\n                                    cycle : this.state.current,\n                                    year : this.state.year,\n                                })\n                            })\n                                .then(hel => hel.json())\n                                .then(lol=>{\n                                    console.log(lol);\n                                    function compare(a, b){\n                                        if (a.date > b.date) return 1;\n                                        if (b.date > a.date) return -1;\n                                        return 0;\n                                    }\n                                    if(lol['status'] !== 'Success')\n                                    {\n                                        alert(lol['status']);\n                                    }\n                                    else\n                                    {\n                                        lol['data'].sort(compare);\n                                        this.setStateSynchronous({\n                                            data : lol['data'],\n                                            totalmodules : lol['totalmodules'],\n                                        }).then(jelly =>{\n                                            let beo = [];\n                                            this.state.data.map((hello, i) => {\n                                                return beo.push({\n                                                    'date' : hello['date'],\n                                                    'today_cleaned' : Math.floor(this.state.totalmodules/this.state.duration),\n                                                });\n                                            });\n                                            function compare(a, b){\n                                                if (a.date > b.date) return 1;\n                                                if (b.date > a.date) return -1;\n                                                return 0;\n                                            }\n                                            beo.sort(compare);\n                                            this.setStateSynchronous({\n                                                data1 : beo,\n                                            });\n                                        });\n                                    }\n                                });\n                        });\n                });\n        }\n}\n\nexport default withRouter(PlantStats);\n\n\n","import React from 'react';\nimport { makeStyles,withStyles,lighten } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport './hello.css';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        maxWidth: '50vw',\n        maxHeight: '60vw',\n        borderRadius : 20,\n    },\n\n    cardButton: {\n        textAlign: \"center\"\n    },\n\n    media: {\n        height: 0,\n        paddingTop: '56.25%',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: '#333333',\n    },\n    root: {\n        flexGrow: 1,\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst BorderLinearProgress = withStyles({\n    root: {\n        height: 7,\n        backgroundColor: lighten('#383838', 0.7),\n        borderRadius: 20,\n    },\n    bar: {\n        borderRadius: 20,\n        backgroundColor: '#383838',\n    },\n})(LinearProgress);\n\nfunction MaterialCard({ zone,today,rows,accap,dccap,progress,onCardClicked }) {\n    const classes = useStyles();\n    const hello = `Zone ${zone}`;\n    return (\n        <div className='gmd-1'>\n            <Card className={classes.card} >\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n                            {zone}\n                        </Avatar>\n                    }\n                    title={hello}\n                    subheader={today}\n                />\n                <ButtonBase className={classes.cardButton} onClick={(e) => onCardClicked(zone,e)}>\n                    <CardContent>\n                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                            Total Rows : {rows}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            DC Cap: {dccap} MW\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            AC Cap: {accap} MW\n                        </Typography>\n                    </CardContent>\n                </ButtonBase>\n                <CardActions disableSpacing>\n                    <Typography variant='h6' color='textSecondary'>{progress}% Completed</Typography>\n\n                </CardActions>\n                <div>\n                <BorderLinearProgress\n                    className={classes.margin}\n                    variant=\"determinate\"\n                    value={progress}\n                />\n            </div>\n            </Card>\n        </div>\n    );\n}\nexport default MaterialCard;\n","import React from 'react';\nimport { makeStyles,createMuiTheme,MuiThemeProvider } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport 'typeface-rubik';\nimport './hello.css';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: 'Rubik',\n    },\n});\n\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: '30vw',\n        maxWidth : '50vw',\n        textAlign : 'initial',\n        borderRadius : 20,\n        position : 'relative',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    end: {\n        position: \"absolute\",\n        right : 15,\n        top: 10,\n        marginRight : 10,\n        fontSize: 20,\n    },\n\n    end1: {\n        position: \"absolute\",\n        right : 24,\n        top: 40,\n        marginRight : 10,\n        fontFamily : theme.typography.fontFamily,\n        border: 2,\n        borderColor: 'black',\n        borderStyle :\"solid\",\n        padding : 3,\n    }\n});\n\nexport default function ZoneDetails({ block,totalrows,totalmod,inv,smb,fmod,tmod,wp,onButton }) {\n    const classes = useStyles();\n\n    return (\n        <div className='gmd-1'>\n            <MuiThemeProvider theme={theme}>\n                <Card className={classes.card}>\n                    <Typography className={classes.end} variant='h5'>\n                        Block\n                    </Typography>\n                    <Typography className={classes.end1} variant='h5'>\n                        {block}\n                    </Typography>\n                    <CardContent>\n                        <Typography variant='h5'>\n                            Total Rows : {totalrows}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" component=\"h2\">\n                            Total Modules : {totalmod}\n                        </Typography>\n                        <Typography variant='subtitle2'>\n                            Inverter : {inv}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" component=\"strong\">\n                            SMB : {smb}\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle2\" component=\"strong\">\n                            40 Module Rows : {fmod}\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle2\" component=\"strong\">\n                            20 Module Rows : {tmod}\n                        </Typography>\n                        <br/>\n                        <Typography variant=\"subtitle2\" component=\"strong\">\n                            Watt Power: {wp}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button color='primary' size=\"large\" onClick={(e) => onButton(e, block,inv,smb)}>Get Detailed Info</Button>\n                    </CardActions>\n                </Card>\n            </MuiThemeProvider>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card,CardContent } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader'\nimport {Typography} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport './hello.css'\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 400,\n        maxWidth : '50vw',\n        minHeight : 200,\n        textAlign : 'end',\n        position: 'relative',\n        borderRadius : 20,\n    },\n    title: {\n        fontSize: 14,\n    },\n    orangeAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: 'black',\n    },\n    top : {\n        position : 'absolute',\n        top : 50,\n        right : 5,\n    },\n    button : {\n        position : 'absolute',\n        bottom : 5,\n        left : 4,\n    }\n});\n\nexport default function BlockStats({ row, fmod, cleanStatus, updateDate, updateTime, comments }) {\n    const classes = useStyles();\n\n    return (\n        <div className='gmd-1'>\n            <Card className={classes.card}>\n                <CardHeader\n                    avatar={<Avatar className={classes.orangeAvatar}>{row}</Avatar>}\n                />\n                <CardContent className={classes.top}>\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        fmod == 1 ? <Typography variant=\"h5\" component=\"h2\">Row-Type : 40 Module Row</Typography> : <Typography variant=\"h5\" component=\"h2\">Row-Type : 20 Module Row</Typography>\n                    }\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        cleanStatus == 1 ? <Typography variant=\"h5\" component=\"h2\">Clean Status : Cleaned</Typography> : <Typography variant=\"h5\" component=\"h2\">Clean Status : Not Cleaned</Typography>\n                    }\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        cleanStatus == 1 ? <Typography variant=\"body2\" component=\"h2\"> Update Date : {updateDate} </Typography> : <Typography variant=\"body2\" component=\"h2\">Will be cleaned Soon</Typography>\n                    }\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        cleanStatus == 1 ? <Typography variant=\"body2\" component=\"h2\"> Update Time : {updateTime} </Typography> : ''\n                    }\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        cleanStatus == 1 ? <Typography variant=\"body2\" component=\"h2\"> Comment : {comments} </Typography> : ''\n                    }\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n\n\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'tachyons';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport {Redirect, withRouter} from \"react-router\";\nimport MaterialCard from '../../Card/Material_Card';\nimport './plantstats.css';\nimport ZoneDetails from '../../Card/ZoneDetailCard';\nimport {Button} from \"@material-ui/core\";\nimport BlockStats from \"../../Card/Row_details\";\n\nclass ZoneStats extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            zone: [],\n            zoneIndividual : 0,\n            cycle: 0,\n            current: 1,\n            row: 0,\n            year : 0,\n            inverter : '',\n            totalrows: [],\n            redirect: false,\n            plant : sessionStorage.getItem('plant') !== null ? sessionStorage.getItem('plant') : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n            accap: [],\n            dccap: [],\n            totalzones: 0,\n            startdate: '',\n            details: [],\n            data : [],\n            progress : [],\n        };\n\n        this.onNumberFixed = this.onNumberFixed.bind(this);\n        this.onCycleFixed = this.onCycleFixed.bind(this);\n        this.onRowFixed = this.onRowFixed.bind(this);\n        this.handler2 = this.handler2.bind(this);\n        this.setPlant = this.setPlant.bind(this);\n        this.onCardClicked = this.onCardClicked.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.onButtonClicked = this.onButtonClicked.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle: \"\",\n        select: \"\",\n        startdate: \"\",\n    };\n\n    componentDidMount() {\n        if (!sessionStorage.getItem('token')) {\n            this.setState({\n                redirect: true,\n            });\n        }\n\n        fetch(\"http://localhost:3000/get-cycle-data\", {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n            }),\n        })\n            .then(res => res.json())\n            .then(result => {\n                this.setStateSynchronous({\n                    startdate: result.startdate,\n                    cycle: result.currentCycle,\n                    year : result.contractyear,\n                });\n            });\n        fetch('http://localhost:3000/zonedata', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n            })\n        }).then(resp => resp.json())\n            .then(hello => {\n                if(hello['status'] !== 'Success')\n                {\n                    alert(hello['status']);\n                }\n                else {\n                    const p = hello['body'];\n                    let zones = [];\n                    let dccaps = [];\n                    let acacps = [];\n                    let tots = [];\n                    // eslint-disable-next-line array-callback-return\n                    p.map((zo, i) => {\n                        zones.push(zo['zone']);\n                        acacps.push(zo['accapacity']);\n                        dccaps.push(zo['dccapacity']);\n                        tots.push(zo['totalrows'])\n                    });\n                    this.setStateSynchronous({\n                        zone: zones,\n                        accap: acacps,\n                        dccap: dccaps,\n                        totalrows: tots,\n                        totalzones: p.length,\n                    }).then(hela => fetch('http://localhost:3000/zoneprogress',{\n                        method : 'post',\n                        headers : {\n                            'Content-Type' : 'application/json',\n                        },\n                        body : JSON.stringify({\n                            plant : this.state.plant,\n                            year : this.state.year,\n                            cycle : this.state.cycle,\n                            zonenum : zones.length\n                        })\n                    }).then(res => res.json())\n                        .then(thor => {\n\n                            let g = [];\n                            // eslint-disable-next-line array-callback-return\n                            thor.map((loki, i) => {\n                                g.push(loki.progress);\n                            });\n                            this.setStateSynchronous({\n                                progress : g,\n                            });\n                        }))\n                }\n                });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevState.plant !== this.state.plant)\n        {\n            fetch(\"http://localhost:3000/get-cycle-data\", {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    plant: this.state.plant,\n                }),\n            })\n                .then(res => res.json())\n                .then(result => {\n                    this.setStateSynchronous({\n                        startdate: result.startdate,\n                        cycle: result.currentCycle,\n                        year : result.contractyear\n                    });\n                });\n            fetch('http://localhost:3000/zonedata', {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    plant: this.state.plant,\n                })\n            }).then(resp => resp.json())\n                .then(hello => {\n                    if(hello['status'] !== 'Success')\n                    {\n                        alert(hello['status']);\n                    }\n                    else {\n                        const p = hello['body'];\n                        let zones = [];\n                        let dccaps = [];\n                        let acacps = [];\n                        let tots = [];\n                        // eslint-disable-next-line array-callback-return\n                        p.map((zo, i) => {\n                            zones.push(zo['zone']);\n                            acacps.push(zo['accapacity']);\n                            dccaps.push(zo['dccapacity']);\n                            tots.push(zo['totalrows'])\n                        });\n                        this.setStateSynchronous({\n                            zone: zones,\n                            accap: acacps,\n                            dccap: dccaps,\n                            totalrows: tots,\n                            totalzones: p.length,\n                        }).then(hela => fetch('http://localhost:3000/zoneprogress',{\n                            method : 'post',\n                            headers : {\n                                'Content-Type' : 'application/json',\n                            },\n                            body : JSON.stringify({\n                                plant : this.state.plant,\n                                year : this.state.year,\n                                cycle : this.state.cycle,\n                                zonenum : zones.length\n                            })\n                        }).then(res => res.json())\n                            .then(thor => {\n\n                                let g = [];\n                                // eslint-disable-next-line array-callback-return\n                                thor.map((loki, i) => {\n                                    g.push(loki.progress);\n                                });\n                                this.setStateSynchronous({\n                                    progress : g,\n                                });\n                            }))\n                    }\n                });\n        }\n    }\n\n    handler2(number) {\n        this.setState({\n            number: number,\n        });\n    }\n\n    setPlant(plant){\n        this.setStateSynchronous({\n            plant : plant,\n        })\n            .then(res => {\n                sessionStorage.setItem('plant',this.state.plant);\n            });\n    }\n\n    handler3() {\n        let body = document.getElementById('least');\n        body.classList.toggle('fill');\n        let body1 = document.getElementById('keast');\n        body1.classList.toggle('fill');\n        let body2 = document.getElementById('beast');\n        body2.classList.toggle('fill');\n    }\n\n    render() {\n        if (this.state.redirect) {\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n\n        let today = new Date();\n        let date = ('0' + today.getDate()).slice(-2) + '/' + ('0' + (today.getMonth() + 1)).slice(-2) + '/' + today.getFullYear();\n        let cards = [];\n        for (let i = 0; i < this.state.totalzones; i++) {\n            cards.push(<MaterialCard key={i}\n                                     zone={this.state.zone[i]}\n                                      rows={this.state.totalrows[i]}\n                                      today={date}\n                                      accap={this.state.accap[i]}\n                                      dccap={this.state.dccap[i]}\n                                      progress={this.state.progress[i]}\n                                      onCardClicked={this.onCardClicked}\n            />);\n        }\n\n        return (\n            <div>\n                <FinalNav fname={sessionStorage.getItem('fname')}\n                          role={sessionStorage.getItem('role')}\n                          plants={sessionStorage.getItem('plants')}\n                          pr={this.pr}\n                          handler1={this.handler2}\n                          number={this.state.zone}\n                          plantstats={false}\n                          handle={this.handler3}\n                          setplant={this.setPlant}\n                />\n                <div id='least' className='fill least'>\n                    {cards}\n                </div>\n                <div id='keast' className='fill surya least'>\n                    {this.state.details}\n                    <Button onClick={this.onButtonClicked1} variant=\"contained\" className=\"outlined-button\" color=\"primary\">\n                        Get Data For another Zone\n                    </Button>\n                </div>\n                <div id='beast' className='fill surya least'>\n                    {this.state.data}\n                    <Button onClick={this.onButtonClicked2} variant=\"contained\" className=\"outlined-button\" color=\"primary\">\n                        Get Data For another Block\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    onNumberFixed(event) {\n        this.setState({\n            zone: Number(event.target.value),\n        });\n    }\n\n    onCycleFixed(event) {\n        this.setState({\n            current: Number(event.target.value),\n        });\n    }\n\n    onRowFixed(event) {\n        this.setState({\n            row: Number(event.target.value),\n        });\n    }\n\n    onButtonClicked1(e){\n        e.preventDefault();\n        document.getElementById('least').style.display = 'grid';\n        document.getElementById('keast').style.display = 'none';\n        document.getElementById('beast').style.display = 'none';\n    }\n\n    onButtonClicked2(e){\n        e.preventDefault();\n        document.getElementById('least').style.display = 'none';\n        document.getElementById('keast').style.display = 'grid';\n        document.getElementById('beast').style.display = 'none';\n    }\n\n    onButtonClicked(e, block, inverter, smb){\n        e.preventDefault();\n        fetch(\"http://localhost:3000/getblockdata\",{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n                zone : this.state.zoneIndividual,\n                block : block,\n                cycle : this.state.cycle,\n                year : this.state.year,\n                inverter : inverter,\n                smb : smb,\n            })\n        }).then(res=>res.json())\n            .then(delta => {\n                let del = [];\n                // eslint-disable-next-line array-callback-return\n                delta.map((delt, i) => {\n                    let b = <BlockStats\n                                key={i}\n                                row={i+1}\n                                fmod={delt[\"fmod\"]}\n                                cleanStatus={delt[\"cleanstatus\"]}\n                                updateDate={delt[\"updateDate\"]}\n                                updateTime={delt[\"updateTime\"]}\n                                comments={delt[\"comments\"]}\n                            />;\n                    del.push(b);\n                });\n                this.setStateSynchronous({\n                    data: del,\n                });\n            });\n        document.getElementById('least').style.display = 'none';\n        document.getElementById('keast').style.display = 'none';\n        document.getElementById('beast').style.display = 'grid';\n    }\n\n    onCardClicked(int) {\n        let blocks = [];\n        let totalrows = [];\n        let totalmod = [];\n        let inverters = [];\n        let smb = [];\n        let fmod = [];\n        let tmod = [];\n        let wp = [];\n        this.setState({\n            zoneIndividual : int,\n        });\n        fetch('http://localhost:3000/blockdata',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                \"plant\" : this.state.plant,\n                \"zone\" : int\n            })\n        })\n        .then(res => res.json())\n            .then(hell => {\n                if(hell['status']!== 'Success')\n                {\n                    alert(hell['status']);\n                }\n                else{\n                    // eslint-disable-next-line array-callback-return\n                    hell.body.map((hel, i) => {\n                        blocks.push(hel[\"blockname\"]);\n                        totalrows.push(hel[\"totalrows\"]);\n                        totalmod.push(hel[\"totalmodules\"]);\n                        inverters.push(hel[\"inverter\"]);\n                        smb.push(hel[\"smb\"]);\n                        fmod.push(hel[\"_40mrows\"]);\n                        tmod.push(hel[\"_20mrows\"]);\n                        wp.push(hel[\"wp\"]);\n                    });\n                    let deta = [];\n                    for (let i = 0; i < blocks.length; i++) {\n                        deta.push(<ZoneDetails\n                            key={i}\n                            block={blocks[i]}\n                            totalrows={totalrows[i]}\n                            totalmod={totalmod[i]}\n                            inv={inverters[i]}\n                            smb={smb[i]}\n                            fmod={fmod[i]}\n                            tmod={tmod[i]}\n                            wp={wp[i]}\n                            zone={int}\n                            onButton={this.onButtonClicked}\n                        />)\n                    }\n                    this.setStateSynchronous({\n                        details: deta,\n                    }).then(deter => {\n                        document.getElementById('least').style.display = 'none';\n                        document.getElementById('beast').style.display = 'none';\n                        document.getElementById('keast').style.display = 'grid';\n                    });\n                }\n            })\n\n    }\n}\n\nexport default withRouter(ZoneStats);","import React from \"react\";\nimport {Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    useMediaQuery,\n    useTheme,\n    TextField,\n    RadioGroup,\n    FormControlLabel,\n    FormControl,\n    FormLabel,\n    makeStyles,\n    Radio\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n    },\n    group: {\n        margin: theme.spacing(1, 0),\n    },\n    textfield :{\n        paddingBottom : 10,\n    }\n}));\n\nexport default function UpdateValues({ updateIt,open,handleClose }) {\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        updatedate : '',\n        updatetime : '',\n        updatestatus : false,\n        updatecomments : ''\n    });\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    function handleSubmit() {\n        updateIt(values);\n    }\n\n    const handleChange = name => event => {\n        setValues({...values, [name]: event.target.value});\n        console.log(values);\n    };\n\n    return (\n        <div>\n            <Dialog\n                fullScreen={fullScreen}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n            >\n                <DialogTitle id=\"responsive-dialog-title\">\n                    {\"Status Update\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Update the Info of the Cycle Here\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"normal\"\n                        className={classes.textfield}\n                        id=\"date\"\n                        label=\"Update Date(yyyy-mm-dd)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        onChange={handleChange('updatedate')}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"normal\"\n                        className={classes.textfield}\n                        id=\"time\"\n                        label=\"Update Time(hh:mm:ss)\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        onChange={handleChange('updatetime')}\n                    />\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <RadioGroup\n                        aria-label=\"Clean Status\"\n                        name=\"cleanstatus\"\n                        className={classes.group}\n                        onChange={handleChange('updatestatus')}\n                    >\n                        <FormLabel component=\"legend\">Clean Status</FormLabel>\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"Cleaned\" />\n                        <FormControlLabel value=\"0\" control={<Radio />} label=\"Not Cleaned\" />\n                    </RadioGroup>\n                    </FormControl>\n                    <TextField\n                        autoFocus\n                        margin=\"normal\"\n                        className={classes.textfield}\n                        id=\"Comments\"\n                        label=\"Comments\"\n                        type=\"text\"\n                        fullWidth\n                        multiline\n                        onChange={handleChange('updatecomments')}\n                    />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\" variant=\"contained\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\" autoFocus>\n                        Update\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React,{ useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button, Card, CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardActions from \"@material-ui/core/CardActions\";\nimport './hello.css';\nimport UpdateValues from \"../../Card/Dialog\";\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: '25vw',\n        maxWidth : '40vw',\n        minHeight : 200,\n        textAlign : 'end',\n        position: 'relative',\n        borderRadius : 20,\n    },\n    title: {\n        fontSize: 14,\n    },\n    orangeAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: 'black',\n    },\n    top : {\n        position : 'absolute',\n        top : 50,\n        right : 5,\n    },\n    button : {\n        position : 'absolute',\n        bottom : 5,\n        left : 4,\n    },\n    button1 : {\n        position : 'absolute',\n        bottom : 45,\n        left : 0,\n    }\n});\n\nexport default function RowStats({ cycle, plant, date, zone, row, block, inverter, smb, cleanStatus, updateDate, updateTime, getinfo }) {\n    const classes = useStyles();\n    const [open,setOpen] = useState(false);\n\n    function handleClose() {\n        setOpen(false);\n    }\n\n    function handleOpen() {\n        setOpen(true);\n    }\n\n    function setInfo(values){\n        setOpen(false);\n        fetch(\"http://localhost:3000/cycleStats\",{\n            method : 'put',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                plant : plant,\n                date : date,\n                zone : zone,\n                row : row,\n                block : block,\n                inverter : inverter,\n                SMB : smb,\n                cycle : cycle,\n                newdate : values.updatedate,\n                newStatus : Number(values.updatestatus),\n                newTime : values.updatetime,\n                newComment : values.updatecomments\n            }),\n        }).then(res =>res.json())\n            .then(quill => console.log(quill));\n    }\n\n    return (\n        <div className='gmd-1'>\n            <UpdateValues open={open} updateIt={setInfo} handleClose={handleClose}/>\n            <Card className={classes.card}>\n                <CardHeader\n                    avatar={<Avatar className={classes.orangeAvatar}>{cycle}</Avatar>}\n                />\n                <CardContent className={classes.top}>\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        cleanStatus == 1 ? <Typography variant=\"h5\" component=\"h2\">Clean Status : Cleaned</Typography> : <Typography variant=\"h5\" component=\"h2\">Clean Status : Not Cleaned</Typography>\n                    }\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        cleanStatus == 1 ? <Typography variant=\"body2\" component=\"h2\"> Update Date : {updateDate} </Typography> : <Typography variant=\"body2\" component=\"h2\">Will be cleaned Soon</Typography>\n                    }\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        cleanStatus == 1 ? <Typography variant=\"body2\" component=\"h2\"> Update Time : {updateTime} </Typography> : ''\n                    }\n                </CardContent>\n                <CardActions>\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        cleanStatus == 1 ? <Button onClick={(e)=>getinfo(cycle,e)} color=\"primary\" className={classes.button}>Get More Info</Button> : ''\n                    }\n                    {\n                        // eslint-disable-next-line eqeqeq\n                        (sessionStorage.getItem('role') === 'admin') ? <Button onClick={handleOpen} color=\"secondary\" className={classes.button1}>Edit The Info</Button> : ''\n                    }\n                </CardActions>\n            </Card>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport {Button, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap : 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n        height : 600,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        transform: 'translateZ(0)',\n    },\n    bottom : {\n        paddingBottom : 20,\n    },\n    top : {\n        paddingTop : 20,\n    }\n}));\n\nexport default function ImageGrid({ tileData,cyc,oncl }) {\n    const classes = useStyles();\n    const tiles = [];\n\n    // eslint-disable-next-line array-callback-return\n    tileData.map((tile,i) => {\n        tiles.push(<GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title}/>\n            <GridListTileBar\n                title={tile.title}\n            />\n        </GridListTile>);\n    });\n\n    return (\n        <div>\n            <Typography className={classes.bottom} variant='h5' color='primary'>\n                Cycle {cyc}\n            </Typography>\n            <div className={classes.root}>\n                <GridList cellHeight={600} className={classes.gridList} cols={2}>\n                    {tiles}\n                </GridList>\n            </div>\n            <div className={classes.top}>\n                <Button onClick={oncl} variant=\"contained\" className=\"outlined-button\" color=\"primary\">\n                    Go Back\n                </Button>\n            </div>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './textfields.css';\nimport './plantstats.css';\nimport FinalNav from \"../../Navigation/FinalNav\";\nimport {Redirect, withRouter} from \"react-router\";\nimport {TextField, Button, Divider} from '@material-ui/core';\nimport {CloudDownload} from '@material-ui/icons';\nimport RowStats from './rowstats';\nimport ImageGrid from \"../../Card/CleanImages\";\n\nclass RowEnquiry extends Component {\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                number: 1,\n                zone: 1,\n                row: 1,\n                block: 'A1',\n                inverter: '1.1',\n                SMB: \"1.1.3\",\n                redirect: false,\n                plant: sessionStorage.getItem('plant') !== null ? sessionStorage.getItem('plant') : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n                startdate: '',\n                endDate: '',\n                year: 0,\n                cleanedStatus: [],\n                forty: [],\n                updateDate: [],\n                updateTime: [],\n                cycls: [],\n                cardData: [],\n                cycle: 1,\n            };\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onBlockChange = this.onBlockChange.bind(this);\n        this.onInverterChange = this.onInverterChange.bind(this);\n        this.onSMBChange = this.onSMBChange.bind(this);\n        this.onButtonClicked = this.onButtonClicked.bind(this);\n        this.handler2 = this.handler2.bind(this);\n        this.handler3 = this.handler3.bind(this);\n        this.setPlant = this.setPlant.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.getInfo = this.getInfo.bind(this);\n        this.onButtonClicked1 = this.onButtonClicked1.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle: \"\",\n        select: \"\",\n        startdate: \"\",\n    };\n\n    componentDidMount() {\n        if (!sessionStorage.getItem('token')) {\n            this.setState({\n                redirect: true,\n            });\n        }\n\n        fetch('http://localhost:3000/get-cycle-data', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                let {startdate, endDate, currentCycle, contractyear} = data;\n                this.setState({\n                    startdate: startdate,\n                    endDate: endDate,\n                    number: currentCycle,\n                    year: contractyear,\n                });\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.plant !== this.state.plant) {\n            fetch('http://localhost:3000/get-cycle-data', {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    plant: this.state.plant,\n                })\n            })\n                .then(res => res.json())\n                .then(data => {\n                    let {startdate, endDate, currentCycle, contractyear} = data;\n                    this.setState({\n                        startdate: startdate,\n                        endDate: endDate,\n                        number: currentCycle,\n                        year: contractyear,\n                    });\n                })\n        }\n    }\n\n    handler3() {\n        if (document.getElementById('hello').style.display !== 'none') {\n            let body = document.getElementById('hello');\n            body.classList.toggle('fill');\n        } else if (document.getElementById('jel').style.display !== 'none') {\n            let body = document.getElementById('jel');\n            body.classList.toggle('fill');\n        }\n        let body = document.getElementById('images');\n        body.classList.toggle('fill');\n    }\n\n    setPlant(plant) {\n        this.setStateSynchronous({\n            plant: plant,\n        })\n            .then(res => {\n                sessionStorage.setItem('plant', this.state.plant);\n            });\n    }\n\n    handler2(number) {\n        this.setState({\n            number: number,\n        });\n    }\n\n    render() {\n        if (this.state.redirect) {\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n\n        return (\n            <div>\n                <FinalNav fname={sessionStorage.getItem('fname')}\n                          role={sessionStorage.getItem('role')}\n                          plants={sessionStorage.getItem('plants')}\n                          number={this.state.number}\n                          pr={this.pr}\n                          handler1={this.handler2}\n                          plantstats={false}\n                          handle={this.handler3}\n                          setplant={this.setPlant}\n                />\n                <form id='hello' className='hello fill'>\n                    <div className=\"bellll\">\n                        <TextField\n                            required\n                            id=\"outlined-zone\"\n                            label=\"Zone\"\n                            defaultValue=\"1\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.onEmailChange}\n                        />\n                        <TextField\n                            required\n                            id=\"outlined-row\"\n                            label=\"Row\"\n                            defaultValue=\"1\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.onPasswordChange}\n                        />\n                        <TextField\n                            required\n                            id=\"outlined-block\"\n                            label=\"Block Name\"\n                            defaultValue=\"A1\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.onBlockChange}\n                        />\n                        <TextField\n                            required\n                            id=\"outlined-inverter\"\n                            label=\"Inverter ID\"\n                            defaultValue=\"1.1\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.onInverterChange}\n                        />\n                        <TextField\n                            required\n                            className=\"outlined-smb\"\n                            label=\"SMB ID\"\n                            defaultValue=\"1.1.3\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.onSMBChange}\n                        />\n                        <Button onClick={this.onButtonClicked} variant=\"contained\" className=\"outlined-button\"\n                                color=\"primary\">\n                            Get Data\n                            <CloudDownload/>\n                        </Button>\n                    </div>\n                </form>\n                <div id='jel' className='fill'>\n                    <div className='key'>\n                        <div className='zone'>\n                            Zone : {this.state.zone}\n                        </div>\n                        <div className='block'>\n                            Block Name : {this.state.block}\n                        </div>\n                        <div className='inverter'>\n                            Inverter : {this.state.inverter}\n                        </div>\n                        <div className='smb'>\n                            SMB : {this.state.SMB}\n                        </div>\n                        <div className='rowtype'>\n                            {\n                                // eslint-disable-next-line eqeqeq\n                                (this.state.forty == 1) ? <h6>Row Type : 40 Module Row</h6> :\n                                    <h6>Row Type : 20 Module Row</h6>\n                            }\n                        </div>\n                    </div>\n                    <Divider/>\n                    <div className='grid11'>\n                        {this.state.cards}\n\n                    </div>\n                    <Button onClick={this.CSV.bind(this)} variant='outlined' className='outlined-button'\n                            color='secondary'>Download Data as CSV</Button><br/>\n                    <Button onClick={RowEnquiry.onButtonClicked2} variant=\"contained\" className=\"outlined-button\"\n                            color=\"primary\">\n                        Get Data For another Row\n                    </Button>\n                </div>\n                <div id='images' className='fill'>\n                    <ImageGrid\n                        tileData={this.state.cardData}\n                        cyc={this.state.cycle}\n                        oncl={this.onButtonClicked1}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    onEmailChange(event) {\n        this.setState(\n            {zone: Number(event.target.value)},\n        );\n    }\n\n    onPasswordChange(event) {\n        this.setState(\n            {row: Number(event.target.value)},\n        );\n    }\n\n    onBlockChange(event) {\n        this.setState(\n            {block: event.target.value.toString()},\n        );\n    }\n\n    onInverterChange(event) {\n        this.setState(\n            {inverter: event.target.value.toString()},\n        );\n    }\n\n    onSMBChange(event) {\n        this.setState(\n            {SMB: event.target.value.toString()},\n        );\n    }\n\n    CSV() {\n        fetch('http://localhost:3000/rowstatsdetailed', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n                year: this.state.year,\n                zone: this.state.zone,\n                row: this.state.row,\n                block: this.state.block,\n                inverter: this.state.inverter,\n                SMB: this.state.SMB,\n                cycle: this.state.number\n            })\n        }).then(res => res.json())\n            .then(hello => {\n                if (hello.Status === 'Success')\n                    RowEnquiry.JSONToCSVConvertor(hello['body'], `cycleDataforRow${this.state.row.toString()}`, true);\n                else\n                    alert(hello['Status']);\n            })\n    }\n\n    static JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {\n        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;\n        var CSV = '';\n        CSV += ReportTitle + '\\r\\n\\n';\n        if (ShowLabel) {\n            let row = \"\";\n            for (let index in arrData[0]) {\n                row += index + ',';\n            }\n            row = row.slice(0, -1);\n            CSV += row + '\\r\\n';\n        }\n        for (var i = 0; i < arrData.length; i++) {\n            // eslint-disable-next-line no-redeclare\n            var row = \"\";\n            // eslint-disable-next-line no-redeclare\n            for (var index in arrData[i]) {\n                row += '\"' + arrData[i][index] + '\",';\n            }\n            row.slice(0, row.length - 1);\n            CSV += row + '\\r\\n';\n        }\n        // eslint-disable-next-line eqeqeq\n        if (CSV == '') {\n            alert(\"Invalid data\");\n            return;\n        }\n        var fileName = \"MyReport_\";\n        fileName += ReportTitle.replace(/ /g, \"_\");\n        var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);\n        var link = document.createElement(\"a\");\n        link.href = uri;\n        link.style = \"visibility:hidden\";\n        link.download = fileName + \".csv\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    onButtonClicked(e) {\n        e.preventDefault();\n        fetch('http://localhost:3000/rowstats', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n                year: this.state.year,\n                zone: this.state.zone,\n                row: this.state.row,\n                block: this.state.block,\n                inverter: this.state.inverter,\n                SMB: this.state.SMB,\n                cycle: this.state.number\n            })\n        }).then(res => res.json())\n            .then(kill => {\n                if (kill.status === 'Error')\n                    alert(kill.body);\n                else {\n                    let q = [];\n                    let w = [];\n                    let e = [];\n                    let r = [];\n                    let cycs = [];\n                    // eslint-disable-next-line array-callback-return\n                    kill.body.map((killa, i) => {\n                        cycs.push(killa['cycle'])\n                        q.push(killa['_cleanstatus']);\n                        w.push(killa['_40mod']);\n                        e.push(killa['updateDate']);\n                        r.push(killa['updateTime']);\n                    });\n                    this.setStateSynchronous({\n                        cycls: cycs,\n                        cleanedStatus: q,\n                        forty: w[0],\n                        updateDate: e,\n                        updateTime: r,\n                    }).then(letr => {\n                        let dark = [];\n                        for (let i = 0; i < this.state.cleanedStatus.length; i++) {\n                            dark.push(<RowStats\n                                cycle={this.state.cycls[i]}\n                                plant={this.state.plant}\n                                date={this.state.startdate}\n                                zone={this.state.zone}\n                                row={this.state.row}\n                                block={this.state.block}\n                                inverter={this.state.inverter}\n                                smb={this.state.SMB}\n                                cleanStatus={this.state.cleanedStatus[i]}\n                                updateDate={this.state.updateDate[i]}\n                                updateTime={this.state.updateTime[i]}\n                                getinfo={this.getInfo}\n                            />);\n                        }\n                        this.setStateSynchronous({\n                            cards: dark,\n                        });\n                    })\n                        .then(happy => {\n                            document.getElementById('hello').style.display = 'none';\n                            document.getElementById('jel').style.display = 'grid';\n                            document.getElementById('images').style.display = 'none';\n                        });\n                }\n            });\n    }\n\n    onButtonClicked1() {\n        this.setStateSynchronous({\n            cardData: [],\n        });\n        document.getElementById('hello').style.display = 'none';\n        document.getElementById('jel').style.display = 'grid';\n        document.getElementById('images').style.display = 'none';\n    }\n\n    static onButtonClicked2() {\n        document.getElementById('hello').style.display = 'flex';\n        document.getElementById('jel').style.display = 'none';\n        document.getElementById('images').style.display = 'none';\n    }\n\n    getInfo(cyc) {\n        let dat = [];\n        fetch('http://localhost:3000/getimages', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                plant: this.state.plant,\n                cycle: cyc,\n                zone: this.state.zone,\n                row: this.state.row,\n                block: this.state.block,\n                inverter: this.state.inverter,\n                smb: this.state.SMB,\n                year: this.state.year,\n            })\n        })\n            .then(res => res.json())\n            .then(hello => {\n                dat.push({\n                    img: hello.precleaned,\n                    title: 'Pre Cleaned Image',\n                });\n                dat.push({\n                    img: hello.postcleaned,\n                    title: 'Post Cleaned Image',\n                });\n                this.setStateSynchronous({\n                    cardData: dat,\n                    cycle: cyc\n                })\n                    .then(naan => {\n                        document.getElementById('hello').style.display = 'none';\n                        document.getElementById('jel').style.display = 'none';\n                        document.getElementById('images').style.display = 'flex';\n                    });\n            });\n    }\n\n}\n\nexport default withRouter(RowEnquiry);","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './textfields.css';\nimport {Redirect} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\n\nclass Register extends Component{\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                FullNameChange : \"\",\n                RoleChange : \"\",\n                EmailChange : \"\",\n                UserNameChange : \"\",\n                PasswordChange : \"\",\n                PlantsChange : \"\",\n                redirect : false,\n                plants : [],\n            };\n        this.onFullChange = this.onFullChange.bind(this);\n        this.onRoleChange = this.onRoleChange.bind(this);\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onUserNameChange = this.onUserNameChange.bind(this);\n        this.onPlantsChecked = this.onPlantsChecked.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onSubmitClicked = this.onSubmitClicked.bind(this);\n        this.onCancelClicked = this.onCancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        let h = [];\n        fetch('http://localhost:3000/getplants').then(res=>res.json())\n            .then(result => {\n                // eslint-disable-next-line array-callback-return\n                result.map((plant,index) => {\n                    h.push(<div className=\"input-group mb-3\">\n                                <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\">\n                                        <input type=\"checkbox\" value={plant.plant_name} name=\"plant\"/>\n                                    </div>\n                                    <em className=\"form-control\">{plant.plant_name}</em>\n                                </div>\n                    </div>);\n                })\n            }).then(red =>{\n                this.setState({\n                    plants : h,\n                });\n        })\n    }\n\n    render() {\n        const { redirect } = this.state;\n        if (redirect) {\n            return <Redirect to='/signin'/>;\n        }\n        return (\n            <div>\n                <form className='hello'>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputFullName1\">Full Name:</label>\n                        <input type=\"text\"\n                               name=\"fname\"\n                               className=\"form-control\"\n                               id=\"exampleInputFullName1\"\n                               aria-describedby=\"emailHelp\"\n                               placeholder=\"Full Name\"\n                               onChange={this.onFullChange}\n                               required\n                        />\n                        <label htmlFor=\"exampleInputRole1\">Role:</label>\n                        <input type=\"text\"\n                               name=\"role\"\n                               className=\"form-control\"\n                               id=\"exampleInputRole1\"\n                               placeholder=\"Role\"\n                               onChange={this.onRoleChange}\n                               required\n                        />\n                        <label htmlFor=\"exampleInputEmail1\">Email:</label>\n                        <input type=\"email\"\n                               name=\"email\"\n                               className=\"form-control\"\n                               id=\"exampleInputEmail1\"\n                               placeholder=\"Email\"\n                               onChange={this.onEmailChange}\n                               required\n                        />\n                        <label htmlFor=\"exampleInputUserName\">User Name:</label>\n                        <input type=\"text\"\n                               name=\"uid\"\n                               className=\"form-control\"\n                               id=\"exampleInputUserName\"\n                               placeholder=\"User Name\"\n                               onChange={this.onUserNameChange}\n                               required\n                        /><br/>\n                        <div>\n                            <h4>Select the Plants:</h4>\n                            {this.state.plants}\n                        </div>\n                        <label htmlFor=\"exampleInputPassword\">Password</label>\n                        <input type=\"password\"\n                               name=\"password\"\n                               className=\"form-control\"\n                               id=\"exampleInputPassword\"\n                               placeholder=\"Password\"\n                               onChange={this.onPasswordChange}\n                               required\n                        />\n                        <br/>\n                        <input type='submit' onClick={this.onSubmitClicked} value=\"Register\" className='btn btn-success' />\n                        <input type='button' onClick={this.onCancelClicked} value='Cancel' className='btn btn-danger' />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n    onFullChange(event) {\n        this.setState(\n            {FullNameChange : event.target.value},\n        );\n    }\n\n    onRoleChange(event) {\n        this.setState(\n            {RoleChange : event.target.value},\n        );\n    }\n\n    onEmailChange(event) {\n        this.setState(\n            {EmailChange : event.target.value},\n        );\n    }\n\n    onUserNameChange(event) {\n        this.setState(\n            {UserNameChange : event.target.value},\n        );\n    }\n\n    onPasswordChange(event) {\n        this.setState(\n            {PasswordChange : event.target.value},\n        );\n        this.onPlantsChecked();\n        console.log(this.state);\n    }\n\n    onPlantsChecked() {\n        const checkboxes = document.getElementsByName('plant');\n        let val = \"\";\n        for (let i=0;i<checkboxes.length;i++)\n        {\n            if (checkboxes[i].checked)\n            {\n                val += checkboxes[i].value+\"&\";\n            }\n        }\n        this.setState({\n            PlantsChange : val,\n        })\n    }\n\n    onSubmitClicked = (e) => {\n        e.preventDefault();\n        fetch('http://localhost:3000/register-user',\n            {\n                method: \"post\",\n                headers :{\n                    \"Content-Type\" : 'application/json',\n                },\n                body: JSON.stringify({\n                    fname : this.state.FullNameChange,\n                    role : this.state.RoleChange,\n                    email : this.state.EmailChange,\n                    uid : this.state.UserNameChange,\n                    plants : this.state.PlantsChange,\n                    password : this.state.PasswordChange\n                })\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if(data['status'] === 'success')\n                {\n                    this.setState({\n                        redirect : true,\n                    })\n                }\n                else{\n                    alert(\"try Again\");\n                }\n            });\n\n    };\n\n    onCancelClicked(){\n        this.props.history.goBack();\n    }\n}\n\nexport default withRouter(Register);\n\n\n// fname, role, email, uid, plants, password","import jQuery from 'jquery';\n\n(function ($) {\n\n\n    /*==================================================================\n    [ Validate ]*/\n    let input = $('.validate-input .input100');\n\n    $('.validate-form').on('submit',function(){\n        let check = true;\n\n        for(let i=0; i<input.length; i++) {\n            if(validate(input[i]) === false){\n                showValidate(input[i]);\n                check=false;\n            }\n        }\n\n        return check;\n    });\n\n\n    $('.validate-form .input100').each(function(){\n        $(this).focus(function(){\n           hideValidate(this);\n        });\n    });\n\n    function validate (input) {\n        if($(input).attr('type') === 'email' || $(input).attr('name')=== 'email') {\n            if($(input).val().trim().match(/^([a-zA-Z0-9_\\-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{1,5}|[0-9]{1,3})(]?)$/) == null) {\n                return false;\n            }\n        }\n        else {\n            if($(input).val().trim() === ''){\n                return false;\n            }\n        }\n    }\n\n    function showValidate(input) {\n        let thisAlert = $(input).parent();\n\n        $(thisAlert).addClass('alert-validate');\n    }\n\n    function hideValidate(input) {\n        let thisAlert = $(input).parent();\n\n        $(thisAlert).removeClass('alert-validate');\n    }\n\n\n\n})(jQuery);\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'font-awesome/css/font-awesome.css';\nimport 'animate';\nimport '../../../node_modules/animate.css/animate.css';\nimport 'hamburgers';\nimport 'select2/dist/css/select2.css';\nimport 'select2/dist/js/select2.full';\nimport Tilt from \"react-tilt\";\nimport './css/main.css';\nimport './css/util.css';\nimport './js/main';\n\n\nclass NewSignIn extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                UsernameChange : \"\",\n                passwordChange : \"\",\n            };\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onSubmitClicked = this.onSubmitClicked.bind(this);\n    }\n\n    render() {\n        return (\n            <div className=\"limiter\">\n                <div className=\"container-login100\">\n                    <div className=\"wrap-login100\">\n                        <Tilt className=\"Tilt\" options={{scale : 1.1}} >\n                            <div className=\"login100-pic Tilt-inner\" style={{ height: 250, width: 250 }} data-tilt>\n                                <img src={require('./0.png')} alt=\"IMG\" />\n                            </div>\n                        </Tilt>\n                        <form className=\"login100-form validate-form\">\n\t\t\t\t\t        <span className=\"login100-form-title\">\n\t\t\t\t\t\t        Member Login\n\t\t\t\t\t        </span>\n                            <div className=\"wrap-input100 validate-input\"\n                                 data-validate=\"Valid email is required: ex@abc.xyz\">\n                                <input onChange={this.onEmailChange} className=\"input100\" type=\"text\" name=\"email\" placeholder=\"Email\" />\n                                    <span className=\"focus-input100\"></span>\n                                    <span className=\"symbol-input100\">\n\t\t\t\t\t\t\t    <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t</span>\n                            </div>\n                            <div className=\"wrap-input100 validate-input\" data-validate=\"Password is required\">\n                                <input onChange={this.onPasswordChange} className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"Password\" />\n                                    <span className=\"focus-input100\"></span>\n                                    <span className=\"symbol-input100\">\n\t\t\t\t\t\t\t<i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t</span>\n                            </div>\n\n                            <div className=\"container-login100-form-btn\">\n                                <button onClick={this.onSubmitClicked} className=\"login100-form-btn\">\n                                    Login\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    onEmailChange(event) {\n        this.setState(\n            {UsernameChange : event.target.value},\n        );\n    }\n\n    onPasswordChange(event) {\n        this.setState(\n            {passwordChange : event.target.value},\n        );\n    }\n\n    onSubmitClicked = (e) => {\n        e.preventDefault();\n        fetch('http://localhost:3000/signin',\n            {\n                method: \"post\",\n                headers :{\n                    \"Content-Type\" : 'application/json',\n                },\n                body: JSON.stringify({\n                    username : this.state.UsernameChange,\n                    password : this.state.passwordChange\n                })\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if(data['status'] === 'success')\n                {\n                    sessionStorage.setItem('token', data['token']);\n                    let { fname,role,plants } = data['body'][0];\n                    this.props.handler(fname,role,plants);\n                    this.props.history.push('/plantstats');\n                }\n                else\n                {\n                    alert(\"Enter the Correct Credentials!\");\n                }\n            });\n\n    }\n}\n\nexport default NewSignIn;","import React from 'react';\nimport './QR.css';\nimport * as jsPDF from 'jspdf';\nimport FinalNav from \"../Navigation/FinalNav\";\nimport {Redirect} from \"react-router\";\nconst QRious = require('qrious');\n\nconst styles = {\n    root: {\n        fontFamily: 'sans-serif',\n    },\n    h1: {\n        textAlign: 'center',\n    },\n    qrcode1: {\n        display : 'grid',\n        justifyContent : 'center',\n    },\n};\n\nexport default class QRCodeGen extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                zone: 0,\n                row: 0,\n                block: '',\n                inverter: 0.0,\n                SMB: '',\n                redirect : false,\n            };\n\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onBlockChange = this.onBlockChange.bind(this);\n        this.onInverterChange = this.onInverterChange.bind(this);\n        this.onSMBChange = this.onSMBChange.bind(this);\n        this.onSMBChange = this.onSMBChange.bind(this);\n        this.onButtonClicked = this.onButtonClicked.bind(this);\n        this.validate = this.validate.bind(this);\n        this.func = this.func.bind(this);\n    }\n\n    handler3(){\n        if(document.getElementById('bel').style.display !== 'none'){\n            let body = document.getElementById('bel');\n            body.classList.toggle('fill');\n        }\n        let body = document.getElementById('jel');\n        body.classList.toggle('fill');\n    }\n\n    pr = {\n        cycle : ``,\n        select : ``,\n        startDate : \"\",\n        endDate : \"\",\n    };\n\n    componentDidMount() {\n        if (!sessionStorage.getItem('token')) {\n            this.setState({\n                redirect: true,\n            });\n        }\n    }\n\n    render() {\n\n        if(this.state.redirect){\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n\n        return (\n            <div>\n                <FinalNav fname={sessionStorage.getItem('fname')}\n                          role={sessionStorage.getItem('role')}\n                          plants={sessionStorage.getItem('plants')}\n                          pr={this.pr}\n                          handler = {this.props.handler}\n                          plantstats={false}\n                          handle={this.handler3}\n                />\n                <div id='bel' className='fill'>\n                    <form className='hello'>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\">Zone Number</label> <br/>\n                            <input type=\"number\"\n                                   name=\"zone\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputEmail1\"\n                                   aria-describedby=\"emailHelp\"\n                                   placeholder=\"Enter Zone Number\"\n                                   onChange={this.onEmailChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">Row Number</label><br/>\n                            <input type=\"number\"\n                                   name=\"row\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter Row Number\"\n                                   onChange={this.onPasswordChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">Block Number</label><br/>\n                            <input type=\"text\"\n                                   name=\"block\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter Block Number\"\n                                   onChange={this.onBlockChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">Inverter ID</label><br/>\n                            <input type=\"number\"\n                                   name=\"inverter\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter Inverter ID\"\n                                   onChange={this.onInverterChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">SMB ID</label><br/>\n                            <input type=\"text\"\n                                   name=\"SMB\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter SMB ID\"\n                                   onChange={this.onSMBChange}\n                            />\n                            <br/>\n                            <button onClick={this.onButtonClicked} className=\"btn btn-success button\" id=\"rowstats\">\n                                Get the QR code\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                <div id='jel' className='fill' style={styles.root}>\n                    <canvas id='hellll' style={styles.qrcode1}></canvas>\n                    <div id='but'>\n                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                        <a id='download' download='hello.png' className='btn btn-success' onClick={this.func}>Download as PDF</a>\n                        <button className='btn btn-dark' onClick={this.onButtonClicked1}>Get QR for another row</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    onButtonClicked(e) {\n        e.preventDefault();\n        let canvas = document.querySelector('canvas');\n\n        // eslint-disable-next-line no-unused-vars\n        let qr = new QRious({\n            background: 'white',\n            backgroundAlpha: 1,\n            foreground: 'black',\n            foregroundAlpha: 1,\n            level: 'H',\n            padding: 25,\n            size: 300,\n            value: JSON.stringify({\n                zone : this.state.zone,\n                row_num : this.state.row,\n                blockname : this.state.block,\n                inverter : this.state.inverter,\n                smb : this.state.SMB,\n            }),\n            element: canvas,\n        });\n        if (!this.validate()) {\n            document.getElementById('bel').style.display = 'none';\n            document.getElementById('jel').style.display = 'grid';\n        } else {\n            alert('All the fields are required.');\n        }\n    }\n\n    validate() {\n        return this.state.zone === 0 && this.state.row === 0 && this.state.block === '' && this.state.inverter === 0.0 && this.state.SMB === '';\n    }\n\n    onEmailChange(event) {\n        this.setState(\n            {zone: Number(event.target.value)},\n        );\n    }\n\n    onPasswordChange(event) {\n        this.setState(\n            {row: Number(event.target.value)},\n        );\n    }\n\n    onBlockChange(event) {\n        this.setState(\n            {block: event.target.value.toString()},\n        );\n    }\n\n    onInverterChange(event) {\n        this.setState(\n            {inverter: Number(event.target.value)},\n        );\n    }\n\n    onSMBChange(event) {\n        this.setState(\n            {SMB: event.target.value.toString()},\n        );\n    }\n\n    func(){\n        let name = `Zone: ${this.state.zone.toString()} Blockname: ${this.state.block} Row: ${this.state.row.toString()} Inverter: ${this.state.inverter.toString()} SMB: ${this.state.SMB}`;\n        const canvas = document.getElementById('hellll');\n        const imgData = canvas.toDataURL(\"image/jpeg\", 1.0);\n        const pdf = new jsPDF();\n        pdf.addImage(imgData, 'JPEG', 50, 50);\n        pdf.text(name, 30,140);\n        pdf.save(name+\".pdf\");\n    }\n\n    onButtonClicked1(e)\n    {\n        e.preventDefault();\n        document.getElementById('bel').style.display = 'grid';\n        document.getElementById('jel').style.display = 'none';\n    }\n\n}","import React from 'react';\nimport './QR.css';\nimport * as jsPDF from 'jspdf';\nimport FinalNav from \"../Navigation/FinalNav\";\nimport {Redirect} from \"react-router\";\nconst QRious = require('qrious');\n\nconst styles = {\n    root: {\n        fontFamily: 'sans-serif',\n    },\n    h1: {\n        textAlign: 'center',\n    },\n    qrcode1: {\n        textAlign: 'center',\n    },\n};\n\nexport default class QRCodeBlock extends React.Component {\n\n    pdf = new jsPDF();\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                zone: 0,\n                block: '',\n                inverter: 0.0,\n                SMB: '',\n                redirect :false,\n                row : 10,\n                plant : sessionStorage.getItem('plant') !== null ? sessionStorage.getItem('plant') : sessionStorage.getItem('plants').split('&')[0].toLowerCase(),\n            };\n\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onBlockChange = this.onBlockChange.bind(this);\n        this.onInverterChange = this.onInverterChange.bind(this);\n        this.onSMBChange = this.onSMBChange.bind(this);\n        this.onButtonClicked = this.onButtonClicked.bind(this);\n        this.validate = this.validate.bind(this);\n        this.func = this.func.bind(this);\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.setPlant = this.setPlant.bind(this);\n    }\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    pr = {\n        cycle : ``,\n        select : ``,\n        startdate : \"\",\n        endDate : \"\",\n    };\n\n    componentDidMount() {\n        if (!sessionStorage.getItem('token')) {\n            this.setState({\n                redirect: true,\n            });\n        }\n    }\n\n    handler3(){\n        if(document.getElementById('bel').style.display !== 'none'){\n            let body = document.getElementById('bel');\n            body.classList.toggle('fill');\n        }\n        let body = document.getElementById('jel');\n        body.classList.toggle('fill');\n    }\n\n    setPlant(plant){\n        this.setStateSynchronous({\n            plant : plant,\n        })\n            .then(res => {\n                sessionStorage.setItem('plant',this.state.plant);\n            });\n    }\n\n    render() {\n\n        if(this.state.redirect){\n            alert(\"SignIn to Access the Info\");\n            return <Redirect to='/signin'/>\n        }\n\n        return (\n            <div>\n                <FinalNav fname={sessionStorage.getItem('fname')}\n                          role={sessionStorage.getItem('role')}\n                          plants={sessionStorage.getItem('plants')}\n                          pr={this.pr}\n                          handler = {this.props.handler}\n                          plantstats={false}\n                          handle={this.handler3}\n                          setplant={this.setPlant}\n                />\n                <div id='bel' className='fill'>\n                    <form className='hello'>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\">Zone Number</label> <br/>\n                            <input type=\"number\"\n                                   name=\"zone\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputEmail1\"\n                                   aria-describedby=\"emailHelp\"\n                                   placeholder=\"Enter Zone Number\"\n                                   onChange={this.onEmailChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">Block Number</label><br/>\n                            <input type=\"text\"\n                                   name=\"block\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter Block Number\"\n                                   onChange={this.onBlockChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">Inverter ID</label><br/>\n                            <input type=\"number\"\n                                   name=\"inverter\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter Inverter ID\"\n                                   onChange={this.onInverterChange}\n                            />\n                            <br/>\n                            <label htmlFor=\"exampleInputPassword1\">SMB ID</label><br/>\n                            <input type=\"text\"\n                                   name=\"SMB\"\n                                   className=\"form-control\"\n                                   id=\"exampleInputPassword1\"\n                                   placeholder=\"Enter SMB ID\"\n                                   onChange={this.onSMBChange}\n                            />\n                            <br/>\n                            <button onClick={this.onButtonClicked} className=\"btn btn-success button\" id=\"rowstats\">\n                                Get the list of QR codes\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                <div id='jel' className='fill' style={styles.root}>\n                    <canvas id='hellll' style={styles.qrcode1}/>\n                    <div id='but'>\n                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                        <a id='download' download='hello.png' className='btn btn-success' onClick={this.func}>Download as PDF</a>\n                        <button className='btn btn-dark' onClick={this.onButtonClicked1}>Get QR for Another Block</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    onButtonClicked(e) {\n        e.preventDefault();\n        fetch('http://localhost:3000/getnumrows',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json'\n            },\n            body : JSON.stringify({\n                plant : this.state.plant,\n                block : this.state.block,\n                smb : this.state.SMB,\n                zone : this.state.zone,\n                inverter : this.state.inverter,\n            })\n        }).then(resp=>resp.json())\n            .then(res => {\n                this.setStateSynchronous({\n                    row : res.rows,\n                })\n                    .then(the => {\n                        for(let i=0;i<this.state.row;i++)\n                        {\n                            let canvas = document.querySelector('canvas');\n                            // eslint-disable-next-line no-unused-vars\n                            let qr = new QRious({\n                                background: 'white',\n                                backgroundAlpha: 0.94,\n                                foreground: 'black',\n                                foregroundAlpha: 1,\n                                level: 'H',\n                                padding: 25,\n                                size: 300,\n                                value: JSON.stringify({\n                                    zone : this.state.zone,\n                                    row_num : i+1,\n                                    blockname : this.state.block,\n                                    inverter : this.state.inverter,\n                                    smb : this.state.SMB,\n                                }),\n                                element: canvas,\n                            });\n                            let name = `Zone: ${this.state.zone.toString()} Row:${(i+1).toString()} Blockname: ${this.state.block} Inverter: ${this.state.inverter.toString()} SMB: ${this.state.SMB}`;\n                            console.log(name);\n                            const canv = document.getElementById('hellll');\n                            const imgData = canv.toDataURL(\"image/jpeg\", 1.0);\n                            this.pdf.addImage(imgData, 'JPEG', 65, (2*(i%2)*50+40));\n                            this.pdf.text(name, 35, (2*(i%2)*50+130));\n                            if(i%2===1)\n                                this.pdf.addPage();\n                        }\n                        if (!this.validate()) {\n                            document.getElementById('bel').style.display = 'none';\n                            document.getElementById('jel').style.display = 'grid';\n                        } else {\n                            alert('All the fields are required.');\n                        }\n                    }).catch(err => alert(\"Something went wrong\"));\n            });\n\n    }\n\n    validate() {\n        return this.state.zone === 0 && this.state.block === '' && this.state.inverter === 0.0 && this.state.SMB === '';\n    }\n\n    onEmailChange(event) {\n        this.setState(\n            {zone: Number(event.target.value)},\n        );\n    }\n\n    onBlockChange(event) {\n        this.setState(\n            {block: event.target.value.toString()},\n        );\n    }\n\n    onInverterChange(event) {\n        this.setState(\n            {inverter: Number(event.target.value)},\n        );\n    }\n\n    onSMBChange(event) {\n        this.setState(\n            {SMB: event.target.value.toString()},\n        );\n    }\n\n    func(){\n        let name = `Zone: ${this.state.zone.toString()} Blockname: ${this.state.block} Inverter: ${this.state.inverter.toString()} SMB: ${this.state.SMB}`;\n        this.pdf.save(name+\".pdf\");\n    }\n\n    onButtonClicked1(e)\n    {\n        e.preventDefault();\n        document.getElementById('bel').style.display = 'grid';\n        document.getElementById('jel').style.display = 'none';\n    }\n\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {TextField, Button} from '@material-ui/core';\nimport {PlaylistAdd, PlaylistAddCheck} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap : 'wrap',\n    },\n    textField: {\n        margin : 4,\n        width : 180,\n    },\n    div : {\n        margin : 10,\n    }\n}));\n\nexport default function PlantForm({ AddHandler,done }) {\n    const classes = useStyles();\n    const [values, setValues] = useState({\n        blockname : '',\n        totalrows : 0,\n        zone : 0,\n        inverter : '',\n        smb : '',\n        _40mrows : 0,\n        _20mrows : 0,\n        wp : 0,\n    });\n\n    const handleChange = name => event => {\n        setValues({...values, [name]: event.target.value});\n        console.log(values);\n    };\n\n    return (\n        <div className={classes.div}>\n            <form className={classes.container} autoComplete=\"off\">\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Block Name\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('blockname')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Total Rows\"\n                    value={ Number(values._40mrows) + Number(values._20mrows) }\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('totalrows')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Zone\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('zone')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Inverter\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('inverter')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"SMB\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('smb')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"FortyRows\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('_40mrows')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"TwentyRows\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('_20mrows')}\n                />\n                <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Watt Power\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    onChange={handleChange('wp')}\n                />\n                <Button onClick={(e) => AddHandler(values, e)}>\n                    <PlaylistAdd/>\n                </Button>\n                <Button onClick={(e) => done(values, e)}>\n                    <PlaylistAddCheck/>\n                </Button>\n            </form>\n        </div>\n    );\n}","import React,{Component} from 'react';\nimport PlantForm from './PlantForm';\nimport './createplant.css';\nimport {TextField, Typography, Button} from \"@material-ui/core\";\nimport {Redirect} from \"react-router\";\n\nclass CreatePlant extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            blockname : [],\n            totalrows : [],\n            zone : [],\n            inverter : [],\n            smb : [],\n            _40mrows : [],\n            _20mrows : [],\n            wp : [],\n            totalmodules : [],\n            textfields : [],\n            plant : '',\n            redirect : false,\n        };\n        this.setStateSynchronous = this.setStateSynchronous.bind(this);\n        this.addAnotherRow = this.addAnotherRow.bind(this);\n        this.plantname = this.plantname.bind(this);\n        this.onSubmitClicked = this.onSubmitClicked.bind(this);\n        this.doneAdding = this.doneAdding.bind(this);\n    }\n    i=1;\n\n    setStateSynchronous(stateUpdate) {\n        return new Promise(resolve => {\n            this.setState(stateUpdate, () => resolve());\n        });\n    }\n\n    addAnotherRow(values){\n        const { blockname,totalrows,zone,inverter,smb,_40mrows,_20mrows,wp } = values;\n        const a = this.state.blockname;\n        const b = this.state.totalrows;\n        const c = this.state.zone;\n        const d = this.state.inverter;\n        const f = this.state.smb;\n        const g = this.state._40mrows;\n        const h = this.state._20mrows;\n        const i = this.state.wp;\n        const j = this.state.totalmodules;\n        let totalMods = _40mrows*40 + _20mrows*20;\n\n        a.push(blockname);\n        b.push(totalrows);\n        c.push(zone);\n        d.push(inverter);\n        f.push(smb);\n        g.push(_40mrows);\n        h.push(_20mrows);\n        i.push(wp);\n        j.push(totalMods);\n\n        this.setStateSynchronous({\n            blockname : a,\n            totalrows : b,\n            zone : c,\n            inverter : d,\n            smb : f,\n            _40mrows : g,\n            _20mrows : h,\n            wp : i,\n            totalmodules : j,\n        }).then(lotte => {\n            this.i += 1;\n            let p = this.state.textfields;\n            p.push(<PlantForm\n                key={this.i}\n                AddHandler={this.addAnotherRow}\n                done={this.doneAdding}\n            />);\n            this.setStateSynchronous({\n                textfields : p,\n            });\n        });\n    }\n\n    doneAdding(values) {\n        const {blockname, totalrows, zone, inverter, smb, _40mrows, _20mrows, wp} = values;\n        const a = this.state.blockname;\n        const b = this.state.totalrows;\n        const c = this.state.zone;\n        const d = this.state.inverter;\n        const f = this.state.smb;\n        const g = this.state._40mrows;\n        const h = this.state._20mrows;\n        const i = this.state.wp;\n        const j = this.state.totalmodules;\n        let totalMods = _40mrows * 40 + _20mrows * 20;\n\n        a.push(blockname);\n        b.push(totalrows);\n        c.push(zone);\n        d.push(inverter);\n        f.push(smb);\n        g.push(_40mrows);\n        h.push(_20mrows);\n        i.push(wp);\n        j.push(totalMods);\n\n        this.setStateSynchronous({\n            blockname: a,\n            totalrows: b,\n            zone: c,\n            inverter: d,\n            smb: f,\n            _40mrows: g,\n            _20mrows: h,\n            wp: i,\n            totalmodules: j,\n        });\n    }\n\n    render() {\n        if(this.state.redirect)\n        {\n            return <Redirect to='/plantstats'/>\n        }\n        return (\n            <div id='hello123'>\n                <div>\n                    <Typography variant=\"h5\">Enter the Plant Name: (Plant Name should not contain any spaces use '_' instead)</Typography>\n                    <TextField\n                    required\n                    id=\"outlined-required\"\n                    label=\"Plant Name\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={this.plantname}\n                    />\n                <Typography id=\"PlantDetails\" variant=\"h6\" >Enter the Plant Details</Typography>\n                <PlantForm key={1} AddHandler={this.addAnotherRow} done={this.doneAdding}/>\n                </div>\n                {this.state.textfields.map((hel,i)=>{\n                    return hel\n                })}\n                <div id='submit'>\n                    <Button variant='contained' color='secondary' onClick={this.onSubmitClicked}>Create Plant</Button>\n                </div>\n            </div>\n        );\n    }\n\n    plantname(e) {\n        this.setStateSynchronous({\n            plant : e.target.value,\n        })\n    }\n\n    onSubmitClicked(e)\n    {\n        e.preventDefault();\n        fetch('http://localhost:3000/createplant',{\n            method : 'post',\n            headers : {\n                'Content-Type' : 'application/json',\n            },\n            body : JSON.stringify({\n                blocks : this.state.blockname,\n                totalrows : this.state.totalrows,\n                zone : this.state.zone,\n                inverter : this.state.inverter,\n                smb : this.state.inverter,\n                _40mrows : this.state._40mrows,\n                _20mrows : this.state._20mrows,\n                wp : this.state.wp,\n                totalmodules : this.state.totalmodules,\n                plant : this.state.plant,\n            }),\n        })\n            .then(res=>res.json())\n            .then(stark=> {\n                alert(\"The Plant is created\");\n                this.setState({\n                    redirect: true,\n                });\n            });\n\n    }\n}\n\nexport default CreatePlant;","import React, { Component } from 'react';\nimport './App.css';\nimport PlantStats from './Stats/plantstats/plantstats';\nimport {Route} from \"react-router\";\nimport {BrowserRouter, Redirect} from \"react-router-dom\";\nimport ZoneStats from \"./Stats/zonestats/zonestats\";\nimport RowEnquiry from \"./Stats/rowstats/rowenquiry\";\nimport Register from \"./Creating/register\";\nimport NewSignIn from \"./TextFields/SigninPage/New_Signin\";\nimport QRCodeGen from \"./QR/QRCode_Gen\";\nimport QRCodeBlock from \"./QR/QRCodeBlock\";\nimport CreatePlant from './Creating/CreatePlant';\nimport ResponsiveDialog from \"./Card/Dialog\";\nclass App extends Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            name : '',\n            role : '',\n            plants : '',\n            signedIn : false,\n            plant : \"\",\n        };\n        this.handler = this.handler.bind(this);\n    }\n\n    handler(fname, role, plants){\n        this.setState({\n            name: fname,\n            role : role,\n            plants : plants,\n            signedIn : true,\n        });\n        sessionStorage.setItem(\"fname\", fname);\n        sessionStorage.setItem(\"role\", role);\n        sessionStorage.setItem(\"plants\", plants);\n        sessionStorage.setItem('plant',plants.split('&')[0].toLowerCase());\n    }\n\n    render() {\n    return (\n      <div className=\"App\">\n          {\n                <BrowserRouter>\n                    <Route exact path=\"/\" render={() => (<Redirect to=\"/signin\" />)} />\n                    <Route path=\"/plantstats\" render={(props) => <PlantStats signedIn={this.state.signedIn} fname={this.state.name} role={this.state.role} plants={this.state.plants} {...props}/>}/>\n                    <Route path=\"/zonestats\" render={(props) => <ZoneStats signedIn={this.state.signedIn} fname={this.state.name} role={this.state.role} plants={this.state.plants} {...props}/>} />\n                    <Route path=\"/rowstats\" render={(props) => <RowEnquiry signedIn={this.state.signedIn} fname={this.state.name} role={this.state.role} plants={this.state.plants} {...props}/>} />\n                    <Route path=\"/register\" component={Register} />\n                    <Route path='/signin' render={(props) => <NewSignIn handler={this.handler} {...props}/>} />\n                    <Route path='/qrcode' render={(props) => <QRCodeGen handler={this.handler1} signedIn={this.state.signedIn} fname={this.state.name} role={this.state.role} plants={this.state.plants} {...props}/>}/>\n                    <Route path='/qrcode_block' render={(props) => <QRCodeBlock signedIn={this.state.signedIn} fname={this.state.name} role={this.state.role} plants={this.state.plants} {...props}/>}/>\n                    <Route path='/plant' component={CreatePlant}/>\n                    <Route path='/dialog' component={ResponsiveDialog}/>\n              </BrowserRouter>\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}